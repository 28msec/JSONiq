<?xml version="1.0"?>
<fo:root xmlns:fo="http://www.w3.org/1999/XSL/Format" font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" font-size="10pt" text-align="left" line-height="1.3" font-selection-strategy="character-by-character" line-height-shift-adjustment="disregard-shifts" writing-mode="lr-tb" language="en"><fo:layout-master-set><fo:simple-page-master master-name="blank" page-width="210mm" page-height="297mm" margin-top="15mm" margin-bottom="15mm" margin-left="19mm" margin-right="31mm"><fo:region-body display-align="center" margin-bottom="8mm" margin-top="11mm" margin-left="0in" margin-right="0in"/><fo:region-before region-name="xsl-region-before-blank" extent="9mm" precedence="true" display-align="before"/><fo:region-after region-name="xsl-region-after-blank" extent="5mm" precedence="true" display-align="after"/><fo:region-start border-width="0" padding="0" reference-orientation="90" region-name="xsl-region-outer-blank" precedence="false" extent="0in"/><fo:region-end border-width="0" padding="0" reference-orientation="90" region-name="xsl-region-inner-blank" precedence="false" extent="0in"/></fo:simple-page-master><fo:simple-page-master master-name="titlepage-first" page-width="210mm" page-height="297mm" margin-top="15mm" margin-bottom="15mm" margin-left="31mm" margin-right="19mm"><fo:region-body margin-bottom="8mm" margin-top="11mm" column-gap="12pt" column-count="1" margin-left="0in" margin-right="0in"/><fo:region-before region-name="xsl-region-before-first" extent="9mm" precedence="true" display-align="before"/><fo:region-after region-name="xsl-region-after-first" extent="5mm" precedence="true" display-align="after"/><fo:region-start border-width="0" padding="0" reference-orientation="90" region-name="xsl-region-inner-first" precedence="false" extent="0in"/><fo:region-end border-width="0" padding="0" reference-orientation="90" region-name="xsl-region-outer-first" precedence="false" extent="0in"/></fo:simple-page-master><fo:simple-page-master master-name="titlepage-odd" page-width="210mm" page-height="297mm" margin-top="15mm" margin-bottom="15mm" margin-left="31mm" margin-right="19mm"><fo:region-body margin-bottom="8mm" margin-top="11mm" column-gap="12pt" column-count="1" margin-left="0in" margin-right="0in"/><fo:region-before region-name="xsl-region-before-odd" extent="9mm" precedence="true" display-align="before"/><fo:region-after region-name="xsl-region-after-odd" extent="5mm" precedence="true" display-align="after"/><fo:region-start border-width="0" padding="0" reference-orientation="90" region-name="xsl-region-inner-odd" precedence="false" extent="0in"/><fo:region-end border-width="0" padding="0" reference-orientation="90" region-name="xsl-region-outer-odd" precedence="false" extent="0in"/></fo:simple-page-master><fo:simple-page-master master-name="titlepage-even" page-width="210mm" page-height="297mm" margin-top="15mm" margin-bottom="15mm" margin-left="19mm" margin-right="31mm"><fo:region-body margin-bottom="8mm" margin-top="11mm" column-gap="12pt" column-count="1" margin-left="0in" margin-right="0in"/><fo:region-before region-name="xsl-region-before-even" extent="9mm" precedence="true" display-align="before"/><fo:region-after region-name="xsl-region-after-even" extent="5mm" precedence="true" display-align="after"/><fo:region-start border-width="0" padding="0" reference-orientation="90" region-name="xsl-region-outer-even" precedence="false" extent="0in"/><fo:region-end border-width="0" padding="0" reference-orientation="90" region-name="xsl-region-inner-even" precedence="false" extent="0in"/></fo:simple-page-master><fo:simple-page-master master-name="lot-first" page-width="210mm" page-height="297mm" margin-top="15mm" margin-bottom="15mm" margin-left="31mm" margin-right="19mm"><fo:region-body margin-bottom="8mm" margin-top="11mm" column-gap="12pt" column-count="1" margin-left="0in" margin-right="0in"/><fo:region-before region-name="xsl-region-before-first" extent="9mm" precedence="true" display-align="before"/><fo:region-after region-name="xsl-region-after-first" extent="5mm" precedence="true" display-align="after"/><fo:region-start border-width="0" padding="0" reference-orientation="90" region-name="xsl-region-inner-first" precedence="false" extent="0in"/><fo:region-end border-width="0" padding="0" reference-orientation="90" region-name="xsl-region-outer-first" precedence="false" extent="0in"/></fo:simple-page-master><fo:simple-page-master master-name="lot-odd" page-width="210mm" page-height="297mm" margin-top="15mm" margin-bottom="15mm" margin-left="31mm" margin-right="19mm"><fo:region-body margin-bottom="8mm" margin-top="11mm" column-gap="12pt" column-count="1" margin-left="0in" margin-right="0in"/><fo:region-before region-name="xsl-region-before-odd" extent="9mm" precedence="true" display-align="before"/><fo:region-after region-name="xsl-region-after-odd" extent="5mm" precedence="true" display-align="after"/><fo:region-start border-width="0" padding="0" reference-orientation="90" region-name="xsl-region-inner-odd" precedence="false" extent="0in"/><fo:region-end border-width="0" padding="0" reference-orientation="90" region-name="xsl-region-outer-odd" precedence="false" extent="0in"/></fo:simple-page-master><fo:simple-page-master master-name="lot-even" page-width="210mm" page-height="297mm" margin-top="15mm" margin-bottom="15mm" margin-left="19mm" margin-right="31mm"><fo:region-body margin-bottom="8mm" margin-top="11mm" column-gap="12pt" column-count="1" margin-left="0in" margin-right="0in"/><fo:region-before region-name="xsl-region-before-even" extent="9mm" precedence="true" display-align="before"/><fo:region-after region-name="xsl-region-after-even" extent="5mm" precedence="true" display-align="after"/><fo:region-start border-width="0" padding="0" reference-orientation="90" region-name="xsl-region-outer-even" precedence="false" extent="0in"/><fo:region-end border-width="0" padding="0" reference-orientation="90" region-name="xsl-region-inner-even" precedence="false" extent="0in"/></fo:simple-page-master><fo:simple-page-master master-name="front-first" page-width="210mm" page-height="297mm" margin-top="15mm" margin-bottom="15mm" margin-left="31mm" margin-right="19mm"><fo:region-body margin-bottom="8mm" margin-top="11mm" column-gap="12pt" column-count="1" margin-left="0in" margin-right="0in"/><fo:region-before region-name="xsl-region-before-first" extent="9mm" precedence="true" display-align="before"/><fo:region-after region-name="xsl-region-after-first" extent="5mm" precedence="true" display-align="after"/><fo:region-start border-width="0" padding="0" reference-orientation="90" region-name="xsl-region-inner-first" precedence="false" extent="0in"/><fo:region-end border-width="0" padding="0" reference-orientation="90" region-name="xsl-region-outer-first" precedence="false" extent="0in"/></fo:simple-page-master><fo:simple-page-master master-name="front-odd" page-width="210mm" page-height="297mm" margin-top="15mm" margin-bottom="15mm" margin-left="31mm" margin-right="19mm"><fo:region-body margin-bottom="8mm" margin-top="11mm" column-gap="12pt" column-count="1" margin-left="0in" margin-right="0in"/><fo:region-before region-name="xsl-region-before-odd" extent="9mm" precedence="true" display-align="before"/><fo:region-after region-name="xsl-region-after-odd" extent="5mm" precedence="true" display-align="after"/><fo:region-start border-width="0" padding="0" reference-orientation="90" region-name="xsl-region-inner-odd" precedence="false" extent="0in"/><fo:region-end border-width="0" padding="0" reference-orientation="90" region-name="xsl-region-outer-odd" precedence="false" extent="0in"/></fo:simple-page-master><fo:simple-page-master master-name="front-even" page-width="210mm" page-height="297mm" margin-top="15mm" margin-bottom="15mm" margin-left="19mm" margin-right="31mm"><fo:region-body margin-bottom="8mm" margin-top="11mm" column-gap="12pt" column-count="1" margin-left="0in" margin-right="0in"/><fo:region-before region-name="xsl-region-before-even" extent="9mm" precedence="true" display-align="before"/><fo:region-after region-name="xsl-region-after-even" extent="5mm" precedence="true" display-align="after"/><fo:region-start border-width="0" padding="0" reference-orientation="90" region-name="xsl-region-outer-even" precedence="false" extent="0in"/><fo:region-end border-width="0" padding="0" reference-orientation="90" region-name="xsl-region-inner-even" precedence="false" extent="0in"/></fo:simple-page-master><fo:simple-page-master master-name="body-first" page-width="210mm" page-height="297mm" margin-top="15mm" margin-bottom="15mm" margin-left="31mm" margin-right="19mm"><fo:region-body margin-bottom="8mm" margin-top="11mm" column-gap="12pt" column-count="1" margin-left="0in" margin-right="0in"/><fo:region-before region-name="xsl-region-before-first" extent="9mm" precedence="true" display-align="before"/><fo:region-after region-name="xsl-region-after-first" extent="5mm" precedence="true" display-align="after"/><fo:region-start border-width="0" padding="0" reference-orientation="90" region-name="xsl-region-inner-first" precedence="false" extent="0in"/><fo:region-end border-width="0" padding="0" reference-orientation="90" region-name="xsl-region-outer-first" precedence="false" extent="0in"/></fo:simple-page-master><fo:simple-page-master master-name="body-odd" page-width="210mm" page-height="297mm" margin-top="15mm" margin-bottom="15mm" margin-left="31mm" margin-right="19mm"><fo:region-body margin-bottom="8mm" margin-top="11mm" column-gap="12pt" column-count="1" margin-left="0in" margin-right="0in"/><fo:region-before region-name="xsl-region-before-odd" extent="9mm" precedence="true" display-align="before"/><fo:region-after region-name="xsl-region-after-odd" extent="5mm" precedence="true" display-align="after"/><fo:region-start border-width="0" padding="0" reference-orientation="90" region-name="xsl-region-inner-odd" precedence="false" extent="0in"/><fo:region-end border-width="0" padding="0" reference-orientation="90" region-name="xsl-region-outer-odd" precedence="false" extent="0in"/></fo:simple-page-master><fo:simple-page-master master-name="body-even" page-width="210mm" page-height="297mm" margin-top="15mm" margin-bottom="15mm" margin-left="19mm" margin-right="31mm"><fo:region-body margin-bottom="8mm" margin-top="11mm" column-gap="12pt" column-count="1" margin-left="0in" margin-right="0in"/><fo:region-before region-name="xsl-region-before-even" extent="9mm" precedence="true" display-align="before"/><fo:region-after region-name="xsl-region-after-even" extent="5mm" precedence="true" display-align="after"/><fo:region-start border-width="0" padding="0" reference-orientation="90" region-name="xsl-region-outer-even" precedence="false" extent="0in"/><fo:region-end border-width="0" padding="0" reference-orientation="90" region-name="xsl-region-inner-even" precedence="false" extent="0in"/></fo:simple-page-master><fo:simple-page-master master-name="back-first" page-width="210mm" page-height="297mm" margin-top="15mm" margin-bottom="15mm" margin-left="31mm" margin-right="19mm"><fo:region-body margin-bottom="8mm" margin-top="11mm" column-gap="12pt" column-count="1" margin-left="0in" margin-right="0in"/><fo:region-before region-name="xsl-region-before-first" extent="9mm" precedence="true" display-align="before"/><fo:region-after region-name="xsl-region-after-first" extent="5mm" precedence="true" display-align="after"/><fo:region-start border-width="0" padding="0" reference-orientation="90" region-name="xsl-region-inner-first" precedence="false" extent="0in"/><fo:region-end border-width="0" padding="0" reference-orientation="90" region-name="xsl-region-outer-first" precedence="false" extent="0in"/></fo:simple-page-master><fo:simple-page-master master-name="back-odd" page-width="210mm" page-height="297mm" margin-top="15mm" margin-bottom="15mm" margin-left="31mm" margin-right="19mm"><fo:region-body margin-bottom="8mm" margin-top="11mm" column-gap="12pt" column-count="1" margin-left="0in" margin-right="0in"/><fo:region-before region-name="xsl-region-before-odd" extent="9mm" precedence="true" display-align="before"/><fo:region-after region-name="xsl-region-after-odd" extent="5mm" precedence="true" display-align="after"/><fo:region-start border-width="0" padding="0" reference-orientation="90" region-name="xsl-region-inner-odd" precedence="false" extent="0in"/><fo:region-end border-width="0" padding="0" reference-orientation="90" region-name="xsl-region-outer-odd" precedence="false" extent="0in"/></fo:simple-page-master><fo:simple-page-master master-name="back-even" page-width="210mm" page-height="297mm" margin-top="15mm" margin-bottom="15mm" margin-left="19mm" margin-right="31mm"><fo:region-body margin-bottom="8mm" margin-top="11mm" column-gap="12pt" column-count="1" margin-left="0in" margin-right="0in"/><fo:region-before region-name="xsl-region-before-even" extent="9mm" precedence="true" display-align="before"/><fo:region-after region-name="xsl-region-after-even" extent="5mm" precedence="true" display-align="after"/><fo:region-start border-width="0" padding="0" reference-orientation="90" region-name="xsl-region-outer-even" precedence="false" extent="0in"/><fo:region-end border-width="0" padding="0" reference-orientation="90" region-name="xsl-region-inner-even" precedence="false" extent="0in"/></fo:simple-page-master><fo:simple-page-master master-name="index-first" page-width="210mm" page-height="297mm" margin-top="15mm" margin-bottom="15mm" margin-left="31mm" margin-right="19mm"><fo:region-body margin-bottom="8mm" margin-top="11mm" column-gap="12pt" column-count="2" margin-left="0in" margin-right="0in"/><fo:region-before region-name="xsl-region-before-first" extent="9mm" precedence="true" display-align="before"/><fo:region-after region-name="xsl-region-after-first" extent="5mm" precedence="true" display-align="after"/><fo:region-start border-width="0" padding="0" reference-orientation="90" region-name="xsl-region-inner-first" precedence="false" extent="0in"/><fo:region-end border-width="0" padding="0" reference-orientation="90" region-name="xsl-region-outer-first" precedence="false" extent="0in"/></fo:simple-page-master><fo:simple-page-master master-name="index-odd" page-width="210mm" page-height="297mm" margin-top="15mm" margin-bottom="15mm" margin-left="31mm" margin-right="19mm"><fo:region-body margin-bottom="8mm" margin-top="11mm" column-gap="12pt" column-count="2" margin-left="0in" margin-right="0in"/><fo:region-before region-name="xsl-region-before-odd" extent="9mm" precedence="true" display-align="before"/><fo:region-after region-name="xsl-region-after-odd" extent="5mm" precedence="true" display-align="after"/><fo:region-start border-width="0" padding="0" reference-orientation="90" region-name="xsl-region-inner-odd" precedence="false" extent="0in"/><fo:region-end border-width="0" padding="0" reference-orientation="90" region-name="xsl-region-outer-odd" precedence="false" extent="0in"/></fo:simple-page-master><fo:simple-page-master master-name="index-even" page-width="210mm" page-height="297mm" margin-top="15mm" margin-bottom="15mm" margin-left="19mm" margin-right="31mm"><fo:region-body margin-bottom="8mm" margin-top="11mm" column-gap="12pt" column-count="2" margin-left="0in" margin-right="0in"/><fo:region-before region-name="xsl-region-before-even" extent="9mm" precedence="true" display-align="before"/><fo:region-after region-name="xsl-region-after-even" extent="5mm" precedence="true" display-align="after"/><fo:region-start border-width="0" padding="0" reference-orientation="90" region-name="xsl-region-outer-even" precedence="false" extent="0in"/><fo:region-end border-width="0" padding="0" reference-orientation="90" region-name="xsl-region-inner-even" precedence="false" extent="0in"/></fo:simple-page-master><fo:simple-page-master master-name="blank-draft" page-width="210mm" page-height="297mm" margin-top="15mm" margin-bottom="15mm" margin-left="19mm" margin-right="31mm"><fo:region-body margin-bottom="8mm" margin-top="11mm" margin-left="0in" margin-right="0in" background-image="url(Common_Content/images/watermark-draft.png)" background-attachment="fixed" background-repeat="no-repeat" background-position-horizontal="center" background-position-vertical="center"/><fo:region-before region-name="xsl-region-before-blank" extent="9mm" precedence="true" display-align="before"/><fo:region-after region-name="xsl-region-after-blank" extent="5mm" precedence="true" display-align="after"/><fo:region-start border-width="0" padding="0" reference-orientation="90" region-name="xsl-region-outer-blank" precedence="false" extent="0in"/><fo:region-end border-width="0" padding="0" reference-orientation="90" region-name="xsl-region-inner-blank" precedence="false" extent="0in"/></fo:simple-page-master><fo:simple-page-master master-name="titlepage-first-draft" page-width="210mm" page-height="297mm" margin-top="15mm" margin-bottom="15mm" margin-left="31mm" margin-right="19mm"><fo:region-body margin-bottom="8mm" margin-top="11mm" column-gap="12pt" column-count="1" margin-left="0in" margin-right="0in" background-image="url(Common_Content/images/watermark-draft.png)" background-attachment="fixed" background-repeat="no-repeat" background-position-horizontal="center" background-position-vertical="center"/><fo:region-before region-name="xsl-region-before-first" extent="9mm" precedence="true" display-align="before"/><fo:region-after region-name="xsl-region-after-first" extent="5mm" precedence="true" display-align="after"/><fo:region-start border-width="0" padding="0" reference-orientation="90" region-name="xsl-region-inner-first" precedence="false" extent="0in"/><fo:region-end border-width="0" padding="0" reference-orientation="90" region-name="xsl-region-outer-first" precedence="false" extent="0in"/></fo:simple-page-master><fo:simple-page-master master-name="titlepage-odd-draft" page-width="210mm" page-height="297mm" margin-top="15mm" margin-bottom="15mm" margin-left="31mm" margin-right="19mm"><fo:region-body margin-bottom="8mm" margin-top="11mm" column-gap="12pt" column-count="1" margin-left="0in" margin-right="0in" background-image="url(Common_Content/images/watermark-draft.png)" background-attachment="fixed" background-repeat="no-repeat" background-position-horizontal="center" background-position-vertical="center"/><fo:region-before region-name="xsl-region-before-odd" extent="9mm" precedence="true" display-align="before"/><fo:region-after region-name="xsl-region-after-odd" extent="5mm" precedence="true" display-align="after"/><fo:region-start border-width="0" padding="0" reference-orientation="90" region-name="xsl-region-inner-odd" precedence="false" extent="0in"/><fo:region-end border-width="0" padding="0" reference-orientation="90" region-name="xsl-region-outer-odd" precedence="false" extent="0in"/></fo:simple-page-master><fo:simple-page-master master-name="titlepage-even-draft" page-width="210mm" page-height="297mm" margin-top="15mm" margin-bottom="15mm" margin-left="19mm" margin-right="31mm"><fo:region-body margin-bottom="8mm" margin-top="11mm" column-gap="12pt" column-count="1" margin-left="0in" margin-right="0in" background-image="url(Common_Content/images/watermark-draft.png)" background-attachment="fixed" background-repeat="no-repeat" background-position-horizontal="center" background-position-vertical="center"/><fo:region-before region-name="xsl-region-before-even" extent="9mm" precedence="true" display-align="before"/><fo:region-after region-name="xsl-region-after-even" extent="5mm" precedence="true" display-align="after"/><fo:region-start border-width="0" padding="0" reference-orientation="90" region-name="xsl-region-outer-even" precedence="false" extent="0in"/><fo:region-end border-width="0" padding="0" reference-orientation="90" region-name="xsl-region-inner-even" precedence="false" extent="0in"/></fo:simple-page-master><fo:simple-page-master master-name="lot-first-draft" page-width="210mm" page-height="297mm" margin-top="15mm" margin-bottom="15mm" margin-left="31mm" margin-right="19mm"><fo:region-body margin-bottom="8mm" margin-top="11mm" column-gap="12pt" column-count="1" margin-left="0in" margin-right="0in" background-image="url(Common_Content/images/watermark-draft.png)" background-attachment="fixed" background-repeat="no-repeat" background-position-horizontal="center" background-position-vertical="center"/><fo:region-before region-name="xsl-region-before-first" extent="9mm" precedence="true" display-align="before"/><fo:region-after region-name="xsl-region-after-first" extent="5mm" precedence="true" display-align="after"/><fo:region-start border-width="0" padding="0" reference-orientation="90" region-name="xsl-region-inner-first" precedence="false" extent="0in"/><fo:region-end border-width="0" padding="0" reference-orientation="90" region-name="xsl-region-outer-first" precedence="false" extent="0in"/></fo:simple-page-master><fo:simple-page-master master-name="lot-odd-draft" page-width="210mm" page-height="297mm" margin-top="15mm" margin-bottom="15mm" margin-left="31mm" margin-right="19mm"><fo:region-body margin-bottom="8mm" margin-top="11mm" column-gap="12pt" column-count="1" margin-left="0in" margin-right="0in" background-image="url(Common_Content/images/watermark-draft.png)" background-attachment="fixed" background-repeat="no-repeat" background-position-horizontal="center" background-position-vertical="center"/><fo:region-before region-name="xsl-region-before-odd" extent="9mm" precedence="true" display-align="before"/><fo:region-after region-name="xsl-region-after-odd" extent="5mm" precedence="true" display-align="after"/><fo:region-start border-width="0" padding="0" reference-orientation="90" region-name="xsl-region-inner-odd" precedence="false" extent="0in"/><fo:region-end border-width="0" padding="0" reference-orientation="90" region-name="xsl-region-outer-odd" precedence="false" extent="0in"/></fo:simple-page-master><fo:simple-page-master master-name="lot-even-draft" page-width="210mm" page-height="297mm" margin-top="15mm" margin-bottom="15mm" margin-left="19mm" margin-right="31mm"><fo:region-body margin-bottom="8mm" margin-top="11mm" column-gap="12pt" column-count="1" margin-left="0in" margin-right="0in" background-image="url(Common_Content/images/watermark-draft.png)" background-attachment="fixed" background-repeat="no-repeat" background-position-horizontal="center" background-position-vertical="center"/><fo:region-before region-name="xsl-region-before-even" extent="9mm" precedence="true" display-align="before"/><fo:region-after region-name="xsl-region-after-even" extent="5mm" precedence="true" display-align="after"/><fo:region-start border-width="0" padding="0" reference-orientation="90" region-name="xsl-region-outer-even" precedence="false" extent="0in"/><fo:region-end border-width="0" padding="0" reference-orientation="90" region-name="xsl-region-inner-even" precedence="false" extent="0in"/></fo:simple-page-master><fo:simple-page-master master-name="front-first-draft" page-width="210mm" page-height="297mm" margin-top="15mm" margin-bottom="15mm" margin-left="31mm" margin-right="19mm"><fo:region-body margin-bottom="8mm" margin-top="11mm" column-gap="12pt" column-count="1" margin-left="0in" margin-right="0in" background-image="url(Common_Content/images/watermark-draft.png)" background-attachment="fixed" background-repeat="no-repeat" background-position-horizontal="center" background-position-vertical="center"/><fo:region-before region-name="xsl-region-before-first" extent="9mm" precedence="true" display-align="before"/><fo:region-after region-name="xsl-region-after-first" extent="5mm" precedence="true" display-align="after"/><fo:region-start border-width="0" padding="0" reference-orientation="90" region-name="xsl-region-inner-first" precedence="false" extent="0in"/><fo:region-end border-width="0" padding="0" reference-orientation="90" region-name="xsl-region-outer-first" precedence="false" extent="0in"/></fo:simple-page-master><fo:simple-page-master master-name="front-odd-draft" page-width="210mm" page-height="297mm" margin-top="15mm" margin-bottom="15mm" margin-left="31mm" margin-right="19mm"><fo:region-body margin-bottom="8mm" margin-top="11mm" column-gap="12pt" column-count="1" margin-left="0in" margin-right="0in" background-image="url(Common_Content/images/watermark-draft.png)" background-attachment="fixed" background-repeat="no-repeat" background-position-horizontal="center" background-position-vertical="center"/><fo:region-before region-name="xsl-region-before-odd" extent="9mm" precedence="true" display-align="before"/><fo:region-after region-name="xsl-region-after-odd" extent="5mm" precedence="true" display-align="after"/><fo:region-start border-width="0" padding="0" reference-orientation="90" region-name="xsl-region-inner-odd" precedence="false" extent="0in"/><fo:region-end border-width="0" padding="0" reference-orientation="90" region-name="xsl-region-outer-odd" precedence="false" extent="0in"/></fo:simple-page-master><fo:simple-page-master master-name="front-even-draft" page-width="210mm" page-height="297mm" margin-top="15mm" margin-bottom="15mm" margin-left="19mm" margin-right="31mm"><fo:region-body margin-bottom="8mm" margin-top="11mm" column-gap="12pt" column-count="1" margin-left="0in" margin-right="0in" background-image="url(Common_Content/images/watermark-draft.png)" background-attachment="fixed" background-repeat="no-repeat" background-position-horizontal="center" background-position-vertical="center"/><fo:region-before region-name="xsl-region-before-even" extent="9mm" precedence="true" display-align="before"/><fo:region-after region-name="xsl-region-after-even" extent="5mm" precedence="true" display-align="after"/><fo:region-start border-width="0" padding="0" reference-orientation="90" region-name="xsl-region-outer-even" precedence="false" extent="0in"/><fo:region-end border-width="0" padding="0" reference-orientation="90" region-name="xsl-region-inner-even" precedence="false" extent="0in"/></fo:simple-page-master><fo:simple-page-master master-name="body-first-draft" page-width="210mm" page-height="297mm" margin-top="15mm" margin-bottom="15mm" margin-left="31mm" margin-right="19mm"><fo:region-body margin-bottom="8mm" margin-top="11mm" column-gap="12pt" column-count="1" margin-left="0in" margin-right="0in" background-image="url(Common_Content/images/watermark-draft.png)" background-attachment="fixed" background-repeat="no-repeat" background-position-horizontal="center" background-position-vertical="center"/><fo:region-before region-name="xsl-region-before-first" extent="9mm" precedence="true" display-align="before"/><fo:region-after region-name="xsl-region-after-first" extent="5mm" precedence="true" display-align="after"/><fo:region-start border-width="0" padding="0" reference-orientation="90" region-name="xsl-region-inner-first" precedence="false" extent="0in"/><fo:region-end border-width="0" padding="0" reference-orientation="90" region-name="xsl-region-outer-first" precedence="false" extent="0in"/></fo:simple-page-master><fo:simple-page-master master-name="body-odd-draft" page-width="210mm" page-height="297mm" margin-top="15mm" margin-bottom="15mm" margin-left="31mm" margin-right="19mm"><fo:region-body margin-bottom="8mm" margin-top="11mm" column-gap="12pt" column-count="1" margin-left="0in" margin-right="0in" background-image="url(Common_Content/images/watermark-draft.png)" background-attachment="fixed" background-repeat="no-repeat" background-position-horizontal="center" background-position-vertical="center"/><fo:region-before region-name="xsl-region-before-odd" extent="9mm" precedence="true" display-align="before"/><fo:region-after region-name="xsl-region-after-odd" extent="5mm" precedence="true" display-align="after"/><fo:region-start border-width="0" padding="0" reference-orientation="90" region-name="xsl-region-inner-odd" precedence="false" extent="0in"/><fo:region-end border-width="0" padding="0" reference-orientation="90" region-name="xsl-region-outer-odd" precedence="false" extent="0in"/></fo:simple-page-master><fo:simple-page-master master-name="body-even-draft" page-width="210mm" page-height="297mm" margin-top="15mm" margin-bottom="15mm" margin-left="19mm" margin-right="31mm"><fo:region-body margin-bottom="8mm" margin-top="11mm" column-gap="12pt" column-count="1" margin-left="0in" margin-right="0in" background-image="url(Common_Content/images/watermark-draft.png)" background-attachment="fixed" background-repeat="no-repeat" background-position-horizontal="center" background-position-vertical="center"/><fo:region-before region-name="xsl-region-before-even" extent="9mm" precedence="true" display-align="before"/><fo:region-after region-name="xsl-region-after-even" extent="5mm" precedence="true" display-align="after"/><fo:region-start border-width="0" padding="0" reference-orientation="90" region-name="xsl-region-outer-even" precedence="false" extent="0in"/><fo:region-end border-width="0" padding="0" reference-orientation="90" region-name="xsl-region-inner-even" precedence="false" extent="0in"/></fo:simple-page-master><fo:simple-page-master master-name="back-first-draft" page-width="210mm" page-height="297mm" margin-top="15mm" margin-bottom="15mm" margin-left="31mm" margin-right="19mm"><fo:region-body margin-bottom="8mm" margin-top="11mm" column-gap="12pt" column-count="1" margin-left="0in" margin-right="0in" background-image="url(Common_Content/images/watermark-draft.png)" background-attachment="fixed" background-repeat="no-repeat" background-position-horizontal="center" background-position-vertical="center"/><fo:region-before region-name="xsl-region-before-first" extent="9mm" precedence="true" display-align="before"/><fo:region-after region-name="xsl-region-after-first" extent="5mm" precedence="true" display-align="after"/><fo:region-start border-width="0" padding="0" reference-orientation="90" region-name="xsl-region-inner-first" precedence="false" extent="0in"/><fo:region-end border-width="0" padding="0" reference-orientation="90" region-name="xsl-region-outer-first" precedence="false" extent="0in"/></fo:simple-page-master><fo:simple-page-master master-name="back-odd-draft" page-width="210mm" page-height="297mm" margin-top="15mm" margin-bottom="15mm" margin-left="31mm" margin-right="19mm"><fo:region-body margin-bottom="8mm" margin-top="11mm" column-gap="12pt" column-count="1" margin-left="0in" margin-right="0in" background-image="url(Common_Content/images/watermark-draft.png)" background-attachment="fixed" background-repeat="no-repeat" background-position-horizontal="center" background-position-vertical="center"/><fo:region-before region-name="xsl-region-before-odd" extent="9mm" precedence="true" display-align="before"/><fo:region-after region-name="xsl-region-after-odd" extent="5mm" precedence="true" display-align="after"/><fo:region-start border-width="0" padding="0" reference-orientation="90" region-name="xsl-region-inner-odd" precedence="false" extent="0in"/><fo:region-end border-width="0" padding="0" reference-orientation="90" region-name="xsl-region-outer-odd" precedence="false" extent="0in"/></fo:simple-page-master><fo:simple-page-master master-name="back-even-draft" page-width="210mm" page-height="297mm" margin-top="15mm" margin-bottom="15mm" margin-left="19mm" margin-right="31mm"><fo:region-body margin-bottom="8mm" margin-top="11mm" column-gap="12pt" column-count="1" margin-left="0in" margin-right="0in" background-image="url(Common_Content/images/watermark-draft.png)" background-attachment="fixed" background-repeat="no-repeat" background-position-horizontal="center" background-position-vertical="center"/><fo:region-before region-name="xsl-region-before-even" extent="9mm" precedence="true" display-align="before"/><fo:region-after region-name="xsl-region-after-even" extent="5mm" precedence="true" display-align="after"/><fo:region-start border-width="0" padding="0" reference-orientation="90" region-name="xsl-region-outer-even" precedence="false" extent="0in"/><fo:region-end border-width="0" padding="0" reference-orientation="90" region-name="xsl-region-inner-even" precedence="false" extent="0in"/></fo:simple-page-master><fo:simple-page-master master-name="index-first-draft" page-width="210mm" page-height="297mm" margin-top="15mm" margin-bottom="15mm" margin-left="31mm" margin-right="19mm"><fo:region-body margin-bottom="8mm" margin-top="11mm" column-gap="12pt" column-count="2" margin-left="0in" margin-right="0in" background-image="url(Common_Content/images/watermark-draft.png)" background-attachment="fixed" background-repeat="no-repeat" background-position-horizontal="center" background-position-vertical="center"/><fo:region-before region-name="xsl-region-before-first" extent="9mm" precedence="true" display-align="before"/><fo:region-after region-name="xsl-region-after-first" extent="5mm" precedence="true" display-align="after"/><fo:region-start border-width="0" padding="0" reference-orientation="90" region-name="xsl-region-inner-first" precedence="false" extent="0in"/><fo:region-end border-width="0" padding="0" reference-orientation="90" region-name="xsl-region-outer-first" precedence="false" extent="0in"/></fo:simple-page-master><fo:simple-page-master master-name="index-odd-draft" page-width="210mm" page-height="297mm" margin-top="15mm" margin-bottom="15mm" margin-left="31mm" margin-right="19mm"><fo:region-body margin-bottom="8mm" margin-top="11mm" column-gap="12pt" column-count="2" margin-left="0in" margin-right="0in" background-image="url(Common_Content/images/watermark-draft.png)" background-attachment="fixed" background-repeat="no-repeat" background-position-horizontal="center" background-position-vertical="center"/><fo:region-before region-name="xsl-region-before-odd" extent="9mm" precedence="true" display-align="before"/><fo:region-after region-name="xsl-region-after-odd" extent="5mm" precedence="true" display-align="after"/><fo:region-start border-width="0" padding="0" reference-orientation="90" region-name="xsl-region-inner-odd" precedence="false" extent="0in"/><fo:region-end border-width="0" padding="0" reference-orientation="90" region-name="xsl-region-outer-odd" precedence="false" extent="0in"/></fo:simple-page-master><fo:simple-page-master master-name="index-even-draft" page-width="210mm" page-height="297mm" margin-top="15mm" margin-bottom="15mm" margin-left="19mm" margin-right="31mm"><fo:region-body margin-bottom="8mm" margin-top="11mm" column-gap="12pt" column-count="2" margin-left="0in" margin-right="0in" background-image="url(Common_Content/images/watermark-draft.png)" background-attachment="fixed" background-repeat="no-repeat" background-position-horizontal="center" background-position-vertical="center"/><fo:region-before region-name="xsl-region-before-even" extent="9mm" precedence="true" display-align="before"/><fo:region-after region-name="xsl-region-after-even" extent="5mm" precedence="true" display-align="after"/><fo:region-start border-width="0" padding="0" reference-orientation="90" region-name="xsl-region-outer-even" precedence="false" extent="0in"/><fo:region-end border-width="0" padding="0" reference-orientation="90" region-name="xsl-region-inner-even" precedence="false" extent="0in"/></fo:simple-page-master><fo:page-sequence-master master-name="titlepage"><fo:repeatable-page-master-alternatives><fo:conditional-page-master-reference master-reference="blank" blank-or-not-blank="blank"/><fo:conditional-page-master-reference master-reference="titlepage-first" page-position="first"/><fo:conditional-page-master-reference master-reference="titlepage-odd" odd-or-even="odd"/><fo:conditional-page-master-reference odd-or-even="even" master-reference="titlepage-even"/></fo:repeatable-page-master-alternatives></fo:page-sequence-master><fo:page-sequence-master master-name="lot"><fo:repeatable-page-master-alternatives><fo:conditional-page-master-reference master-reference="blank" blank-or-not-blank="blank"/><fo:conditional-page-master-reference master-reference="lot-first" page-position="first"/><fo:conditional-page-master-reference master-reference="lot-odd" odd-or-even="odd"/><fo:conditional-page-master-reference odd-or-even="even" master-reference="lot-even"/></fo:repeatable-page-master-alternatives></fo:page-sequence-master><fo:page-sequence-master master-name="front"><fo:repeatable-page-master-alternatives><fo:conditional-page-master-reference master-reference="blank" blank-or-not-blank="blank"/><fo:conditional-page-master-reference master-reference="front-first" page-position="first"/><fo:conditional-page-master-reference master-reference="front-odd" odd-or-even="odd"/><fo:conditional-page-master-reference odd-or-even="even" master-reference="front-even"/></fo:repeatable-page-master-alternatives></fo:page-sequence-master><fo:page-sequence-master master-name="body"><fo:repeatable-page-master-alternatives><fo:conditional-page-master-reference master-reference="blank" blank-or-not-blank="blank"/><fo:conditional-page-master-reference master-reference="body-first" page-position="first"/><fo:conditional-page-master-reference master-reference="body-odd" odd-or-even="odd"/><fo:conditional-page-master-reference odd-or-even="even" master-reference="body-even"/></fo:repeatable-page-master-alternatives></fo:page-sequence-master><fo:page-sequence-master master-name="back"><fo:repeatable-page-master-alternatives><fo:conditional-page-master-reference master-reference="blank" blank-or-not-blank="blank"/><fo:conditional-page-master-reference master-reference="back-first" page-position="first"/><fo:conditional-page-master-reference master-reference="back-odd" odd-or-even="odd"/><fo:conditional-page-master-reference odd-or-even="even" master-reference="back-even"/></fo:repeatable-page-master-alternatives></fo:page-sequence-master><fo:page-sequence-master master-name="index"><fo:repeatable-page-master-alternatives><fo:conditional-page-master-reference master-reference="blank" blank-or-not-blank="blank"/><fo:conditional-page-master-reference master-reference="index-first" page-position="first"/><fo:conditional-page-master-reference master-reference="index-odd" odd-or-even="odd"/><fo:conditional-page-master-reference odd-or-even="even" master-reference="index-even"/></fo:repeatable-page-master-alternatives></fo:page-sequence-master><fo:page-sequence-master master-name="titlepage-draft"><fo:repeatable-page-master-alternatives><fo:conditional-page-master-reference master-reference="blank-draft" blank-or-not-blank="blank"/><fo:conditional-page-master-reference master-reference="titlepage-first-draft" page-position="first"/><fo:conditional-page-master-reference master-reference="titlepage-odd-draft" odd-or-even="odd"/><fo:conditional-page-master-reference odd-or-even="even" master-reference="titlepage-even-draft"/></fo:repeatable-page-master-alternatives></fo:page-sequence-master><fo:page-sequence-master master-name="lot-draft"><fo:repeatable-page-master-alternatives><fo:conditional-page-master-reference master-reference="blank-draft" blank-or-not-blank="blank"/><fo:conditional-page-master-reference master-reference="lot-first-draft" page-position="first"/><fo:conditional-page-master-reference master-reference="lot-odd-draft" odd-or-even="odd"/><fo:conditional-page-master-reference odd-or-even="even" master-reference="lot-even-draft"/></fo:repeatable-page-master-alternatives></fo:page-sequence-master><fo:page-sequence-master master-name="front-draft"><fo:repeatable-page-master-alternatives><fo:conditional-page-master-reference master-reference="blank-draft" blank-or-not-blank="blank"/><fo:conditional-page-master-reference master-reference="front-first-draft" page-position="first"/><fo:conditional-page-master-reference master-reference="front-odd-draft" odd-or-even="odd"/><fo:conditional-page-master-reference odd-or-even="even" master-reference="front-even-draft"/></fo:repeatable-page-master-alternatives></fo:page-sequence-master><fo:page-sequence-master master-name="body-draft"><fo:repeatable-page-master-alternatives><fo:conditional-page-master-reference master-reference="blank-draft" blank-or-not-blank="blank"/><fo:conditional-page-master-reference master-reference="body-first-draft" page-position="first"/><fo:conditional-page-master-reference master-reference="body-odd-draft" odd-or-even="odd"/><fo:conditional-page-master-reference odd-or-even="even" master-reference="body-even-draft"/></fo:repeatable-page-master-alternatives></fo:page-sequence-master><fo:page-sequence-master master-name="back-draft"><fo:repeatable-page-master-alternatives><fo:conditional-page-master-reference master-reference="blank-draft" blank-or-not-blank="blank"/><fo:conditional-page-master-reference master-reference="back-first-draft" page-position="first"/><fo:conditional-page-master-reference master-reference="back-odd-draft" odd-or-even="odd"/><fo:conditional-page-master-reference odd-or-even="even" master-reference="back-even-draft"/></fo:repeatable-page-master-alternatives></fo:page-sequence-master><fo:page-sequence-master master-name="index-draft"><fo:repeatable-page-master-alternatives><fo:conditional-page-master-reference master-reference="blank-draft" blank-or-not-blank="blank"/><fo:conditional-page-master-reference master-reference="index-first-draft" page-position="first"/><fo:conditional-page-master-reference master-reference="index-odd-draft" odd-or-even="odd"/><fo:conditional-page-master-reference odd-or-even="even" master-reference="index-even-draft"/></fo:repeatable-page-master-alternatives></fo:page-sequence-master></fo:layout-master-set><fo:declarations xmlns:fox="http://xmlgraphics.apache.org/fop/extensions"><x:xmpmeta xmlns:x="adobe:ns:meta/"><rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#"><rdf:Description xmlns:dc="http://purl.org/dc/elements/1.1/" rdf:about=""><dc:title>Specification - XML and JSON: A Language To Rule Them All</dc:title><dc:creator/></rdf:Description><rdf:Description xmlns:pdf="http://ns.adobe.com/pdf/1.3/" rdf:about=""/><rdf:Description xmlns:xmp="http://ns.adobe.com/xap/1.0/" rdf:about=""><xmp:CreatorTool>DocBook XSL Stylesheets with Apache FOP</xmp:CreatorTool></rdf:Description></rdf:RDF></x:xmpmeta></fo:declarations><fo:bookmark-tree><fo:bookmark internal-destination="idm139680691937984" starting-state="hide"><fo:bookmark-title>Specification</fo:bookmark-title></fo:bookmark><fo:bookmark internal-destination="toc...idm139680691937984"><fo:bookmark-title>Table of Contents</fo:bookmark-title></fo:bookmark><fo:bookmark internal-destination="section-status" starting-state="hide"><fo:bookmark-title>Chapter 1. Status</fo:bookmark-title></fo:bookmark><fo:bookmark internal-destination="section-introduction" starting-state="hide"><fo:bookmark-title>Chapter 2. Introduction</fo:bookmark-title></fo:bookmark><fo:bookmark internal-destination="section-jsoniq-data-model" starting-state="hide"><fo:bookmark-title>Chapter 3. JSONiq Data Model</fo:bookmark-title><fo:bookmark internal-destination="idm139680682976128" starting-state="hide"><fo:bookmark-title>3.1. Simple Datatypes</fo:bookmark-title></fo:bookmark><fo:bookmark internal-destination="idm139680688864432" starting-state="hide"><fo:bookmark-title>3.2. JSON Items</fo:bookmark-title></fo:bookmark><fo:bookmark internal-destination="idm139680691843696" starting-state="hide"><fo:bookmark-title>3.3. Objects</fo:bookmark-title></fo:bookmark><fo:bookmark internal-destination="idm139680679913376" starting-state="hide"><fo:bookmark-title>3.4. Arrays</fo:bookmark-title></fo:bookmark><fo:bookmark internal-destination="idm139680679904304" starting-state="hide"><fo:bookmark-title>3.5. ItemTypes for JSONiq Items</fo:bookmark-title></fo:bookmark></fo:bookmark><fo:bookmark internal-destination="section-json-value-construction" starting-state="hide"><fo:bookmark-title>Chapter 4. Construction of JSON values</fo:bookmark-title><fo:bookmark internal-destination="idm139680677803808" starting-state="hide"><fo:bookmark-title>4.1. Array Constructors</fo:bookmark-title></fo:bookmark><fo:bookmark internal-destination="idm139680685246944" starting-state="hide"><fo:bookmark-title>4.2. Object Constructors</fo:bookmark-title></fo:bookmark><fo:bookmark internal-destination="idm139680688558704" starting-state="hide"><fo:bookmark-title>4.3. Strings</fo:bookmark-title></fo:bookmark><fo:bookmark internal-destination="idm139680691878304" starting-state="hide"><fo:bookmark-title>4.4. Numbers</fo:bookmark-title></fo:bookmark><fo:bookmark internal-destination="idm139680691875520" starting-state="hide"><fo:bookmark-title>4.5. Booleans</fo:bookmark-title></fo:bookmark><fo:bookmark internal-destination="idm139680691874112" starting-state="hide"><fo:bookmark-title>4.6. Null</fo:bookmark-title></fo:bookmark><fo:bookmark internal-destination="idm139680691872704" starting-state="hide"><fo:bookmark-title>4.7. Boolean and null literals</fo:bookmark-title></fo:bookmark></fo:bookmark><fo:bookmark internal-destination="section-json-navigation" starting-state="hide"><fo:bookmark-title>Chapter 5. Navigation in JSON content</fo:bookmark-title><fo:bookmark internal-destination="idm139680687920672" starting-state="hide"><fo:bookmark-title>5.1. Object lookup</fo:bookmark-title></fo:bookmark><fo:bookmark internal-destination="idm139680677743360" starting-state="hide"><fo:bookmark-title>5.2. Object key listing</fo:bookmark-title></fo:bookmark><fo:bookmark internal-destination="idm139680679701072" starting-state="hide"><fo:bookmark-title>5.3. Array lookup</fo:bookmark-title></fo:bookmark><fo:bookmark internal-destination="idm139680679130112" starting-state="hide"><fo:bookmark-title>5.4. Array unboxing</fo:bookmark-title></fo:bookmark></fo:bookmark><fo:bookmark internal-destination="section-builtin-functions" starting-state="hide"><fo:bookmark-title>Chapter 6. Builtin functions and operators</fo:bookmark-title><fo:bookmark internal-destination="idm139680689826224" starting-state="hide"><fo:bookmark-title>6.1. fn:boolean (aka Effective Boolean Value)</fo:bookmark-title></fo:bookmark><fo:bookmark internal-destination="idm139680680392288" starting-state="hide"><fo:bookmark-title>6.2. fn:collection</fo:bookmark-title></fo:bookmark><fo:bookmark internal-destination="idm139680676044544" starting-state="hide"><fo:bookmark-title>6.3. fn:data (aka Atomization)</fo:bookmark-title></fo:bookmark><fo:bookmark internal-destination="idm139680677709504" starting-state="hide"><fo:bookmark-title>6.4. fn:string (aka string value)</fo:bookmark-title></fo:bookmark><fo:bookmark internal-destination="idm139680687909856" starting-state="hide"><fo:bookmark-title>6.5. fn:trace</fo:bookmark-title></fo:bookmark><fo:bookmark internal-destination="idm139680687908448" starting-state="hide"><fo:bookmark-title>6.6. jn:decode-from-roundtrip</fo:bookmark-title></fo:bookmark><fo:bookmark internal-destination="idm139680688257984" starting-state="hide"><fo:bookmark-title>6.7. jn:encode-for-roundtrip</fo:bookmark-title></fo:bookmark><fo:bookmark internal-destination="idm139680689026288" starting-state="hide"><fo:bookmark-title>6.8. jn:json-doc</fo:bookmark-title></fo:bookmark><fo:bookmark internal-destination="idm139680689023504" starting-state="hide"><fo:bookmark-title>6.9. jn:keys</fo:bookmark-title></fo:bookmark><fo:bookmark internal-destination="idm139680687257472" starting-state="hide"><fo:bookmark-title>6.10. jn:members</fo:bookmark-title></fo:bookmark><fo:bookmark internal-destination="idm139680687252272" starting-state="hide"><fo:bookmark-title>6.11. jn:null</fo:bookmark-title></fo:bookmark><fo:bookmark internal-destination="idm139680687249904" starting-state="hide"><fo:bookmark-title>6.12. jn:parse-json</fo:bookmark-title></fo:bookmark><fo:bookmark internal-destination="idm139680687238752" starting-state="hide"><fo:bookmark-title>6.13. jn:size</fo:bookmark-title></fo:bookmark><fo:bookmark internal-destination="idm139680687233840" starting-state="hide"><fo:bookmark-title>6.14. Changes to cast semantics</fo:bookmark-title></fo:bookmark><fo:bookmark internal-destination="idm139680687230896" starting-state="hide"><fo:bookmark-title>6.15. Changes to arithmetic operation semantics</fo:bookmark-title></fo:bookmark><fo:bookmark internal-destination="idm139680687226032" starting-state="hide"><fo:bookmark-title>6.16. Changes to value comparison semantics</fo:bookmark-title></fo:bookmark><fo:bookmark internal-destination="idm139680687221184" starting-state="hide"><fo:bookmark-title>6.17. Changes to general comparison semantics</fo:bookmark-title></fo:bookmark></fo:bookmark><fo:bookmark internal-destination="section-json-updates" starting-state="hide"><fo:bookmark-title>Chapter 7. JSON updates</fo:bookmark-title><fo:bookmark internal-destination="idm139680678785968" starting-state="hide"><fo:bookmark-title>7.1. JSON udpate primitives</fo:bookmark-title></fo:bookmark><fo:bookmark internal-destination="idm139680685492080" starting-state="hide"><fo:bookmark-title>7.2. Update syntax: new updating expressions</fo:bookmark-title><fo:bookmark internal-destination="idm139680685490864" starting-state="hide"><fo:bookmark-title>7.2.1. Deleting expressions</fo:bookmark-title></fo:bookmark><fo:bookmark internal-destination="idm139680686499680" starting-state="hide"><fo:bookmark-title>7.2.2. Inserting expressions</fo:bookmark-title></fo:bookmark><fo:bookmark internal-destination="idm139680685602192" starting-state="hide"><fo:bookmark-title>7.2.3. Renaming expressions</fo:bookmark-title></fo:bookmark><fo:bookmark internal-destination="idm139680688144240" starting-state="hide"><fo:bookmark-title>7.2.4. Replacing expressions</fo:bookmark-title></fo:bookmark><fo:bookmark internal-destination="idm139680688129760" starting-state="hide"><fo:bookmark-title>7.2.5. Appending expressions</fo:bookmark-title></fo:bookmark></fo:bookmark></fo:bookmark><fo:bookmark internal-destination="section-function-library" starting-state="hide"><fo:bookmark-title>Chapter 8. Function library</fo:bookmark-title><fo:bookmark internal-destination="idm139680687716208" starting-state="hide"><fo:bookmark-title>8.1. libjn:accumulate</fo:bookmark-title></fo:bookmark><fo:bookmark internal-destination="idm139680685142176" starting-state="hide"><fo:bookmark-title>8.2. libjn:descendant-arrays</fo:bookmark-title></fo:bookmark><fo:bookmark internal-destination="idm139680679846912" starting-state="hide"><fo:bookmark-title>8.3. libjn:descendant-objects</fo:bookmark-title></fo:bookmark><fo:bookmark internal-destination="idm139680679482208" starting-state="hide"><fo:bookmark-title>8.4. libjn:descendant-pairs</fo:bookmark-title></fo:bookmark><fo:bookmark internal-destination="idm139680678064352" starting-state="hide"><fo:bookmark-title>8.5. libjn:flatten</fo:bookmark-title></fo:bookmark><fo:bookmark internal-destination="idm139680678059168" starting-state="hide"><fo:bookmark-title>8.6. libjn:intersect</fo:bookmark-title></fo:bookmark><fo:bookmark internal-destination="idm139680685270576" starting-state="hide"><fo:bookmark-title>8.7. libjn:project</fo:bookmark-title></fo:bookmark><fo:bookmark internal-destination="idm139680677721376" starting-state="hide"><fo:bookmark-title>8.8. libjn:remove-keys</fo:bookmark-title></fo:bookmark><fo:bookmark internal-destination="idm139680677715872" starting-state="hide"><fo:bookmark-title>8.9. libjn:values</fo:bookmark-title></fo:bookmark></fo:bookmark><fo:bookmark internal-destination="section-combining-xml-and-json" starting-state="hide"><fo:bookmark-title>Chapter 9. Combining XML and JSON</fo:bookmark-title></fo:bookmark><fo:bookmark internal-destination="section-json-serialization" starting-state="hide"><fo:bookmark-title>Chapter 10. JSON Serialization</fo:bookmark-title><fo:bookmark internal-destination="idm139680677771840" starting-state="hide"><fo:bookmark-title>10.1. New serialization parameters</fo:bookmark-title></fo:bookmark><fo:bookmark internal-destination="idm139680678071312" starting-state="hide"><fo:bookmark-title>10.2. Changes to sequence normalization</fo:bookmark-title></fo:bookmark><fo:bookmark internal-destination="idm139680688813360" starting-state="hide"><fo:bookmark-title>10.3. The JSON output method</fo:bookmark-title><fo:bookmark internal-destination="idm139680685835888" starting-state="hide"><fo:bookmark-title>10.3.1. Serialization of a sequence of items</fo:bookmark-title></fo:bookmark><fo:bookmark internal-destination="idm139680687663504" starting-state="hide"><fo:bookmark-title>10.3.2. Serialization of individual JSON values</fo:bookmark-title></fo:bookmark><fo:bookmark internal-destination="idm139680678818400" starting-state="hide"><fo:bookmark-title>10.3.3. Influence of other serialization parameters upon the JSON output method</fo:bookmark-title><fo:bookmark internal-destination="idm139680678817632" starting-state="hide"><fo:bookmark-title>10.3.3.1. JSON output method: the indent parameter</fo:bookmark-title></fo:bookmark><fo:bookmark internal-destination="idm139680685515824" starting-state="hide"><fo:bookmark-title>10.3.3.2. JSON output method: the byte-order-mark parameter</fo:bookmark-title></fo:bookmark><fo:bookmark internal-destination="idm139680685514288" starting-state="hide"><fo:bookmark-title>10.3.3.3. JSON output method: the use-character-maps parameter</fo:bookmark-title></fo:bookmark></fo:bookmark></fo:bookmark><fo:bookmark internal-destination="idm139680686274048" starting-state="hide"><fo:bookmark-title>10.4. The JSON-XML-hybrid output method</fo:bookmark-title></fo:bookmark><fo:bookmark internal-destination="idm139680686268448" starting-state="hide"><fo:bookmark-title>10.5. Changes to ther other output methods</fo:bookmark-title></fo:bookmark></fo:bookmark><fo:bookmark internal-destination="section-error-codes" starting-state="hide"><fo:bookmark-title>Chapter 11. Error codes</fo:bookmark-title></fo:bookmark><fo:bookmark internal-destination="section-grammar-summary" starting-state="hide"><fo:bookmark-title>Chapter 12. Grammar Summary</fo:bookmark-title></fo:bookmark><fo:bookmark internal-destination="section-implementation" starting-state="hide"><fo:bookmark-title>Chapter 13. Implementation in Zorba</fo:bookmark-title></fo:bookmark><fo:bookmark internal-destination="appe-JSONiq-Revision_History" starting-state="hide"><fo:bookmark-title>Appendix A. Revision History</fo:bookmark-title></fo:bookmark><fo:bookmark internal-destination="idm139680683489824" starting-state="hide"><fo:bookmark-title>Index</fo:bookmark-title></fo:bookmark></fo:bookmark-tree><fox:destination xmlns:fox="http://xmlgraphics.apache.org/fop/extensions" internal-destination="idm139680691937984"/><fox:destination xmlns:fox="http://xmlgraphics.apache.org/fop/extensions" internal-destination="section-status"/><fox:destination xmlns:fox="http://xmlgraphics.apache.org/fop/extensions" internal-destination="section-introduction"/><fox:destination xmlns:fox="http://xmlgraphics.apache.org/fop/extensions" internal-destination="section-jsoniq-data-model"/><fox:destination xmlns:fox="http://xmlgraphics.apache.org/fop/extensions" internal-destination="idm139680682976128"/><fox:destination xmlns:fox="http://xmlgraphics.apache.org/fop/extensions" internal-destination="idm139680688864432"/><fox:destination xmlns:fox="http://xmlgraphics.apache.org/fop/extensions" internal-destination="idm139680691843696"/><fox:destination xmlns:fox="http://xmlgraphics.apache.org/fop/extensions" internal-destination="idm139680679913376"/><fox:destination xmlns:fox="http://xmlgraphics.apache.org/fop/extensions" internal-destination="idm139680679904304"/><fox:destination xmlns:fox="http://xmlgraphics.apache.org/fop/extensions" internal-destination="section-json-value-construction"/><fox:destination xmlns:fox="http://xmlgraphics.apache.org/fop/extensions" internal-destination="idm139680677803808"/><fox:destination xmlns:fox="http://xmlgraphics.apache.org/fop/extensions" internal-destination="idm139680685246944"/><fox:destination xmlns:fox="http://xmlgraphics.apache.org/fop/extensions" internal-destination="idm139680688558704"/><fox:destination xmlns:fox="http://xmlgraphics.apache.org/fop/extensions" internal-destination="idm139680691878304"/><fox:destination xmlns:fox="http://xmlgraphics.apache.org/fop/extensions" internal-destination="idm139680691875520"/><fox:destination xmlns:fox="http://xmlgraphics.apache.org/fop/extensions" internal-destination="idm139680691874112"/><fox:destination xmlns:fox="http://xmlgraphics.apache.org/fop/extensions" internal-destination="idm139680691872704"/><fox:destination xmlns:fox="http://xmlgraphics.apache.org/fop/extensions" internal-destination="section-json-navigation"/><fox:destination xmlns:fox="http://xmlgraphics.apache.org/fop/extensions" internal-destination="idm139680687920672"/><fox:destination xmlns:fox="http://xmlgraphics.apache.org/fop/extensions" internal-destination="idm139680677743360"/><fox:destination xmlns:fox="http://xmlgraphics.apache.org/fop/extensions" internal-destination="idm139680679701072"/><fox:destination xmlns:fox="http://xmlgraphics.apache.org/fop/extensions" internal-destination="idm139680679130112"/><fox:destination xmlns:fox="http://xmlgraphics.apache.org/fop/extensions" internal-destination="section-builtin-functions"/><fox:destination xmlns:fox="http://xmlgraphics.apache.org/fop/extensions" internal-destination="idm139680689826224"/><fox:destination xmlns:fox="http://xmlgraphics.apache.org/fop/extensions" internal-destination="idm139680680392288"/><fox:destination xmlns:fox="http://xmlgraphics.apache.org/fop/extensions" internal-destination="idm139680676044544"/><fox:destination xmlns:fox="http://xmlgraphics.apache.org/fop/extensions" internal-destination="idm139680677709504"/><fox:destination xmlns:fox="http://xmlgraphics.apache.org/fop/extensions" internal-destination="idm139680687909856"/><fox:destination xmlns:fox="http://xmlgraphics.apache.org/fop/extensions" internal-destination="idm139680687908448"/><fox:destination xmlns:fox="http://xmlgraphics.apache.org/fop/extensions" internal-destination="idm139680688257984"/><fox:destination xmlns:fox="http://xmlgraphics.apache.org/fop/extensions" internal-destination="idm139680689026288"/><fox:destination xmlns:fox="http://xmlgraphics.apache.org/fop/extensions" internal-destination="idm139680689023504"/><fox:destination xmlns:fox="http://xmlgraphics.apache.org/fop/extensions" internal-destination="idm139680687257472"/><fox:destination xmlns:fox="http://xmlgraphics.apache.org/fop/extensions" internal-destination="idm139680687252272"/><fox:destination xmlns:fox="http://xmlgraphics.apache.org/fop/extensions" internal-destination="idm139680687249904"/><fox:destination xmlns:fox="http://xmlgraphics.apache.org/fop/extensions" internal-destination="idm139680687238752"/><fox:destination xmlns:fox="http://xmlgraphics.apache.org/fop/extensions" internal-destination="idm139680687233840"/><fox:destination xmlns:fox="http://xmlgraphics.apache.org/fop/extensions" internal-destination="idm139680687230896"/><fox:destination xmlns:fox="http://xmlgraphics.apache.org/fop/extensions" internal-destination="idm139680687226032"/><fox:destination xmlns:fox="http://xmlgraphics.apache.org/fop/extensions" internal-destination="idm139680687221184"/><fox:destination xmlns:fox="http://xmlgraphics.apache.org/fop/extensions" internal-destination="section-json-updates"/><fox:destination xmlns:fox="http://xmlgraphics.apache.org/fop/extensions" internal-destination="idm139680678785968"/><fox:destination xmlns:fox="http://xmlgraphics.apache.org/fop/extensions" internal-destination="idm139680685492080"/><fox:destination xmlns:fox="http://xmlgraphics.apache.org/fop/extensions" internal-destination="idm139680685490864"/><fox:destination xmlns:fox="http://xmlgraphics.apache.org/fop/extensions" internal-destination="idm139680686499680"/><fox:destination xmlns:fox="http://xmlgraphics.apache.org/fop/extensions" internal-destination="idm139680685602192"/><fox:destination xmlns:fox="http://xmlgraphics.apache.org/fop/extensions" internal-destination="idm139680688144240"/><fox:destination xmlns:fox="http://xmlgraphics.apache.org/fop/extensions" internal-destination="idm139680688129760"/><fox:destination xmlns:fox="http://xmlgraphics.apache.org/fop/extensions" internal-destination="section-function-library"/><fox:destination xmlns:fox="http://xmlgraphics.apache.org/fop/extensions" internal-destination="idm139680687716208"/><fox:destination xmlns:fox="http://xmlgraphics.apache.org/fop/extensions" internal-destination="idm139680685142176"/><fox:destination xmlns:fox="http://xmlgraphics.apache.org/fop/extensions" internal-destination="idm139680679846912"/><fox:destination xmlns:fox="http://xmlgraphics.apache.org/fop/extensions" internal-destination="idm139680679482208"/><fox:destination xmlns:fox="http://xmlgraphics.apache.org/fop/extensions" internal-destination="idm139680678064352"/><fox:destination xmlns:fox="http://xmlgraphics.apache.org/fop/extensions" internal-destination="idm139680678059168"/><fox:destination xmlns:fox="http://xmlgraphics.apache.org/fop/extensions" internal-destination="idm139680685270576"/><fox:destination xmlns:fox="http://xmlgraphics.apache.org/fop/extensions" internal-destination="idm139680677721376"/><fox:destination xmlns:fox="http://xmlgraphics.apache.org/fop/extensions" internal-destination="idm139680677715872"/><fox:destination xmlns:fox="http://xmlgraphics.apache.org/fop/extensions" internal-destination="section-combining-xml-and-json"/><fox:destination xmlns:fox="http://xmlgraphics.apache.org/fop/extensions" internal-destination="section-json-serialization"/><fox:destination xmlns:fox="http://xmlgraphics.apache.org/fop/extensions" internal-destination="idm139680677771840"/><fox:destination xmlns:fox="http://xmlgraphics.apache.org/fop/extensions" internal-destination="idm139680678071312"/><fox:destination xmlns:fox="http://xmlgraphics.apache.org/fop/extensions" internal-destination="idm139680688813360"/><fox:destination xmlns:fox="http://xmlgraphics.apache.org/fop/extensions" internal-destination="idm139680685835888"/><fox:destination xmlns:fox="http://xmlgraphics.apache.org/fop/extensions" internal-destination="idm139680687663504"/><fox:destination xmlns:fox="http://xmlgraphics.apache.org/fop/extensions" internal-destination="idm139680678818400"/><fox:destination xmlns:fox="http://xmlgraphics.apache.org/fop/extensions" internal-destination="idm139680678817632"/><fox:destination xmlns:fox="http://xmlgraphics.apache.org/fop/extensions" internal-destination="idm139680685515824"/><fox:destination xmlns:fox="http://xmlgraphics.apache.org/fop/extensions" internal-destination="idm139680685514288"/><fox:destination xmlns:fox="http://xmlgraphics.apache.org/fop/extensions" internal-destination="idm139680686274048"/><fox:destination xmlns:fox="http://xmlgraphics.apache.org/fop/extensions" internal-destination="idm139680686268448"/><fox:destination xmlns:fox="http://xmlgraphics.apache.org/fop/extensions" internal-destination="section-error-codes"/><fox:destination xmlns:fox="http://xmlgraphics.apache.org/fop/extensions" internal-destination="section-grammar-summary"/><fox:destination xmlns:fox="http://xmlgraphics.apache.org/fop/extensions" internal-destination="section-implementation"/><fox:destination xmlns:fox="http://xmlgraphics.apache.org/fop/extensions" internal-destination="appe-JSONiq-Revision_History"/><fox:destination xmlns:fox="http://xmlgraphics.apache.org/fop/extensions" internal-destination="idm139680683489824"/><fo:page-sequence xmlns:axf="http://www.antennahouse.com/names/XSL/Extensions" hyphenate="true" master-reference="titlepage" language="en" format="i" initial-page-number="auto-odd" force-page-count="end-on-even" hyphenation-character="-" hyphenation-push-character-count="2" hyphenation-remain-character-count="2"><fo:static-content flow-name="xsl-region-before-first"><fo:block wrap-option="no-wrap" font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" margin-left="0pc"/></fo:static-content><fo:static-content flow-name="xsl-region-before-odd"><fo:block wrap-option="no-wrap" font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" margin-left="0pc"><fo:table table-layout="fixed" width="100%" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(0)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="before" relative-align="baseline"><fo:block/></fo:table-cell><fo:table-cell text-align="center" display-align="before" relative-align="baseline"><fo:block/></fo:table-cell><fo:table-cell text-align="right" display-align="before" relative-align="baseline"><fo:block><fo:inline keep-together.within-line="always"><fo:retrieve-marker retrieve-class-name="section.head.marker" retrieve-position="first-including-carryover" retrieve-boundary="page-sequence"/></fo:inline></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-before-even"><fo:block wrap-option="no-wrap" font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" margin-left="0pc"><fo:table table-layout="fixed" width="100%" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(0)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="before" relative-align="baseline"><fo:block><fo:inline keep-together.within-line="always" font-weight="bold">Specification</fo:inline></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="before" relative-align="baseline"><fo:block/></fo:table-cell><fo:table-cell text-align="right" display-align="before" relative-align="baseline"><fo:block/></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-before-blank"><fo:block wrap-option="no-wrap" font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" margin-left="0pc"><fo:table table-layout="fixed" width="100%" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(0)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="before" relative-align="baseline"><fo:block/></fo:table-cell><fo:table-cell text-align="center" display-align="before" relative-align="baseline"><fo:block/></fo:table-cell><fo:table-cell text-align="right" display-align="before" relative-align="baseline"><fo:block/></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" flow-name="xsl-footnote-separator"><fo:block margin-top="2em"><fo:leader color="black" leader-pattern="rule" leader-length="1in"/></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-inner-first"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-inner-odd"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-inner-even"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-inner-blank"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-outer-first"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-outer-odd"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-outer-even"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-outer-blank"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-after-first"><fo:block font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" margin-left="0pc"/></fo:static-content><fo:static-content flow-name="xsl-region-after-odd"><fo:block font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" margin-left="0pc"><fo:table table-layout="fixed" width="100%" border-top-width="0.5pt" border-top-style="solid" border-top-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="end" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-after-even"><fo:block font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" margin-left="0pc"><fo:table table-layout="fixed" width="100%" border-top-width="0.5pt" border-top-style="solid" border-top-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="end" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-after-blank"><fo:block font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" margin-left="0pc"><fo:table table-layout="fixed" width="100%" border-top-width="0.5pt" border-top-style="solid" border-top-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="end" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:flow flow-name="xsl-region-body"><fo:block id="idm139680691937984"><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions"><fo:block><fo:block text-align="center" font-size="34pt" space-before="18.6624pt" font-weight="bold" font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" color="#336699">JSONiq Extension to XQuery 1.0</fo:block><fo:block text-align="center" font-size="34pt" space-before="18.6624pt" font-weight="bold" font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" color="#336699"><fo:block keep-with-next.within-column="always" hyphenate="false">Specification</fo:block></fo:block><fo:block text-align="center" font-size="14pt" space-before="30pt" font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" color="#336699" font-weight="bold">XML and JSON: A Language To Rule Them All</fo:block><fo:block font-size="17.28pt" keep-with-next.within-column="always" space-before="2in" font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" color="#336699" font-weight="bold" text-align="center"><fo:block>
		<fo:external-graphic src="url(images/28.png)" width="auto" height="auto" content-width="111px" content-height="auto" content-type="content-type:image/png"/>

	</fo:block></fo:block><fo:block font-size="14pt" space-before="15.552pt" font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" color="#336699" font-weight="bold" text-align="center">Jonathan Robie</fo:block><fo:block font-size="14pt" space-before="15.552pt" font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" color="#336699" font-weight="bold" text-align="center">Ghislain Fourny</fo:block><fo:block font-size="14pt" space-before="15.552pt" font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" color="#336699" font-weight="bold" text-align="center">Matthias Brantner</fo:block><fo:block font-size="14pt" space-before="15.552pt" font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" color="#336699" font-weight="bold" text-align="center">Daniela Florescu</fo:block><fo:block font-size="14pt" space-before="15.552pt" font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" color="#336699" font-weight="bold" text-align="center">Till Westmann</fo:block><fo:block font-size="14pt" space-before="15.552pt" font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" color="#336699" font-weight="bold" text-align="center">Markos Zaharioudakis</fo:block><fo:block color="black" font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" font-weight="bold" font-size="12pt" text-align="center"/></fo:block><fo:block break-after="page"/><fo:block><fo:block font-size="14.4pt" font-weight="bold" font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats">JSONiq Extension to XQuery 1.0 Specification<fo:block padding-bottom="24pt">XML and JSON: A Language To Rule Them All<fo:block>Edition 1.0.4</fo:block></fo:block></fo:block><fo:block font-size="10pt"><fo:table table-layout="fixed" width="100%"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row><fo:table-cell><fo:block>Author</fo:block></fo:table-cell><fo:table-cell><fo:block>Jonathan Robie</fo:block></fo:table-cell><fo:table-cell><fo:block><fo:inline font-family="Liberation Mono,monospace"><fo:inline keep-together.within-line="always" hyphenate="false"><fo:basic-link external-destination="mailto:jonathan.robie@gmail.com" font-style="italic" color="#0066cc">jonathan.robie@gmail.com</fo:basic-link></fo:inline></fo:inline></fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell><fo:block>Author</fo:block></fo:table-cell><fo:table-cell><fo:block>Ghislain Fourny</fo:block></fo:table-cell><fo:table-cell><fo:block><fo:inline font-family="Liberation Mono,monospace"><fo:inline keep-together.within-line="always" hyphenate="false"><fo:basic-link external-destination="mailto:ghislain.fourny@28msec.com" font-style="italic" color="#0066cc">ghislain.fourny@28msec.com</fo:basic-link></fo:inline></fo:inline></fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell><fo:block>Author</fo:block></fo:table-cell><fo:table-cell><fo:block>Matthias Brantner</fo:block></fo:table-cell><fo:table-cell><fo:block><fo:inline font-family="Liberation Mono,monospace"><fo:inline keep-together.within-line="always" hyphenate="false"><fo:basic-link external-destination="mailto:matthias.brantner@28msec.com" font-style="italic" color="#0066cc">matthias.brantner@28msec.com</fo:basic-link></fo:inline></fo:inline></fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell><fo:block>Author</fo:block></fo:table-cell><fo:table-cell><fo:block>Daniela Florescu</fo:block></fo:table-cell><fo:table-cell><fo:block><fo:inline font-family="Liberation Mono,monospace"><fo:inline keep-together.within-line="always" hyphenate="false"><fo:basic-link external-destination="mailto:dana.florescu@oracle.com" font-style="italic" color="#0066cc">dana.florescu@oracle.com</fo:basic-link></fo:inline></fo:inline></fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell><fo:block>Author</fo:block></fo:table-cell><fo:table-cell><fo:block>Till Westmann</fo:block></fo:table-cell><fo:table-cell><fo:block><fo:inline font-family="Liberation Mono,monospace"><fo:inline keep-together.within-line="always" hyphenate="false"><fo:basic-link external-destination="mailto:till.westmann@28msec.com" font-style="italic" color="#0066cc">till.westmann@28msec.com</fo:basic-link></fo:inline></fo:inline></fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell><fo:block>Author</fo:block></fo:table-cell><fo:table-cell><fo:block>Markos Zaharioudakis</fo:block></fo:table-cell><fo:table-cell><fo:block><fo:inline font-family="Liberation Mono,monospace"><fo:inline keep-together.within-line="always" hyphenate="false"><fo:basic-link external-destination="mailto:markos.zaharioudakis@oracle.com" font-style="italic" color="#0066cc">markos.zaharioudakis@oracle.com</fo:basic-link></fo:inline></fo:inline></fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell><fo:block>Editor</fo:block></fo:table-cell><fo:table-cell><fo:block>Jonathan Robie</fo:block></fo:table-cell><fo:table-cell><fo:block><fo:inline font-family="Liberation Mono,monospace"><fo:inline keep-together.within-line="always" hyphenate="false"><fo:basic-link external-destination="mailto:jonathan.robie@gmail.com" font-style="italic" color="#0066cc">jonathan.robie@gmail.com</fo:basic-link></fo:inline></fo:inline></fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell><fo:block>Editor</fo:block></fo:table-cell><fo:table-cell><fo:block>Ghislain Fourny</fo:block></fo:table-cell><fo:table-cell><fo:block><fo:inline font-family="Liberation Mono,monospace"><fo:inline keep-together.within-line="always" hyphenate="false"><fo:basic-link external-destination="mailto:ghislain.fourny@28msec.com" font-style="italic" color="#0066cc">ghislain.fourny@28msec.com</fo:basic-link></fo:inline></fo:inline></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:block><fo:block><fo:block start-indent="0.0in" end-indent="0.0in"><fo:block space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
			The JSONiq extension to XQuery allows processing XML and JSON natively and with a single language. This extension is based on the same data model as the core JSONiq and is based on the same logical concepts. Because of the complexity of the XQuery grammar, the JSONiq extension to XQuery has a less pleasant syntax that the JSONiq core.
		</fo:block></fo:block></fo:block><fo:block break-after="page"/></fo:block></fo:block></fo:flow></fo:page-sequence><fo:page-sequence xmlns:axf="http://www.antennahouse.com/names/XSL/Extensions" hyphenate="true" master-reference="lot" language="en" format="i" initial-page-number="auto-odd" force-page-count="end-on-even" hyphenation-character="-" hyphenation-push-character-count="2" hyphenation-remain-character-count="2"><fo:static-content flow-name="xsl-region-before-first"><fo:block wrap-option="no-wrap" font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" margin-left="0pc"><fo:table table-layout="fixed" width="100%" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(0)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="before" relative-align="baseline"><fo:block/></fo:table-cell><fo:table-cell text-align="center" display-align="before" relative-align="baseline"><fo:block/></fo:table-cell><fo:table-cell text-align="right" display-align="before" relative-align="baseline"><fo:block/></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-before-odd"><fo:block wrap-option="no-wrap" font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" margin-left="0pc"><fo:table table-layout="fixed" width="100%" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(0)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="before" relative-align="baseline"><fo:block/></fo:table-cell><fo:table-cell text-align="center" display-align="before" relative-align="baseline"><fo:block/></fo:table-cell><fo:table-cell text-align="right" display-align="before" relative-align="baseline"><fo:block><fo:inline keep-together.within-line="always"><fo:retrieve-marker retrieve-class-name="section.head.marker" retrieve-position="first-including-carryover" retrieve-boundary="page-sequence"/></fo:inline></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-before-even"><fo:block wrap-option="no-wrap" font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" margin-left="0pc"><fo:table table-layout="fixed" width="100%" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(0)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="before" relative-align="baseline"><fo:block><fo:inline keep-together.within-line="always" font-weight="bold">Specification</fo:inline></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="before" relative-align="baseline"><fo:block/></fo:table-cell><fo:table-cell text-align="right" display-align="before" relative-align="baseline"><fo:block/></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-before-blank"><fo:block wrap-option="no-wrap" font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" margin-left="0pc"><fo:table table-layout="fixed" width="100%" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(0)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="before" relative-align="baseline"><fo:block/></fo:table-cell><fo:table-cell text-align="center" display-align="before" relative-align="baseline"><fo:block/></fo:table-cell><fo:table-cell text-align="right" display-align="before" relative-align="baseline"><fo:block/></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" flow-name="xsl-footnote-separator"><fo:block margin-top="2em"><fo:leader color="black" leader-pattern="rule" leader-length="1in"/></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-inner-first"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-inner-odd"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-inner-even"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-inner-blank"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-outer-first"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-outer-odd"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-outer-even"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-outer-blank"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-after-first"><fo:block font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" margin-left="0pc"><fo:table table-layout="fixed" width="100%" border-top-width="0.5pt" border-top-style="solid" border-top-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="end" display-align="after" relative-align="baseline"><fo:block><fo:block><fo:page-number/></fo:block></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-after-odd"><fo:block font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" margin-left="0pc"><fo:table table-layout="fixed" width="100%" border-top-width="0.5pt" border-top-style="solid" border-top-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="end" display-align="after" relative-align="baseline"><fo:block><fo:block><fo:page-number/></fo:block></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-after-even"><fo:block font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" margin-left="0pc"><fo:table table-layout="fixed" width="100%" border-top-width="0.5pt" border-top-style="solid" border-top-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="after" relative-align="baseline"><fo:block><fo:block><fo:page-number/></fo:block></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="end" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-after-blank"><fo:block font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" margin-left="0pc"><fo:table table-layout="fixed" width="100%" border-top-width="0.5pt" border-top-style="solid" border-top-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="after" relative-align="baseline"><fo:block><fo:block><fo:page-number/></fo:block></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="end" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:flow flow-name="xsl-region-body" start-indent="0pt" end-indent="0pt"><fo:block id="toc...idm139680691937984" space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em" space-after.minimum="0.5em" space-after.optimum="1em" space-after.maximum="2em"><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" end-indent="24pt" last-line-end-indent="-24pt" text-align-last="justify" text-align="left" space-before.minimum="6pt" space-before.optimum="6pt" space-before.maximum="8pt" font-weight="bold"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="section-status">1. Status</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="use-content" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always" white-space-collapse="false"> </fo:leader> <fo:basic-link internal-destination="section-status" text-align="right"><fo:page-number-citation ref-id="section-status"/></fo:basic-link></fo:inline></fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" end-indent="24pt" last-line-end-indent="-24pt" text-align-last="justify" text-align="left" space-before.minimum="6pt" space-before.optimum="6pt" space-before.maximum="8pt" font-weight="bold"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="section-introduction">2. Introduction</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="use-content" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always" white-space-collapse="false"> </fo:leader> <fo:basic-link internal-destination="section-introduction" text-align="right"><fo:page-number-citation ref-id="section-introduction"/></fo:basic-link></fo:inline></fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" end-indent="24pt" last-line-end-indent="-24pt" text-align-last="justify" text-align="left" space-before.minimum="6pt" space-before.optimum="6pt" space-before.maximum="8pt" font-weight="bold"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="section-jsoniq-data-model">3. JSONiq Data Model</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="use-content" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always" white-space-collapse="false"> </fo:leader> <fo:basic-link internal-destination="section-jsoniq-data-model" text-align="right"><fo:page-number-citation ref-id="section-jsoniq-data-model"/></fo:basic-link></fo:inline></fo:block><fo:block id="toc.idm139680691937984.section-jsoniq-data-model" margin-left="24pt"><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" end-indent="24pt" last-line-end-indent="-24pt" text-align-last="justify" text-align="start"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="idm139680682976128">3.1. Simple Datatypes</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="idm139680682976128" text-align="right"><fo:page-number-citation ref-id="idm139680682976128"/></fo:basic-link></fo:inline></fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" end-indent="24pt" last-line-end-indent="-24pt" text-align-last="justify" text-align="start"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="idm139680688864432">3.2. JSON Items</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="idm139680688864432" text-align="right"><fo:page-number-citation ref-id="idm139680688864432"/></fo:basic-link></fo:inline></fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" end-indent="24pt" last-line-end-indent="-24pt" text-align-last="justify" text-align="start"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="idm139680691843696">3.3. Objects</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="idm139680691843696" text-align="right"><fo:page-number-citation ref-id="idm139680691843696"/></fo:basic-link></fo:inline></fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" end-indent="24pt" last-line-end-indent="-24pt" text-align-last="justify" text-align="start"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="idm139680679913376">3.4. Arrays</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="idm139680679913376" text-align="right"><fo:page-number-citation ref-id="idm139680679913376"/></fo:basic-link></fo:inline></fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" end-indent="24pt" last-line-end-indent="-24pt" text-align-last="justify" text-align="start"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="idm139680679904304">3.5. ItemTypes for JSONiq Items</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="idm139680679904304" text-align="right"><fo:page-number-citation ref-id="idm139680679904304"/></fo:basic-link></fo:inline></fo:block></fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" end-indent="24pt" last-line-end-indent="-24pt" text-align-last="justify" text-align="left" space-before.minimum="6pt" space-before.optimum="6pt" space-before.maximum="8pt" font-weight="bold"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="section-json-value-construction">4. Construction of JSON values</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="use-content" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always" white-space-collapse="false"> </fo:leader> <fo:basic-link internal-destination="section-json-value-construction" text-align="right"><fo:page-number-citation ref-id="section-json-value-construction"/></fo:basic-link></fo:inline></fo:block><fo:block id="toc.idm139680691937984.section-json-value-construction" margin-left="24pt"><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" end-indent="24pt" last-line-end-indent="-24pt" text-align-last="justify" text-align="start"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="idm139680677803808">4.1. Array Constructors</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="idm139680677803808" text-align="right"><fo:page-number-citation ref-id="idm139680677803808"/></fo:basic-link></fo:inline></fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" end-indent="24pt" last-line-end-indent="-24pt" text-align-last="justify" text-align="start"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="idm139680685246944">4.2. Object Constructors</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="idm139680685246944" text-align="right"><fo:page-number-citation ref-id="idm139680685246944"/></fo:basic-link></fo:inline></fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" end-indent="24pt" last-line-end-indent="-24pt" text-align-last="justify" text-align="start"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="idm139680688558704">4.3. Strings</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="idm139680688558704" text-align="right"><fo:page-number-citation ref-id="idm139680688558704"/></fo:basic-link></fo:inline></fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" end-indent="24pt" last-line-end-indent="-24pt" text-align-last="justify" text-align="start"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="idm139680691878304">4.4. Numbers</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="idm139680691878304" text-align="right"><fo:page-number-citation ref-id="idm139680691878304"/></fo:basic-link></fo:inline></fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" end-indent="24pt" last-line-end-indent="-24pt" text-align-last="justify" text-align="start"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="idm139680691875520">4.5. Booleans</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="idm139680691875520" text-align="right"><fo:page-number-citation ref-id="idm139680691875520"/></fo:basic-link></fo:inline></fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" end-indent="24pt" last-line-end-indent="-24pt" text-align-last="justify" text-align="start"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="idm139680691874112">4.6. Null</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="idm139680691874112" text-align="right"><fo:page-number-citation ref-id="idm139680691874112"/></fo:basic-link></fo:inline></fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" end-indent="24pt" last-line-end-indent="-24pt" text-align-last="justify" text-align="start"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="idm139680691872704">4.7. Boolean and null literals</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="idm139680691872704" text-align="right"><fo:page-number-citation ref-id="idm139680691872704"/></fo:basic-link></fo:inline></fo:block></fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" end-indent="24pt" last-line-end-indent="-24pt" text-align-last="justify" text-align="left" space-before.minimum="6pt" space-before.optimum="6pt" space-before.maximum="8pt" font-weight="bold"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="section-json-navigation">5. Navigation in JSON content</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="use-content" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always" white-space-collapse="false"> </fo:leader> <fo:basic-link internal-destination="section-json-navigation" text-align="right"><fo:page-number-citation ref-id="section-json-navigation"/></fo:basic-link></fo:inline></fo:block><fo:block id="toc.idm139680691937984.section-json-navigation" margin-left="24pt"><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" end-indent="24pt" last-line-end-indent="-24pt" text-align-last="justify" text-align="start"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="idm139680687920672">5.1. Object lookup</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="idm139680687920672" text-align="right"><fo:page-number-citation ref-id="idm139680687920672"/></fo:basic-link></fo:inline></fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" end-indent="24pt" last-line-end-indent="-24pt" text-align-last="justify" text-align="start"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="idm139680677743360">5.2. Object key listing</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="idm139680677743360" text-align="right"><fo:page-number-citation ref-id="idm139680677743360"/></fo:basic-link></fo:inline></fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" end-indent="24pt" last-line-end-indent="-24pt" text-align-last="justify" text-align="start"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="idm139680679701072">5.3. Array lookup</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="idm139680679701072" text-align="right"><fo:page-number-citation ref-id="idm139680679701072"/></fo:basic-link></fo:inline></fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" end-indent="24pt" last-line-end-indent="-24pt" text-align-last="justify" text-align="start"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="idm139680679130112">5.4. Array unboxing</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="idm139680679130112" text-align="right"><fo:page-number-citation ref-id="idm139680679130112"/></fo:basic-link></fo:inline></fo:block></fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" end-indent="24pt" last-line-end-indent="-24pt" text-align-last="justify" text-align="left" space-before.minimum="6pt" space-before.optimum="6pt" space-before.maximum="8pt" font-weight="bold"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="section-builtin-functions">6. Builtin functions and operators</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="use-content" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always" white-space-collapse="false"> </fo:leader> <fo:basic-link internal-destination="section-builtin-functions" text-align="right"><fo:page-number-citation ref-id="section-builtin-functions"/></fo:basic-link></fo:inline></fo:block><fo:block id="toc.idm139680691937984.section-builtin-functions" margin-left="24pt"><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" end-indent="24pt" last-line-end-indent="-24pt" text-align-last="justify" text-align="start"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="idm139680689826224">6.1. fn:boolean (aka Effective Boolean Value)</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="idm139680689826224" text-align="right"><fo:page-number-citation ref-id="idm139680689826224"/></fo:basic-link></fo:inline></fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" end-indent="24pt" last-line-end-indent="-24pt" text-align-last="justify" text-align="start"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="idm139680680392288">6.2. fn:collection</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="idm139680680392288" text-align="right"><fo:page-number-citation ref-id="idm139680680392288"/></fo:basic-link></fo:inline></fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" end-indent="24pt" last-line-end-indent="-24pt" text-align-last="justify" text-align="start"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="idm139680676044544">6.3. fn:data (aka Atomization)</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="idm139680676044544" text-align="right"><fo:page-number-citation ref-id="idm139680676044544"/></fo:basic-link></fo:inline></fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" end-indent="24pt" last-line-end-indent="-24pt" text-align-last="justify" text-align="start"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="idm139680677709504">6.4. fn:string (aka string value)</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="idm139680677709504" text-align="right"><fo:page-number-citation ref-id="idm139680677709504"/></fo:basic-link></fo:inline></fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" end-indent="24pt" last-line-end-indent="-24pt" text-align-last="justify" text-align="start"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="idm139680687909856">6.5. fn:trace</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="idm139680687909856" text-align="right"><fo:page-number-citation ref-id="idm139680687909856"/></fo:basic-link></fo:inline></fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" end-indent="24pt" last-line-end-indent="-24pt" text-align-last="justify" text-align="start"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="idm139680687908448">6.6. jn:decode-from-roundtrip</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="idm139680687908448" text-align="right"><fo:page-number-citation ref-id="idm139680687908448"/></fo:basic-link></fo:inline></fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" end-indent="24pt" last-line-end-indent="-24pt" text-align-last="justify" text-align="start"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="idm139680688257984">6.7. jn:encode-for-roundtrip</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="idm139680688257984" text-align="right"><fo:page-number-citation ref-id="idm139680688257984"/></fo:basic-link></fo:inline></fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" end-indent="24pt" last-line-end-indent="-24pt" text-align-last="justify" text-align="start"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="idm139680689026288">6.8. jn:json-doc</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="idm139680689026288" text-align="right"><fo:page-number-citation ref-id="idm139680689026288"/></fo:basic-link></fo:inline></fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" end-indent="24pt" last-line-end-indent="-24pt" text-align-last="justify" text-align="start"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="idm139680689023504">6.9. jn:keys</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="idm139680689023504" text-align="right"><fo:page-number-citation ref-id="idm139680689023504"/></fo:basic-link></fo:inline></fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" end-indent="24pt" last-line-end-indent="-24pt" text-align-last="justify" text-align="start"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="idm139680687257472">6.10. jn:members</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="idm139680687257472" text-align="right"><fo:page-number-citation ref-id="idm139680687257472"/></fo:basic-link></fo:inline></fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" end-indent="24pt" last-line-end-indent="-24pt" text-align-last="justify" text-align="start"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="idm139680687252272">6.11. jn:null</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="idm139680687252272" text-align="right"><fo:page-number-citation ref-id="idm139680687252272"/></fo:basic-link></fo:inline></fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" end-indent="24pt" last-line-end-indent="-24pt" text-align-last="justify" text-align="start"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="idm139680687249904">6.12. jn:parse-json</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="idm139680687249904" text-align="right"><fo:page-number-citation ref-id="idm139680687249904"/></fo:basic-link></fo:inline></fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" end-indent="24pt" last-line-end-indent="-24pt" text-align-last="justify" text-align="start"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="idm139680687238752">6.13. jn:size</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="idm139680687238752" text-align="right"><fo:page-number-citation ref-id="idm139680687238752"/></fo:basic-link></fo:inline></fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" end-indent="24pt" last-line-end-indent="-24pt" text-align-last="justify" text-align="start"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="idm139680687233840">6.14. Changes to cast semantics</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="idm139680687233840" text-align="right"><fo:page-number-citation ref-id="idm139680687233840"/></fo:basic-link></fo:inline></fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" end-indent="24pt" last-line-end-indent="-24pt" text-align-last="justify" text-align="start"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="idm139680687230896">6.15. Changes to arithmetic operation semantics</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="idm139680687230896" text-align="right"><fo:page-number-citation ref-id="idm139680687230896"/></fo:basic-link></fo:inline></fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" end-indent="24pt" last-line-end-indent="-24pt" text-align-last="justify" text-align="start"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="idm139680687226032">6.16. Changes to value comparison semantics</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="idm139680687226032" text-align="right"><fo:page-number-citation ref-id="idm139680687226032"/></fo:basic-link></fo:inline></fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" end-indent="24pt" last-line-end-indent="-24pt" text-align-last="justify" text-align="start"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="idm139680687221184">6.17. Changes to general comparison semantics</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="idm139680687221184" text-align="right"><fo:page-number-citation ref-id="idm139680687221184"/></fo:basic-link></fo:inline></fo:block></fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" end-indent="24pt" last-line-end-indent="-24pt" text-align-last="justify" text-align="left" space-before.minimum="6pt" space-before.optimum="6pt" space-before.maximum="8pt" font-weight="bold"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="section-json-updates">7. JSON updates</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="use-content" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always" white-space-collapse="false"> </fo:leader> <fo:basic-link internal-destination="section-json-updates" text-align="right"><fo:page-number-citation ref-id="section-json-updates"/></fo:basic-link></fo:inline></fo:block><fo:block id="toc.idm139680691937984.section-json-updates" margin-left="24pt"><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" end-indent="24pt" last-line-end-indent="-24pt" text-align-last="justify" text-align="start"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="idm139680678785968">7.1. JSON udpate primitives</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="idm139680678785968" text-align="right"><fo:page-number-citation ref-id="idm139680678785968"/></fo:basic-link></fo:inline></fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" end-indent="24pt" last-line-end-indent="-24pt" text-align-last="justify" text-align="start"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="idm139680685492080">7.2. Update syntax: new updating expressions</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="idm139680685492080" text-align="right"><fo:page-number-citation ref-id="idm139680685492080"/></fo:basic-link></fo:inline></fo:block><fo:block id="toc.idm139680691937984.idm139680685492080" margin-left="24pt"><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" end-indent="24pt" last-line-end-indent="-24pt" text-align-last="justify" text-align="start"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="idm139680685490864">7.2.1. Deleting expressions</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="idm139680685490864" text-align="right"><fo:page-number-citation ref-id="idm139680685490864"/></fo:basic-link></fo:inline></fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" end-indent="24pt" last-line-end-indent="-24pt" text-align-last="justify" text-align="start"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="idm139680686499680">7.2.2. Inserting expressions</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="idm139680686499680" text-align="right"><fo:page-number-citation ref-id="idm139680686499680"/></fo:basic-link></fo:inline></fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" end-indent="24pt" last-line-end-indent="-24pt" text-align-last="justify" text-align="start"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="idm139680685602192">7.2.3. Renaming expressions</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="idm139680685602192" text-align="right"><fo:page-number-citation ref-id="idm139680685602192"/></fo:basic-link></fo:inline></fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" end-indent="24pt" last-line-end-indent="-24pt" text-align-last="justify" text-align="start"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="idm139680688144240">7.2.4. Replacing expressions</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="idm139680688144240" text-align="right"><fo:page-number-citation ref-id="idm139680688144240"/></fo:basic-link></fo:inline></fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" end-indent="24pt" last-line-end-indent="-24pt" text-align-last="justify" text-align="start"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="idm139680688129760">7.2.5. Appending expressions</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="idm139680688129760" text-align="right"><fo:page-number-citation ref-id="idm139680688129760"/></fo:basic-link></fo:inline></fo:block></fo:block></fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" end-indent="24pt" last-line-end-indent="-24pt" text-align-last="justify" text-align="left" space-before.minimum="6pt" space-before.optimum="6pt" space-before.maximum="8pt" font-weight="bold"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="section-function-library">8. Function library</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="use-content" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always" white-space-collapse="false"> </fo:leader> <fo:basic-link internal-destination="section-function-library" text-align="right"><fo:page-number-citation ref-id="section-function-library"/></fo:basic-link></fo:inline></fo:block><fo:block id="toc.idm139680691937984.section-function-library" margin-left="24pt"><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" end-indent="24pt" last-line-end-indent="-24pt" text-align-last="justify" text-align="start"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="idm139680687716208">8.1. libjn:accumulate</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="idm139680687716208" text-align="right"><fo:page-number-citation ref-id="idm139680687716208"/></fo:basic-link></fo:inline></fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" end-indent="24pt" last-line-end-indent="-24pt" text-align-last="justify" text-align="start"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="idm139680685142176">8.2. libjn:descendant-arrays</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="idm139680685142176" text-align="right"><fo:page-number-citation ref-id="idm139680685142176"/></fo:basic-link></fo:inline></fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" end-indent="24pt" last-line-end-indent="-24pt" text-align-last="justify" text-align="start"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="idm139680679846912">8.3. libjn:descendant-objects</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="idm139680679846912" text-align="right"><fo:page-number-citation ref-id="idm139680679846912"/></fo:basic-link></fo:inline></fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" end-indent="24pt" last-line-end-indent="-24pt" text-align-last="justify" text-align="start"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="idm139680679482208">8.4. libjn:descendant-pairs</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="idm139680679482208" text-align="right"><fo:page-number-citation ref-id="idm139680679482208"/></fo:basic-link></fo:inline></fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" end-indent="24pt" last-line-end-indent="-24pt" text-align-last="justify" text-align="start"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="idm139680678064352">8.5. libjn:flatten</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="idm139680678064352" text-align="right"><fo:page-number-citation ref-id="idm139680678064352"/></fo:basic-link></fo:inline></fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" end-indent="24pt" last-line-end-indent="-24pt" text-align-last="justify" text-align="start"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="idm139680678059168">8.6. libjn:intersect</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="idm139680678059168" text-align="right"><fo:page-number-citation ref-id="idm139680678059168"/></fo:basic-link></fo:inline></fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" end-indent="24pt" last-line-end-indent="-24pt" text-align-last="justify" text-align="start"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="idm139680685270576">8.7. libjn:project</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="idm139680685270576" text-align="right"><fo:page-number-citation ref-id="idm139680685270576"/></fo:basic-link></fo:inline></fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" end-indent="24pt" last-line-end-indent="-24pt" text-align-last="justify" text-align="start"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="idm139680677721376">8.8. libjn:remove-keys</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="idm139680677721376" text-align="right"><fo:page-number-citation ref-id="idm139680677721376"/></fo:basic-link></fo:inline></fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" end-indent="24pt" last-line-end-indent="-24pt" text-align-last="justify" text-align="start"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="idm139680677715872">8.9. libjn:values</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="idm139680677715872" text-align="right"><fo:page-number-citation ref-id="idm139680677715872"/></fo:basic-link></fo:inline></fo:block></fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" end-indent="24pt" last-line-end-indent="-24pt" text-align-last="justify" text-align="left" space-before.minimum="6pt" space-before.optimum="6pt" space-before.maximum="8pt" font-weight="bold"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="section-combining-xml-and-json">9. Combining XML and JSON</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="use-content" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always" white-space-collapse="false"> </fo:leader> <fo:basic-link internal-destination="section-combining-xml-and-json" text-align="right"><fo:page-number-citation ref-id="section-combining-xml-and-json"/></fo:basic-link></fo:inline></fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" end-indent="24pt" last-line-end-indent="-24pt" text-align-last="justify" text-align="left" space-before.minimum="6pt" space-before.optimum="6pt" space-before.maximum="8pt" font-weight="bold"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="section-json-serialization">10. JSON Serialization</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="use-content" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always" white-space-collapse="false"> </fo:leader> <fo:basic-link internal-destination="section-json-serialization" text-align="right"><fo:page-number-citation ref-id="section-json-serialization"/></fo:basic-link></fo:inline></fo:block><fo:block id="toc.idm139680691937984.section-json-serialization" margin-left="24pt"><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" end-indent="24pt" last-line-end-indent="-24pt" text-align-last="justify" text-align="start"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="idm139680677771840">10.1. New serialization parameters</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="idm139680677771840" text-align="right"><fo:page-number-citation ref-id="idm139680677771840"/></fo:basic-link></fo:inline></fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" end-indent="24pt" last-line-end-indent="-24pt" text-align-last="justify" text-align="start"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="idm139680678071312">10.2. Changes to sequence normalization</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="idm139680678071312" text-align="right"><fo:page-number-citation ref-id="idm139680678071312"/></fo:basic-link></fo:inline></fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" end-indent="24pt" last-line-end-indent="-24pt" text-align-last="justify" text-align="start"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="idm139680688813360">10.3. The JSON output method</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="idm139680688813360" text-align="right"><fo:page-number-citation ref-id="idm139680688813360"/></fo:basic-link></fo:inline></fo:block><fo:block id="toc.idm139680691937984.idm139680688813360" margin-left="24pt"><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" end-indent="24pt" last-line-end-indent="-24pt" text-align-last="justify" text-align="start"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="idm139680685835888">10.3.1. Serialization of a sequence of items</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="idm139680685835888" text-align="right"><fo:page-number-citation ref-id="idm139680685835888"/></fo:basic-link></fo:inline></fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" end-indent="24pt" last-line-end-indent="-24pt" text-align-last="justify" text-align="start"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="idm139680687663504">10.3.2. Serialization of individual JSON values</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="idm139680687663504" text-align="right"><fo:page-number-citation ref-id="idm139680687663504"/></fo:basic-link></fo:inline></fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" end-indent="24pt" last-line-end-indent="-24pt" text-align-last="justify" text-align="start"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="idm139680678818400">10.3.3. Influence of other serialization parameters upon the JSON output method</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="idm139680678818400" text-align="right"><fo:page-number-citation ref-id="idm139680678818400"/></fo:basic-link></fo:inline></fo:block></fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" end-indent="24pt" last-line-end-indent="-24pt" text-align-last="justify" text-align="start"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="idm139680686274048">10.4. The JSON-XML-hybrid output method</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="idm139680686274048" text-align="right"><fo:page-number-citation ref-id="idm139680686274048"/></fo:basic-link></fo:inline></fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" end-indent="24pt" last-line-end-indent="-24pt" text-align-last="justify" text-align="start"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="idm139680686268448">10.5. Changes to ther other output methods</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="idm139680686268448" text-align="right"><fo:page-number-citation ref-id="idm139680686268448"/></fo:basic-link></fo:inline></fo:block></fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" end-indent="24pt" last-line-end-indent="-24pt" text-align-last="justify" text-align="left" space-before.minimum="6pt" space-before.optimum="6pt" space-before.maximum="8pt" font-weight="bold"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="section-error-codes">11. Error codes</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="use-content" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always" white-space-collapse="false"> </fo:leader> <fo:basic-link internal-destination="section-error-codes" text-align="right"><fo:page-number-citation ref-id="section-error-codes"/></fo:basic-link></fo:inline></fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" end-indent="24pt" last-line-end-indent="-24pt" text-align-last="justify" text-align="left" space-before.minimum="6pt" space-before.optimum="6pt" space-before.maximum="8pt" font-weight="bold"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="section-grammar-summary">12. Grammar Summary</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="use-content" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always" white-space-collapse="false"> </fo:leader> <fo:basic-link internal-destination="section-grammar-summary" text-align="right"><fo:page-number-citation ref-id="section-grammar-summary"/></fo:basic-link></fo:inline></fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" end-indent="24pt" last-line-end-indent="-24pt" text-align-last="justify" text-align="left" space-before.minimum="6pt" space-before.optimum="6pt" space-before.maximum="8pt" font-weight="bold"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="section-implementation">13. Implementation in Zorba</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="use-content" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always" white-space-collapse="false"> </fo:leader> <fo:basic-link internal-destination="section-implementation" text-align="right"><fo:page-number-citation ref-id="section-implementation"/></fo:basic-link></fo:inline></fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" end-indent="24pt" last-line-end-indent="-24pt" text-align-last="justify" text-align="left" space-before.minimum="6pt" space-before.optimum="6pt" space-before.maximum="8pt" font-weight="bold"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="appe-JSONiq-Revision_History">A. Revision History</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="use-content" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always" white-space-collapse="false"> </fo:leader> <fo:basic-link internal-destination="appe-JSONiq-Revision_History" text-align="right"><fo:page-number-citation ref-id="appe-JSONiq-Revision_History"/></fo:basic-link></fo:inline></fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" end-indent="24pt" last-line-end-indent="-24pt" text-align-last="justify" text-align="left" space-before.minimum="6pt" space-before.optimum="6pt" space-before.maximum="8pt" font-weight="bold"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="idm139680683489824">Index</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="use-content" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always" white-space-collapse="false"> </fo:leader> <fo:basic-link internal-destination="idm139680683489824" text-align="right"><fo:page-number-citation ref-id="idm139680683489824"/></fo:basic-link></fo:inline></fo:block></fo:block></fo:flow></fo:page-sequence><fo:page-sequence xmlns:axf="http://www.antennahouse.com/names/XSL/Extensions" hyphenate="true" master-reference="body" language="en" format="1" initial-page-number="1" force-page-count="end-on-even" hyphenation-character="-" hyphenation-push-character-count="2" hyphenation-remain-character-count="2"><fo:static-content flow-name="xsl-region-before-first"><fo:block wrap-option="no-wrap" font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" margin-left="0pc"><fo:table table-layout="fixed" width="100%" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(0)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="before" relative-align="baseline"><fo:block/></fo:table-cell><fo:table-cell text-align="center" display-align="before" relative-align="baseline"><fo:block><fo:inline keep-together.within-line="always" font-weight="bold">Chapter 1.</fo:inline></fo:block></fo:table-cell><fo:table-cell text-align="right" display-align="before" relative-align="baseline"><fo:block/></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-before-odd"><fo:block wrap-option="no-wrap" font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" margin-left="0pc"><fo:table table-layout="fixed" width="100%" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(0)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="before" relative-align="baseline"><fo:block/></fo:table-cell><fo:table-cell text-align="center" display-align="before" relative-align="baseline"><fo:block/></fo:table-cell><fo:table-cell text-align="right" display-align="before" relative-align="baseline"><fo:block><fo:inline keep-together.within-line="always"><fo:retrieve-marker retrieve-class-name="section.head.marker" retrieve-position="first-including-carryover" retrieve-boundary="page-sequence"/></fo:inline></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-before-even"><fo:block wrap-option="no-wrap" font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" margin-left="0pc"><fo:table table-layout="fixed" width="100%" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(0)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="before" relative-align="baseline"><fo:block><fo:inline keep-together.within-line="always" font-weight="bold">Chapter 1. Status</fo:inline></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="before" relative-align="baseline"><fo:block/></fo:table-cell><fo:table-cell text-align="right" display-align="before" relative-align="baseline"><fo:block/></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-before-blank"><fo:block wrap-option="no-wrap" font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" margin-left="0pc"><fo:table table-layout="fixed" width="100%" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(0)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="before" relative-align="baseline"><fo:block/></fo:table-cell><fo:table-cell text-align="center" display-align="before" relative-align="baseline"><fo:block/></fo:table-cell><fo:table-cell text-align="right" display-align="before" relative-align="baseline"><fo:block/></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" flow-name="xsl-footnote-separator"><fo:block margin-top="2em"><fo:leader color="black" leader-pattern="rule" leader-length="1in"/></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-inner-first"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-inner-odd"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-inner-even"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-inner-blank"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-outer-first"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-outer-odd"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-outer-even"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-outer-blank"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-after-first"><fo:block font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" margin-left="0pc"><fo:table table-layout="fixed" width="100%" border-top-width="0.5pt" border-top-style="solid" border-top-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="end" display-align="after" relative-align="baseline"><fo:block><fo:block><fo:page-number/></fo:block></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-after-odd"><fo:block font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" margin-left="0pc"><fo:table table-layout="fixed" width="100%" border-top-width="0.5pt" border-top-style="solid" border-top-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="end" display-align="after" relative-align="baseline"><fo:block><fo:block><fo:page-number/></fo:block></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-after-even"><fo:block font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" margin-left="0pc"><fo:table table-layout="fixed" width="100%" border-top-width="0.5pt" border-top-style="solid" border-top-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="after" relative-align="baseline"><fo:block><fo:block><fo:page-number/></fo:block></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="end" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-after-blank"><fo:block font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" margin-left="0pc"><fo:table table-layout="fixed" width="100%" border-top-width="0.5pt" border-top-style="solid" border-top-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="after" relative-align="baseline"><fo:block><fo:block><fo:page-number/></fo:block></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="end" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:flow flow-name="xsl-region-body" start-indent="0pt" end-indent="0pt"><fo:block id="section-status"><fo:block font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats"><fo:block margin-left="0pc"><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" color="#336699" background-color="white" font-size="24pt" font-weight="bold" text-align="left" padding-left="1em" padding-right="1em">Status</fo:block></fo:block></fo:block></fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
		The JSONiq extension to XQuery allows processing XML and JSON natively and with a single language. This extension is based on the same data model as the core JSONiq and is based on the same logical concepts. Because of the complexity of the XQuery grammar, the JSONiq extension to XQuery has a less pleasant syntax that the JSONiq core:
	</fo:block><fo:list-block id="idm139680688119232" space-before.optimum="0.1pt" space-before.minimum="0.1pt" space-before.maximum="0.1pt" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em" provisional-label-separation="0.2em" provisional-distance-between-starts="1.0em"><fo:list-item id="idm139680687516032" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em">
				Object lookup is done with the same syntax as dynamic function calls (because the dot is allowed in variable names and XPath name tests).
			</fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item id="idm139680679629776" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em">
				All keys must be quoted (because unquoted strings are considered XPath name tests)
			</fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item id="idm139680687549520" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em">
				Escaping in strings is done the XML way, i.e., with ampersands instead of backslashes.
			</fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item id="idm139680687288560" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em">
				Builtin atomic types are actually builtin XML Schema types and must be prefixed with xs:
			</fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item id="idm139680687712624" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em">
				The item type syntax for structured items like object(), array(), json-item(), item() must use parentheses, as item types without parentheses are considered user-defined atomic types in XQuery.
			</fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item id="idm139680688693712" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em">
				The sequence type syntax for the empty sequence is empty-sequence().
			</fo:block></fo:block></fo:list-item-body></fo:list-item></fo:list-block></fo:flow></fo:page-sequence><fo:page-sequence xmlns:axf="http://www.antennahouse.com/names/XSL/Extensions" hyphenate="true" master-reference="body" language="en" format="1" initial-page-number="auto-odd" force-page-count="end-on-even" hyphenation-character="-" hyphenation-push-character-count="2" hyphenation-remain-character-count="2"><fo:static-content flow-name="xsl-region-before-first"><fo:block wrap-option="no-wrap" font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" margin-left="0pc"><fo:table table-layout="fixed" width="100%" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(0)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="before" relative-align="baseline"><fo:block/></fo:table-cell><fo:table-cell text-align="center" display-align="before" relative-align="baseline"><fo:block><fo:inline keep-together.within-line="always" font-weight="bold">Chapter 2.</fo:inline></fo:block></fo:table-cell><fo:table-cell text-align="right" display-align="before" relative-align="baseline"><fo:block/></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-before-odd"><fo:block wrap-option="no-wrap" font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" margin-left="0pc"><fo:table table-layout="fixed" width="100%" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(0)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="before" relative-align="baseline"><fo:block/></fo:table-cell><fo:table-cell text-align="center" display-align="before" relative-align="baseline"><fo:block/></fo:table-cell><fo:table-cell text-align="right" display-align="before" relative-align="baseline"><fo:block><fo:inline keep-together.within-line="always"><fo:retrieve-marker retrieve-class-name="section.head.marker" retrieve-position="first-including-carryover" retrieve-boundary="page-sequence"/></fo:inline></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-before-even"><fo:block wrap-option="no-wrap" font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" margin-left="0pc"><fo:table table-layout="fixed" width="100%" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(0)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="before" relative-align="baseline"><fo:block><fo:inline keep-together.within-line="always" font-weight="bold">Chapter 2. Introduction</fo:inline></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="before" relative-align="baseline"><fo:block/></fo:table-cell><fo:table-cell text-align="right" display-align="before" relative-align="baseline"><fo:block/></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-before-blank"><fo:block wrap-option="no-wrap" font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" margin-left="0pc"><fo:table table-layout="fixed" width="100%" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(0)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="before" relative-align="baseline"><fo:block/></fo:table-cell><fo:table-cell text-align="center" display-align="before" relative-align="baseline"><fo:block/></fo:table-cell><fo:table-cell text-align="right" display-align="before" relative-align="baseline"><fo:block/></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" flow-name="xsl-footnote-separator"><fo:block margin-top="2em"><fo:leader color="black" leader-pattern="rule" leader-length="1in"/></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-inner-first"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-inner-odd"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-inner-even"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-inner-blank"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-outer-first"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-outer-odd"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-outer-even"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-outer-blank"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-after-first"><fo:block font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" margin-left="0pc"><fo:table table-layout="fixed" width="100%" border-top-width="0.5pt" border-top-style="solid" border-top-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="end" display-align="after" relative-align="baseline"><fo:block><fo:block><fo:page-number/></fo:block></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-after-odd"><fo:block font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" margin-left="0pc"><fo:table table-layout="fixed" width="100%" border-top-width="0.5pt" border-top-style="solid" border-top-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="end" display-align="after" relative-align="baseline"><fo:block><fo:block><fo:page-number/></fo:block></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-after-even"><fo:block font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" margin-left="0pc"><fo:table table-layout="fixed" width="100%" border-top-width="0.5pt" border-top-style="solid" border-top-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="after" relative-align="baseline"><fo:block><fo:block><fo:page-number/></fo:block></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="end" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-after-blank"><fo:block font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" margin-left="0pc"><fo:table table-layout="fixed" width="100%" border-top-width="0.5pt" border-top-style="solid" border-top-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="after" relative-align="baseline"><fo:block><fo:block><fo:page-number/></fo:block></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="end" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:flow flow-name="xsl-region-body" start-indent="0pt" end-indent="0pt"><fo:block id="section-introduction"><fo:block font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats"><fo:block margin-left="0pc"><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" color="#336699" background-color="white" font-size="24pt" font-weight="bold" text-align="left" padding-left="1em" padding-right="1em">Introduction</fo:block></fo:block></fo:block></fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
		JSON and XML are both widely used for data interchange on the Internet. In many applications, JSON is replacing XML in Web Service APIs and data feeds; other applications support both formats. XML adds significant overhead for namespaces, whitespace handling, the oddities of XML Schema, and other things that are simply not needed in many data-oriented applications that require no more than simple serialization of program structures. On the other hand, many applications do need these features, and the ability to use document data together with traditional program data is important.
	</fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
		JSONiq is a small and simple set of extensions to XQuery that add support for JSON. For applications that need only JSON, we have defined a profile called XQ-- that removes all support for XML constructors, path expressions, user defined functions, and some other features considered unnecessary for most JSON queries. Syntax diagrams for XQ-- are available at <fo:basic-link external-destination="url(http://jsoniq.org/grammars/xq--/ui.xhtml)" font-style="italic" color="#0066cc"><fo:inline hyphenate="false">http://jsoniq.org/grammars/xq--/ui.xhtml</fo:inline></fo:basic-link>.
	</fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
		For applications that need to process XML together with JSON, we have defined a profile called XQ++ that adds these extensions to the full XQuery language. Syntax diagrams for XQ++ are available at <fo:basic-link external-destination="url(http://jsoniq.org/grammars/xq++/ui.xhtml)" font-style="italic" color="#0066cc"><fo:inline hyphenate="false">http://jsoniq.org/grammars/xq++/ui.xhtml</fo:inline></fo:basic-link>.
	</fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
		JSONiq consists of the following extensions to XQuery:
	</fo:block><fo:list-block id="idm139680676247696" space-before.optimum="0.1pt" space-before.minimum="0.1pt" space-before.maximum="0.1pt" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em" provisional-label-separation="0.2em" provisional-distance-between-starts="1.0em"><fo:list-item id="idm139680676259072" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em">
				Extensions to the XQuery Data Model (XDM) to support JSON.
			</fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item id="idm139680688490512" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em">
				Support for JSON's datatypes, with a mapping to equivalent XML Schema types.
			</fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item id="idm139680675888608" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em">
				Navigation for JSON Objects and JSON Arrays.
			</fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item id="idm139680679713888" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em">
				Constructors for JSON Objects, Pairs, and JSON Arrays, using the same syntax as JSON.
			</fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item id="idm139680685703536" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em">
				Update primitives against JSON items as well as updating expressions which produce them.
			</fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item id="idm139680680350240" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em">
				New item types, which extend sequence type matching to allow the type of JSONiq datatypes to be specified in function parameters, return types, and other expressions that specify XQuery types.
			</fo:block></fo:block></fo:list-item-body></fo:list-item></fo:list-block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
		JSONiq is designed to seamlessly integrate in XQuery's full composability paradigm. In particular, JSON constructors can appear in any XQuery expression, and any XQuery expression can appear in a JSON constructor.
	</fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
		The namespace <fo:inline font-weight="bold" font-family="Liberation Mono,monospace">http://jsoniq.org/functions</fo:inline> is used for functions defined by this specification. This namespace is exposed to the user and is bound by default to the prefix <fo:inline font-weight="bold" font-family="Liberation Mono,monospace">jn</fo:inline>. For instance, the function name <fo:inline font-weight="bold" font-family="Liberation Mono,monospace">jn:json-doc()</fo:inline> is in this namespace.
	</fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
		The namespace <fo:inline font-weight="bold" font-family="Liberation Mono,monospace">http://jsoniq.org/types</fo:inline> is used for types defined by this specification. This namespace is exposed to the user and is bound by default to the prefix <fo:inline font-weight="bold" font-family="Liberation Mono,monospace">jn</fo:inline>. For instance, the type name <fo:inline font-weight="bold" font-family="Liberation Mono,monospace">js:null</fo:inline> is in this namespace.
	</fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
		The namespace <fo:inline font-weight="bold" font-family="Liberation Mono,monospace">http://jsoniq.org/function-library</fo:inline> is used for library functions defined by this specification. This namespace is exposed to the user, however no prefix is predeclared for this namespace. For convenience, this document uses the prefix <fo:inline font-weight="bold" font-family="Liberation Mono,monospace">libjn:</fo:inline> for names in this namespace. For instance, the function name <fo:inline font-weight="bold" font-family="Liberation Mono,monospace">libjn:accumulate</fo:inline> is in this namespace.
	</fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
		The namespace <fo:inline font-weight="bold" font-family="Liberation Mono,monospace">http://jsoniq.org/errors</fo:inline> is used for the names of errors defined by this specification. This namespace is exposed to the user, however no prefix is predeclared for this namespace. For convenience, this document uses the prefix <fo:inline font-weight="bold" font-family="Liberation Mono,monospace">jerr:</fo:inline> for names in this namespace. For instance, the error name <fo:inline font-weight="bold" font-family="Liberation Mono,monospace">jerr:JQTY0001</fo:inline> is in this namespace.
	</fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
		The namespace <fo:inline font-weight="bold" font-family="Liberation Mono,monospace">http://jsoniq.org/updates</fo:inline> is used for the names of update primitives defined by this specification. This namespace is not exposed to the user. For convenience, this document uses the prefix <fo:inline font-weight="bold" font-family="Liberation Mono,monospace">jupd:</fo:inline> for names in this namespace. For instance, the update primitive <fo:inline font-weight="bold" font-family="Liberation Mono,monospace">jupd:delete-from-object</fo:inline> is in this namespace.
	</fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
		Accessors used in JSONiq Data Model use the <fo:inline font-weight="bold" font-family="Liberation Mono,monospace">jdm:</fo:inline> prefix. These functions are not exposed to the user and are for explanatory purposes of the data model within this document only. The <fo:inline font-weight="bold" font-family="Liberation Mono,monospace">jdm:</fo:inline> prefix is not associated with a namespace.
	</fo:block></fo:flow></fo:page-sequence><fo:page-sequence xmlns:axf="http://www.antennahouse.com/names/XSL/Extensions" hyphenate="true" master-reference="body" language="en" format="1" initial-page-number="auto-odd" force-page-count="end-on-even" hyphenation-character="-" hyphenation-push-character-count="2" hyphenation-remain-character-count="2"><fo:static-content flow-name="xsl-region-before-first"><fo:block wrap-option="no-wrap" font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" margin-left="0pc"><fo:table table-layout="fixed" width="100%" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(0)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="before" relative-align="baseline"><fo:block/></fo:table-cell><fo:table-cell text-align="center" display-align="before" relative-align="baseline"><fo:block><fo:inline keep-together.within-line="always" font-weight="bold">Chapter 3.</fo:inline></fo:block></fo:table-cell><fo:table-cell text-align="right" display-align="before" relative-align="baseline"><fo:block/></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-before-odd"><fo:block wrap-option="no-wrap" font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" margin-left="0pc"><fo:table table-layout="fixed" width="100%" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(0)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="before" relative-align="baseline"><fo:block/></fo:table-cell><fo:table-cell text-align="center" display-align="before" relative-align="baseline"><fo:block/></fo:table-cell><fo:table-cell text-align="right" display-align="before" relative-align="baseline"><fo:block><fo:inline keep-together.within-line="always"><fo:retrieve-marker retrieve-class-name="section.head.marker" retrieve-position="first-including-carryover" retrieve-boundary="page-sequence"/></fo:inline></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-before-even"><fo:block wrap-option="no-wrap" font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" margin-left="0pc"><fo:table table-layout="fixed" width="100%" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(0)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="before" relative-align="baseline"><fo:block><fo:inline keep-together.within-line="always" font-weight="bold">Chapter 3. JSONiq Data Model</fo:inline></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="before" relative-align="baseline"><fo:block/></fo:table-cell><fo:table-cell text-align="right" display-align="before" relative-align="baseline"><fo:block/></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-before-blank"><fo:block wrap-option="no-wrap" font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" margin-left="0pc"><fo:table table-layout="fixed" width="100%" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(0)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="before" relative-align="baseline"><fo:block/></fo:table-cell><fo:table-cell text-align="center" display-align="before" relative-align="baseline"><fo:block/></fo:table-cell><fo:table-cell text-align="right" display-align="before" relative-align="baseline"><fo:block/></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" flow-name="xsl-footnote-separator"><fo:block margin-top="2em"><fo:leader color="black" leader-pattern="rule" leader-length="1in"/></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-inner-first"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-inner-odd"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-inner-even"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-inner-blank"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-outer-first"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-outer-odd"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-outer-even"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-outer-blank"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-after-first"><fo:block font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" margin-left="0pc"><fo:table table-layout="fixed" width="100%" border-top-width="0.5pt" border-top-style="solid" border-top-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="end" display-align="after" relative-align="baseline"><fo:block><fo:block><fo:page-number/></fo:block></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-after-odd"><fo:block font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" margin-left="0pc"><fo:table table-layout="fixed" width="100%" border-top-width="0.5pt" border-top-style="solid" border-top-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="end" display-align="after" relative-align="baseline"><fo:block><fo:block><fo:page-number/></fo:block></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-after-even"><fo:block font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" margin-left="0pc"><fo:table table-layout="fixed" width="100%" border-top-width="0.5pt" border-top-style="solid" border-top-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="after" relative-align="baseline"><fo:block><fo:block><fo:page-number/></fo:block></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="end" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-after-blank"><fo:block font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" margin-left="0pc"><fo:table table-layout="fixed" width="100%" border-top-width="0.5pt" border-top-style="solid" border-top-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="after" relative-align="baseline"><fo:block><fo:block><fo:page-number/></fo:block></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="end" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:flow flow-name="xsl-region-body" start-indent="0pt" end-indent="0pt"><fo:block id="section-jsoniq-data-model"><fo:block font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats"><fo:block margin-left="0pc"><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" color="#336699" background-color="white" font-size="24pt" font-weight="bold" text-align="left" padding-left="1em" padding-right="1em">JSONiq Data Model</fo:block></fo:block></fo:block></fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
		JSONiq is based on the XQuery Data Model, adding support for JSON nulls, objects and arrays. <fo:footnote><fo:inline><fo:inline font-size="66.66%" font-weight="normal" font-style="normal" margin-left="0.25em" font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" baseline-shift="super">1</fo:inline></fo:inline><fo:footnote-body padding-top="48pt" font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" font-size="8pt" color="black" font-weight="normal" font-style="normal" text-align="left" start-indent="0pt" end-indent="0pt" text-indent="0pt" hyphenate="true" wrap-option="wrap" linefeed-treatment="treat-as-space"><fo:block><fo:inline font-size="66.66%" font-weight="normal" font-style="normal" margin-left="0.25em" font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" baseline-shift="super">1</fo:inline>
			In the XQ-- subset of JSONiq, we will define a simpler data model that omits much of the XQuery Data Model.
		</fo:block></fo:footnote-body></fo:footnote>
	</fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
		To support nulls, JSONiq adds the following atomic datatype:
	</fo:block><fo:list-block id="idm139680679209104" space-before.optimum="0.1pt" space-before.minimum="0.1pt" space-before.maximum="0.1pt" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em" provisional-label-separation="0.2em" provisional-distance-between-starts="1.0em"><fo:list-item id="idm139680688675984" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em">
				<fo:inline font-style="italic">js:null</fo:inline>, which represents a JSON null.
			</fo:block></fo:block></fo:list-item-body></fo:list-item></fo:list-block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
		To support JSON objects and arrays, JSONiq adds the following new items:
	</fo:block><fo:list-block id="idm139680685530528" space-before.optimum="0.1pt" space-before.minimum="0.1pt" space-before.maximum="0.1pt" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em" provisional-label-separation="0.2em" provisional-distance-between-starts="1.0em"><fo:list-item id="idm139680676154512" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em">
				<fo:inline font-style="italic">Object</fo:inline>, which represents a JSON object. An Object contains a set of string/item pairs.
			</fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item id="idm139680677734752" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em">
				<fo:inline font-style="italic">Array</fo:inline>, which represent a JSON array. An Array contains a sequence of items.
			</fo:block></fo:block></fo:list-item-body></fo:list-item></fo:list-block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
		As well as the generic term (associated with an item type):
	</fo:block><fo:list-block id="idm139680688532576" space-before.optimum="0.1pt" space-before.minimum="0.1pt" space-before.maximum="0.1pt" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em" provisional-label-separation="0.2em" provisional-distance-between-starts="1.0em"><fo:list-item id="idm139680688018992" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em">
				<fo:inline font-style="italic">JSON Item</fo:inline>, which can be an Object or an Array.
			</fo:block></fo:block></fo:list-item-body></fo:list-item></fo:list-block><fo:block id="idm139680682976128"><fo:block><fo:block><fo:block margin-left="0pc" font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" keep-together.within-column="always"><fo:block keep-with-next.within-column="always"><fo:block font-family="Liberation Sans,sans-serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="1.8em" space-before.optimum="2.0em" space-before.maximum="2.2em" space-after.minimum="0.1em" space-after.optimum="0.1em" space-after.maximum="0.1em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Simple Datatypes</fo:marker><fo:block color="#336699" font-size="16pt">3.1. Simple Datatypes</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
			JSON's simple values can have any of the following datatypes, which are supported as primitives in JSONiq.
		</fo:block><fo:list-block id="idm139680686722944" space-before.optimum="0.1pt" space-before.minimum="0.1pt" space-before.maximum="0.1pt" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em" provisional-label-separation="0.2em" provisional-distance-between-starts="1.0em"><fo:list-item id="idm139680677320208" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em">
					string
				</fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item id="idm139680677261808" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em">
					number
				</fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item id="idm139680687912560" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em">
					boolean (true, false)
				</fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item id="idm139680688417232" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em">
					null
				</fo:block></fo:block></fo:list-item-body></fo:list-item></fo:list-block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
			JSONiq represents a JSON string (a sequence of Unicode characters) as an xs:string. However, JSON supports strings (after resolving escaped characters) with characters of arbitrary unicode codepoints, whereas XML 1.0 and XML 1.1 only support a subset of these. It is implementation-defined if unicode characters outside of XML 1.0 or XML 1.1 are supported. Implementations which support XML 1.1 (which only excludes the null character) are encouraged to add support for the null character to provide full-fledged JSON support.
		</fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
			JSONiq represents the JSON simple values 'true' and 'false' as <fo:inline font-weight="bold" font-family="Liberation Mono,monospace">xs:boolean</fo:inline> values.
		</fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
			JSONiq adds one new data type: <fo:inline font-weight="bold" font-family="Liberation Mono,monospace">js:null</fo:inline>, derived from <fo:inline font-weight="bold" font-family="Liberation Mono,monospace">xs:anyAtomicType</fo:inline>. <fo:inline font-weight="bold" font-family="Liberation Mono,monospace">js:null</fo:inline> has a singleton value space containing the value <fo:inline font-style="italic">null</fo:inline> <fo:footnote><fo:inline><fo:inline font-size="66.66%" font-weight="normal" font-style="normal" margin-left="0.25em" font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" baseline-shift="super">2</fo:inline></fo:inline><fo:footnote-body padding-top="48pt" font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" font-size="8pt" color="black" font-weight="normal" font-style="normal" text-align="left" start-indent="0pt" end-indent="0pt" text-indent="0pt" hyphenate="true" wrap-option="wrap" linefeed-treatment="treat-as-space"><fo:block><fo:inline font-size="66.66%" font-weight="normal" font-style="normal" margin-left="0.25em" font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" baseline-shift="super">2</fo:inline>
				(Because the typed value of all <fo:inline font-weight="bold" font-family="Liberation Mono,monospace">js:null</fo:inline> instances is the same, nulls are always equal to each other for the purpose of value comparisons).
			</fo:block></fo:footnote-body></fo:footnote>. The lexical representation of an instance of <fo:inline font-weight="bold" font-family="Liberation Mono,monospace">js:null</fo:inline> is the string "<fo:inline font-weight="bold" font-family="Liberation Mono,monospace">null</fo:inline>".
		</fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
			JSON defines number as follows:
		</fo:block><fo:block margin-left="0.5in" margin-right="0.5in" space-after.minimum="0.5em" space-after.optimum="1em" space-after.maximum="2em"><fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
				A number can be represented as integer, real, or floating point. JSON does not support octal or hex because it is minimal. It does not have values for NaN or Infinity because it does not want to be tied to any particular internal representation.
			</fo:block></fo:block></fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
			JSONiq uses XQuery's lexical representation of numbers to distinguish integer, real, and floating point numbers <fo:footnote><fo:inline><fo:inline font-size="66.66%" font-weight="normal" font-style="normal" margin-left="0.25em" font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" baseline-shift="super">3</fo:inline></fo:inline><fo:footnote-body padding-top="48pt" font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" font-size="8pt" color="black" font-weight="normal" font-style="normal" text-align="left" start-indent="0pt" end-indent="0pt" text-indent="0pt" hyphenate="true" wrap-option="wrap" linefeed-treatment="treat-as-space"><fo:block><fo:inline font-size="66.66%" font-weight="normal" font-style="normal" margin-left="0.25em" font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" baseline-shift="super">3</fo:inline>
				The result of a JSONiq query may contain values such as NaN or Infinity, which cannot be serialized as JSON. These values have type <fo:inline font-weight="bold" font-family="Liberation Mono,monospace">xs:double</fo:inline>, and are either rejected or treated in a special way during the JSON Serialization process.
			</fo:block><fo:block space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
				ECMAScript also has has Infinity and NaN, and takes a similar approach.
			</fo:block></fo:footnote-body></fo:footnote>:
		</fo:block><fo:block id="idm139680688867680" text-align="start" wrap-option="wrap" hyphenation-character="\" space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="true" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" font-family="Liberation Mono,monospace" background-color="#f5f5f5" color="black" padding-left="6pt" padding-top="6pt" padding-bottom="6pt" margin-left="0pc" font-size="8pt" border-width="1pt" border-style="solid" border-color="#aaaaaa">NumericLiteral ::= IntegerLiteral | DecimalLiteral | DoubleLiteral</fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
			If a numeric literal has no "." character and no e or E character, it has the atomic type <fo:inline font-weight="bold" font-family="Liberation Mono,monospace">xs:integer</fo:inline>; if it has a "." character but no e or E character it has type <fo:inline font-weight="bold" font-family="Liberation Mono,monospace">xs:decimal</fo:inline>; if it has an e or E character it has type <fo:inline font-weight="bold" font-family="Liberation Mono,monospace">xs:double</fo:inline>.
		</fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
			Number literals are mapped to atomic values according to the XML Schema specification.
		</fo:block></fo:block><fo:block id="idm139680688864432"><fo:block><fo:block><fo:block margin-left="0pc" font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" keep-together.within-column="always"><fo:block keep-with-next.within-column="always"><fo:block font-family="Liberation Sans,sans-serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="1.8em" space-before.optimum="2.0em" space-before.maximum="2.2em" space-after.minimum="0.1em" space-after.optimum="0.1em" space-after.maximum="0.1em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">JSON Items</fo:marker><fo:block color="#336699" font-size="16pt">3.2. JSON Items</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
			A JSON Item is an item. A JSON Item has an identity <fo:footnote><fo:inline><fo:inline font-size="66.66%" font-weight="normal" font-style="normal" margin-left="0.25em" font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" baseline-shift="super">4</fo:inline></fo:inline><fo:footnote-body padding-top="48pt" font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" font-size="8pt" color="black" font-weight="normal" font-style="normal" text-align="left" start-indent="0pt" end-indent="0pt" text-indent="0pt" hyphenate="true" wrap-option="wrap" linefeed-treatment="treat-as-space"><fo:block><fo:inline font-size="66.66%" font-weight="normal" font-style="normal" margin-left="0.25em" font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" baseline-shift="super">4</fo:inline>
				The identity of an item is used only for updates, where it is used in the update primitives.
			</fo:block></fo:footnote-body></fo:footnote> , and it can be serialized. Objects and Arrays are JSON Items <fo:footnote><fo:inline><fo:inline font-size="66.66%" font-weight="normal" font-style="normal" margin-left="0.25em" font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" baseline-shift="super">5</fo:inline></fo:inline><fo:footnote-body padding-top="48pt" font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" font-size="8pt" color="black" font-weight="normal" font-style="normal" text-align="left" start-indent="0pt" end-indent="0pt" text-indent="0pt" hyphenate="true" wrap-option="wrap" linefeed-treatment="treat-as-space"><fo:block><fo:inline font-size="66.66%" font-weight="normal" font-style="normal" margin-left="0.25em" font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" baseline-shift="super">5</fo:inline>
				In this document, the words <fo:inline font-style="italic">Object</fo:inline> and <fo:inline font-style="italic">Array</fo:inline> refer to JSON constructs. Unlike objects in most programming languages, a JSON object contains only data.
			</fo:block></fo:footnote-body></fo:footnote> .
		</fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
			The diagram below shows the XQuery 3.0 type hierarchy, adding JSON Item and all types derived from it:
		</fo:block><fo:block id="idm139680691845872"><fo:external-graphic xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" src="url(images/type-hierarchy.svg)" width="100%" height="auto" content-width="scale-to-fit" content-height="scale-to-fit" content-type="content-type:image/svg+xml"/></fo:block></fo:block><fo:block id="idm139680691843696"><fo:block><fo:block><fo:block margin-left="0pc" font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" keep-together.within-column="always"><fo:block keep-with-next.within-column="always"><fo:block font-family="Liberation Sans,sans-serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="1.8em" space-before.optimum="2.0em" space-before.maximum="2.2em" space-after.minimum="0.1em" space-after.optimum="0.1em" space-after.maximum="0.1em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Objects</fo:marker><fo:block color="#336699" font-size="16pt">3.3. Objects</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
			An Object represents a JSON object (a collection of string/value pairs).
		</fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
			Objects have the following property:
		</fo:block><fo:list-block id="idm139680691131408" space-before.optimum="0.1pt" space-before.minimum="0.1pt" space-before.maximum="0.1pt" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em" provisional-label-separation="0.2em" provisional-distance-between-starts="1.0em"><fo:list-item id="idm139680691131088" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em">
					<fo:inline font-style="italic">pairs</fo:inline>. A set of pairs. Each pair consists of an atomic value of type <fo:inline font-weight="bold" font-family="Liberation Mono,monospace">xs:string</fo:inline> and of an item.
				</fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
					[ Consistency constraint: no two pairs have the same name (using <fo:inline font-weight="bold" font-family="Liberation Mono,monospace">fn:codepoint-equal</fo:inline>). ]
				</fo:block></fo:block></fo:list-item-body></fo:list-item></fo:list-block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
			The XQuery data model uses accessors to explain the data model. Accessors are not exposed to the user and are only used for convenience in this specification. Objects have the following accessors:
		</fo:block><fo:list-block id="idm139680691127360" space-before.optimum="0.1pt" space-before.minimum="0.1pt" space-before.maximum="0.1pt" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em" provisional-label-separation="0.2em" provisional-distance-between-starts="1.0em"><fo:list-item id="idm139680691127040" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em">
					<fo:inline font-weight="bold" font-family="Liberation Mono,monospace">jdm:keys($o as object()) as xs:string*</fo:inline>.
				</fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
					Returns all keys in the object $o.
				</fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item id="idm139680691125184" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em">
					<fo:inline font-weight="bold" font-family="Liberation Mono,monospace">jdm:value($o as object(), $s as xs:string) as item()</fo:inline>.
				</fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
					Returns the value associated with $s in the object $o.
				</fo:block></fo:block></fo:list-item-body></fo:list-item></fo:list-block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
			An Object does not have a typed value.
		</fo:block></fo:block><fo:block id="idm139680679913376"><fo:block><fo:block><fo:block margin-left="0pc" font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" keep-together.within-column="always"><fo:block keep-with-next.within-column="always"><fo:block font-family="Liberation Sans,sans-serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="1.8em" space-before.optimum="2.0em" space-before.maximum="2.2em" space-after.minimum="0.1em" space-after.optimum="0.1em" space-after.maximum="0.1em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Arrays</fo:marker><fo:block color="#336699" font-size="16pt">3.4. Arrays</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
			An Array represents a JSON array (an ordered list of values).
		</fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
			Arrays have the following property:
		</fo:block><fo:list-block id="idm139680679911600" space-before.optimum="0.1pt" space-before.minimum="0.1pt" space-before.maximum="0.1pt" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em" provisional-label-separation="0.2em" provisional-distance-between-starts="1.0em"><fo:list-item id="idm139680679911280" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em">
					<fo:inline font-style="italic">members</fo:inline>. An ordered list of items.
				</fo:block></fo:block></fo:list-item-body></fo:list-item></fo:list-block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
			Arrays have the following accessors:
		</fo:block><fo:list-block id="idm139680679909264" space-before.optimum="0.1pt" space-before.minimum="0.1pt" space-before.maximum="0.1pt" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em" provisional-label-separation="0.2em" provisional-distance-between-starts="1.0em"><fo:list-item id="idm139680679908944" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em">
					<fo:inline font-weight="bold" font-family="Liberation Mono,monospace">jdm:size($a as array()) as xs:integer</fo:inline>
				</fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
					Returns the number of values in the array $a.
				</fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item id="idm139680679907008" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em">
					<fo:inline font-weight="bold" font-family="Liberation Mono,monospace">jdm:value($a as array(), $i as xs:integer) as item()</fo:inline>
				</fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
					Returns the value at position $i in the array $a.
				</fo:block></fo:block></fo:list-item-body></fo:list-item></fo:list-block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
			An Array does not have a typed value.
		</fo:block></fo:block><fo:block id="idm139680679904304"><fo:block><fo:block><fo:block margin-left="0pc" font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" keep-together.within-column="always"><fo:block keep-with-next.within-column="always"><fo:block font-family="Liberation Sans,sans-serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="1.8em" space-before.optimum="2.0em" space-before.maximum="2.2em" space-after.minimum="0.1em" space-after.optimum="0.1em" space-after.maximum="0.1em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">ItemTypes for JSONiq Items</fo:marker><fo:block color="#336699" font-size="16pt">3.5. ItemTypes for JSONiq Items</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
			In XQuery, an ItemType is used to match certain items, for example in function signatures, return types, and a variety of other expressions. JSONiq extends XQuery's ItemType as follows:
		</fo:block><fo:block id="idm139680679902880" text-align="start" wrap-option="wrap" hyphenation-character="\" space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="true" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" font-family="Liberation Mono,monospace" background-color="#f5f5f5" color="black" padding-left="6pt" padding-top="6pt" padding-bottom="6pt" margin-left="0pc" font-size="8pt" border-width="1pt" border-style="solid" border-color="#aaaaaa">
      ItemType ::= -- everything so far --
        | JSONTest
        | StructuredItemTest

      JSONTest ::= 
          JSONItemTest
        | JSONObjectTest
        | JSONArrayTest

      StructuredItemTest ::= "structured-item" "(" ")"
      JSONItemTest ::= "json-item" "(" ")"
      JSONObjectTest ::= "object" "(" ")"
      JSONArrayTest ::= "array" "(" ")"
</fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
			The semantics of these expressions are straightforward.
		</fo:block><fo:list-block id="idm139680679901520" space-before.optimum="0.1pt" space-before.minimum="0.1pt" space-before.maximum="0.1pt" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em" provisional-label-separation="0.2em" provisional-distance-between-starts="1.0em"><fo:list-item id="idm139680679901200" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em">
					<fo:inline font-weight="bold" font-family="Liberation Mono,monospace">structured-item()</fo:inline> matches any node or JSON Item.
				</fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item id="idm139680679899792" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em">
					<fo:inline font-weight="bold" font-family="Liberation Mono,monospace">json-item()</fo:inline> matches any JSON Item (Object or Array).
				</fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item id="idm139680692789808" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em">
					<fo:inline font-weight="bold" font-family="Liberation Mono,monospace">object()</fo:inline> matches any Object.
				</fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item id="idm139680692788400" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em">
					<fo:inline font-weight="bold" font-family="Liberation Mono,monospace">array()</fo:inline> matches any Array.
				</fo:block></fo:block></fo:list-item-body></fo:list-item></fo:list-block><fo:block><fo:block id="idm139680692786832" border-left-width="3pt" border-left-style="solid" border-left-color="#aaaaaa" keep-together.within-column="" margin-left="0em" padding-left="0.8em" padding-top="0em" margin-top="1.5em" space-after.minimum="2em" space-after.optimum="2em" space-after.maximum="2em" space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em"><fo:block font-weight="normal" font-size="10pt" space-before.optimum="1em" space-before.minimum="0.5em" space-before.maximum="2em" space-after.optimum="0.1pt" space-after.minimum="0.1pt" space-after.maximum="0.1pt" color="#336699" background-color="white" hyphenate="false" keep-with-next.within-column="always">Example 3.1. JSON Items in Function Signatures and instance-of expressions</fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
				The following function returns any Objects that are members of an Array (see below for more on array navigation).
			</fo:block><fo:block id="idm139680692785392" text-align="start" wrap-option="wrap" hyphenation-character="\" space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="true" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" font-family="Liberation Mono,monospace" background-color="#f5f5f5" color="black" padding-left="6pt" padding-top="6pt" padding-bottom="6pt" margin-left="0pc" font-size="8pt" border-width="1pt" border-style="solid" border-color="#aaaaaa">
          declare function local:objects-in-array($a as array()) as object()* {
            for $i in 1 to jn:size($a)
            let $item := $a($i)
            where $iteminstance of object()
            return $item
          };
</fo:block></fo:block></fo:block></fo:block></fo:flow></fo:page-sequence><fo:page-sequence xmlns:axf="http://www.antennahouse.com/names/XSL/Extensions" hyphenate="true" master-reference="body" language="en" format="1" initial-page-number="auto-odd" force-page-count="end-on-even" hyphenation-character="-" hyphenation-push-character-count="2" hyphenation-remain-character-count="2"><fo:static-content flow-name="xsl-region-before-first"><fo:block wrap-option="no-wrap" font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" margin-left="0pc"><fo:table table-layout="fixed" width="100%" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(0)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="before" relative-align="baseline"><fo:block/></fo:table-cell><fo:table-cell text-align="center" display-align="before" relative-align="baseline"><fo:block><fo:inline keep-together.within-line="always" font-weight="bold">Chapter 4.</fo:inline></fo:block></fo:table-cell><fo:table-cell text-align="right" display-align="before" relative-align="baseline"><fo:block/></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-before-odd"><fo:block wrap-option="no-wrap" font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" margin-left="0pc"><fo:table table-layout="fixed" width="100%" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(0)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="before" relative-align="baseline"><fo:block/></fo:table-cell><fo:table-cell text-align="center" display-align="before" relative-align="baseline"><fo:block/></fo:table-cell><fo:table-cell text-align="right" display-align="before" relative-align="baseline"><fo:block><fo:inline keep-together.within-line="always"><fo:retrieve-marker retrieve-class-name="section.head.marker" retrieve-position="first-including-carryover" retrieve-boundary="page-sequence"/></fo:inline></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-before-even"><fo:block wrap-option="no-wrap" font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" margin-left="0pc"><fo:table table-layout="fixed" width="100%" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(0)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="before" relative-align="baseline"><fo:block><fo:inline keep-together.within-line="always" font-weight="bold">Chapter 4. Construction of JSON values</fo:inline></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="before" relative-align="baseline"><fo:block/></fo:table-cell><fo:table-cell text-align="right" display-align="before" relative-align="baseline"><fo:block/></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-before-blank"><fo:block wrap-option="no-wrap" font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" margin-left="0pc"><fo:table table-layout="fixed" width="100%" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(0)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="before" relative-align="baseline"><fo:block/></fo:table-cell><fo:table-cell text-align="center" display-align="before" relative-align="baseline"><fo:block/></fo:table-cell><fo:table-cell text-align="right" display-align="before" relative-align="baseline"><fo:block/></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" flow-name="xsl-footnote-separator"><fo:block margin-top="2em"><fo:leader color="black" leader-pattern="rule" leader-length="1in"/></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-inner-first"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-inner-odd"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-inner-even"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-inner-blank"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-outer-first"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-outer-odd"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-outer-even"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-outer-blank"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-after-first"><fo:block font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" margin-left="0pc"><fo:table table-layout="fixed" width="100%" border-top-width="0.5pt" border-top-style="solid" border-top-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="end" display-align="after" relative-align="baseline"><fo:block><fo:block><fo:page-number/></fo:block></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-after-odd"><fo:block font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" margin-left="0pc"><fo:table table-layout="fixed" width="100%" border-top-width="0.5pt" border-top-style="solid" border-top-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="end" display-align="after" relative-align="baseline"><fo:block><fo:block><fo:page-number/></fo:block></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-after-even"><fo:block font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" margin-left="0pc"><fo:table table-layout="fixed" width="100%" border-top-width="0.5pt" border-top-style="solid" border-top-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="after" relative-align="baseline"><fo:block><fo:block><fo:page-number/></fo:block></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="end" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-after-blank"><fo:block font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" margin-left="0pc"><fo:table table-layout="fixed" width="100%" border-top-width="0.5pt" border-top-style="solid" border-top-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="after" relative-align="baseline"><fo:block><fo:block><fo:page-number/></fo:block></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="end" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:flow flow-name="xsl-region-body" start-indent="0pt" end-indent="0pt"><fo:block id="section-json-value-construction"><fo:block font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats"><fo:block margin-left="0pc"><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" color="#336699" background-color="white" font-size="24pt" font-weight="bold" text-align="left" padding-left="1em" padding-right="1em">Construction of JSON values</fo:block></fo:block></fo:block></fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
		JSONiq Constructors create Objects, and Arrays. If an Object Constructor or an Array Constructor contains only literal data, as a rule of thumb, the syntax is the same as the JSON serialization. Constructors can also contain XQuery expressions to create content as the result of a query.
	</fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
		Here is the syntax for object and array constructors:
	</fo:block><fo:block id="idm139680681483600" text-align="start" wrap-option="wrap" hyphenation-character="\" space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="true" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" font-family="Liberation Mono,monospace" background-color="#f5f5f5" color="black" padding-left="6pt" padding-top="6pt" padding-bottom="6pt" margin-left="0pc" font-size="8pt" border-width="1pt" border-style="solid" border-color="#aaaaaa">
      PrimaryExpr ::= -- everything so far --
        | JSONConstructor

      JSONConstructor ::=
          ArrayConstructor
        | ObjectConstructor

      ArrayConstructor ::= "[" Expr? "]"

      ObjectConstructor ::= 
          "{" ( PairConstructor ("," PairConstructor)* )? "}"
        | | "{|" Expr "|}"
      PairConstructor ::=  ExprSingle (":" | "?:") ExprSingle
</fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
		XQuery expressions can occur within JSON constructors, and JSON constructors can occur within XQuery expressions. The semantics of such expressions are discussed in <fo:basic-link internal-destination="section-combining-xml-and-json"><fo:inline font-style="italic" color="#0066cc">Chapter 9, <fo:inline font-style="italic">Combining XML and JSON</fo:inline></fo:inline></fo:basic-link>.
	</fo:block><fo:block id="idm139680677803808"><fo:block><fo:block><fo:block margin-left="0pc" font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" keep-together.within-column="always"><fo:block keep-with-next.within-column="always"><fo:block font-family="Liberation Sans,sans-serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="1.8em" space-before.optimum="2.0em" space-before.maximum="2.2em" space-after.minimum="0.1em" space-after.optimum="0.1em" space-after.maximum="0.1em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Array Constructors</fo:marker><fo:block color="#336699" font-size="16pt">4.1. Array Constructors</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
			The expression in an Array Constructor, if present, evaluates to a sequence of zero or more items. The members of the constructed array are copies of these items, in the same order.
		</fo:block><fo:block><fo:block id="idm139680677275024" border-left-width="3pt" border-left-style="solid" border-left-color="#aaaaaa" keep-together.within-column="" margin-left="0em" padding-left="0.8em" padding-top="0em" margin-top="1.5em" space-after.minimum="2em" space-after.optimum="2em" space-after.maximum="2em" space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em"><fo:block font-weight="normal" font-size="10pt" space-before.optimum="1em" space-before.minimum="0.5em" space-before.maximum="2em" space-after.optimum="0.1pt" space-after.minimum="0.1pt" space-after.maximum="0.1pt" color="#336699" background-color="white" hyphenate="false" keep-with-next.within-column="always">Example 4.1. Array Constructors</fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
				An Array Constructor:
			</fo:block><fo:block id="idm139680686320128" text-align="start" wrap-option="wrap" hyphenation-character="\" space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="true" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" font-family="Liberation Mono,monospace" background-color="#f5f5f5" color="black" padding-left="6pt" padding-top="6pt" padding-bottom="6pt" margin-left="0pc" font-size="8pt" border-width="1pt" border-style="solid" border-color="#aaaaaa">
        [ "Sunday",
          "Monday",
          "Tuesday",
          "Wednesday",
          "Thursday",
          "Friday",
          "Saturday" ]
</fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
				Arrays can nest.
			</fo:block><fo:block id="idm139680687571856" text-align="start" wrap-option="wrap" hyphenation-character="\" space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="true" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" font-family="Liberation Mono,monospace" background-color="#f5f5f5" color="black" padding-left="6pt" padding-top="6pt" padding-bottom="6pt" margin-left="0pc" font-size="8pt" border-width="1pt" border-style="solid" border-color="#aaaaaa">
          [
            [1, 2, 3],
            [4, 5, 6],
            [7, 8, 9]
          ]
</fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
				Combining an Array Constructor with XQuery expressions:
			</fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
				Query:
			</fo:block><fo:block id="idm139680678122624" text-align="start" wrap-option="wrap" hyphenation-character="\" space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="true" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" font-family="Liberation Mono,monospace" background-color="#f5f5f5" color="black" padding-left="6pt" padding-top="6pt" padding-bottom="6pt" margin-left="0pc" font-size="8pt" border-width="1pt" border-style="solid" border-color="#aaaaaa">
        [ 10 to 15 ]
</fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
				Result:
			</fo:block><fo:block id="idm139680688057408" text-align="start" wrap-option="wrap" hyphenation-character="\" space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="true" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" font-family="Liberation Mono,monospace" background-color="#f5f5f5" color="black" padding-left="6pt" padding-top="6pt" padding-bottom="6pt" margin-left="0pc" font-size="8pt" border-width="1pt" border-style="solid" border-color="#aaaaaa">
        [ 10, 11, 12, 13, 14, 15 ]
</fo:block></fo:block></fo:block></fo:block><fo:block id="idm139680685246944"><fo:block><fo:block><fo:block margin-left="0pc" font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" keep-together.within-column="always"><fo:block keep-with-next.within-column="always"><fo:block font-family="Liberation Sans,sans-serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="1.8em" space-before.optimum="2.0em" space-before.maximum="2.2em" space-after.minimum="0.1em" space-after.optimum="0.1em" space-after.maximum="0.1em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Object Constructors</fo:marker><fo:block color="#336699" font-size="16pt">4.2. Object Constructors</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
			An Object Constructor is made of Pair Constructors. Each Pair Constructor creates a single string/item pair as follows: 
			<fo:list-block id="idm139680678587200" space-before.optimum="0.1pt" space-before.minimum="0.1pt" space-before.maximum="0.1pt" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em" provisional-label-separation="0.2em" provisional-distance-between-starts="1.0em"><fo:list-item id="idm139680684820624" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em">
						The string is the result of evaluating the left operand, atomizing it, checking that it results in a single atomic item, and casting it to <fo:inline font-weight="bold" font-family="Liberation Mono,monospace">xs:string</fo:inline>. Errors such as <fo:inline font-weight="bold" font-family="Liberation Mono,monospace">jerr:JNTY0004</fo:inline> or <fo:inline font-weight="bold" font-family="Liberation Mono,monospace">err:XPTY0004</fo:inline> may be raised upon failure of one of these steps.
					</fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item id="idm139680687749904" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em">
						If the right operand evaluates to a single item, the value of the pair is a copy of this result.
					</fo:block><fo:block space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
						If the right operand evaluates to the empty sequence, the value of the pair is the atomic value null (of type <fo:inline font-weight="bold" font-family="Liberation Mono,monospace">js:null</fo:inline>). However, if the colon is preceded with a question mark, the pair is omitted instead.
					</fo:block><fo:block space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
						If the right operand evaluates to a sequence of more than one item, the value of the pair is an array containing copies of all items in this sequence, in the same order.
					</fo:block></fo:block></fo:list-item-body></fo:list-item></fo:list-block>

		</fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
			An object is constructed, the pairs property of which comprise all pairs generated by the pair constructors. An error <fo:inline font-weight="bold" font-family="Liberation Mono,monospace">jerr:JNDY0003</fo:inline> is raised if two pairs have the same name (the comparison is made using <fo:inline font-weight="bold" font-family="Liberation Mono,monospace">fn:codepoint-equal</fo:inline>).
		</fo:block><fo:block><fo:block id="idm139680679124656" border-left-width="3pt" border-left-style="solid" border-left-color="#aaaaaa" keep-together.within-column="" margin-left="0em" padding-left="0.8em" padding-top="0em" margin-top="1.5em" space-after.minimum="2em" space-after.optimum="2em" space-after.maximum="2em" space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em"><fo:block font-weight="normal" font-size="10pt" space-before.optimum="1em" space-before.minimum="0.5em" space-before.maximum="2em" space-after.optimum="0.1pt" space-after.minimum="0.1pt" space-after.maximum="0.1pt" color="#336699" background-color="white" hyphenate="false" keep-with-next.within-column="always">Example 4.2. Object Constructors</fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
				An Object Constructor with literal data:
			</fo:block><fo:block id="idm139680679123408" text-align="start" wrap-option="wrap" hyphenation-character="\" space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="true" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" font-family="Liberation Mono,monospace" background-color="#f5f5f5" color="black" padding-left="6pt" padding-top="6pt" padding-bottom="6pt" margin-left="0pc" font-size="8pt" border-width="1pt" border-style="solid" border-color="#aaaaaa">
          {
            "id" : 404,
            "name" : "Stanco Grease Pot",
            "price" : 6.49,
            "weight" : 3.8,
            "uses" : ["Grease storage","Backpacking pot"]
          }
</fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
				Combining an Object Constructor with XQuery expressions:
			</fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
				Query:
			</fo:block><fo:block id="idm139680679121808" text-align="start" wrap-option="wrap" hyphenation-character="\" space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="true" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" font-family="Liberation Mono,monospace" background-color="#f5f5f5" color="black" padding-left="6pt" padding-top="6pt" padding-bottom="6pt" margin-left="0pc" font-size="8pt" border-width="1pt" border-style="solid" border-color="#aaaaaa">
          {
            "Sunday" : 1,
            "Monday" : 1 + 1,
            "Tuesday" : 3 * 1,
            "Wednesday" : 8 div 2,
            "Thursday" : 5,
            "Friday" : count(for $i in 1 to 6 return $i),
            "Saturday" : 10 - 3,
            "NotADay" ?: ()
          }
</fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
				Result:
			</fo:block><fo:block id="idm139680675916032" text-align="start" wrap-option="wrap" hyphenation-character="\" space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="true" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" font-family="Liberation Mono,monospace" background-color="#f5f5f5" color="black" padding-left="6pt" padding-top="6pt" padding-bottom="6pt" margin-left="0pc" font-size="8pt" border-width="1pt" border-style="solid" border-color="#aaaaaa">
          {
            "Sunday" : 1,
            "Monday" : 2,
            "Tuesday" : 3,
            "Wednesday" : 4,
            "Thursday" : 5,
            "Friday" : 6,
            "Saturday" : 7
          }
</fo:block></fo:block></fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
			Note:
		</fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
			A JSON item cannot be a child of an XML element or attribute. If a JSON item is used in the content expression of an XQuery constructor, the result will raise an error, as described in <fo:basic-link internal-destination="section-combining-xml-and-json"><fo:inline font-style="italic" color="#0066cc">Chapter 9, <fo:inline font-style="italic">Combining XML and JSON</fo:inline></fo:inline></fo:basic-link>.
		</fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
			There is also a syntax for dynamic object construction, which merges all the objects returned by the inner expression into a single object with a so-called "simple object union". A simple object union creates a new object, the pairs property of which is obtained by accumulating the pairs of all operand objects. An error <fo:inline font-weight="bold" font-family="Liberation Mono,monospace">jerr:JNDY0003</fo:inline> is raised if two pairs with the same name are encountered.
		</fo:block><fo:block><fo:block id="idm139680688564240" border-left-width="3pt" border-left-style="solid" border-left-color="#aaaaaa" keep-together.within-column="" margin-left="0em" padding-left="0.8em" padding-top="0em" margin-top="1.5em" space-after.minimum="2em" space-after.optimum="2em" space-after.maximum="2em" space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em"><fo:block font-weight="normal" font-size="10pt" space-before.optimum="1em" space-before.minimum="0.5em" space-before.maximum="2em" space-after.optimum="0.1pt" space-after.minimum="0.1pt" space-after.maximum="0.1pt" color="#336699" background-color="white" hyphenate="false" keep-with-next.within-column="always">Example 4.3. Dynamically building an object</fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
				Query:
			</fo:block><fo:block id="idm139680688562992" text-align="start" wrap-option="wrap" hyphenation-character="\" space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="true" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" font-family="Liberation Mono,monospace" background-color="#f5f5f5" color="black" padding-left="6pt" padding-top="6pt" padding-bottom="6pt" margin-left="0pc" font-size="8pt" border-width="1pt" border-style="solid" border-color="#aaaaaa">
          let $object1 := { "Captain" : "Kirk" }
          let $object2 := { "First officer" : "Spock" }
          return {| $object1, $object2 |}
</fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
				Result:
			</fo:block><fo:block id="idm139680688561904" text-align="start" wrap-option="wrap" hyphenation-character="\" space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="true" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" font-family="Liberation Mono,monospace" background-color="#f5f5f5" color="black" padding-left="6pt" padding-top="6pt" padding-bottom="6pt" margin-left="0pc" font-size="8pt" border-width="1pt" border-style="solid" border-color="#aaaaaa">
          {
            "Captain" : "Kirk",
            "First officer" : "Spock"
          }
</fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
				Query:
			</fo:block><fo:block id="idm139680688560976" text-align="start" wrap-option="wrap" hyphenation-character="\" space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="true" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" font-family="Liberation Mono,monospace" background-color="#f5f5f5" color="black" padding-left="6pt" padding-top="6pt" padding-bottom="6pt" margin-left="0pc" font-size="8pt" border-width="1pt" border-style="solid" border-color="#aaaaaa">
          {|
            for $d at $i in ("Sunday",
                             "Monday",
                             "Tuesday",
                             "Wednesday",
                             "Thursday",
                             "Friday",
                             "Saturday" )
            return { $d : $i }
          |}
</fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
				Result:
			</fo:block><fo:block id="idm139680688559696" text-align="start" wrap-option="wrap" hyphenation-character="\" space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="true" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" font-family="Liberation Mono,monospace" background-color="#f5f5f5" color="black" padding-left="6pt" padding-top="6pt" padding-bottom="6pt" margin-left="0pc" font-size="8pt" border-width="1pt" border-style="solid" border-color="#aaaaaa">
          {
            "Sunday" : 1,
            "Monday" : 2,
            "Tuesday" : 3,
            "Wednesday" : 4,
            "Thursday" : 5,
            "Friday" : 6,
            "Saturday" : 7
          }
</fo:block></fo:block></fo:block></fo:block><fo:block id="idm139680688558704"><fo:block><fo:block><fo:block margin-left="0pc" font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" keep-together.within-column="always"><fo:block keep-with-next.within-column="always"><fo:block font-family="Liberation Sans,sans-serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="1.8em" space-before.optimum="2.0em" space-before.maximum="2.2em" space-after.minimum="0.1em" space-after.optimum="0.1em" space-after.maximum="0.1em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Strings</fo:marker><fo:block color="#336699" font-size="16pt">4.3. Strings</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
			Strings can be constructed using XQuery String Literals.
		</fo:block><fo:block><fo:block id="idm139680688557456" border-left-width="3pt" border-left-style="solid" border-left-color="#aaaaaa" keep-together.within-column="" margin-left="0em" padding-left="0.8em" padding-top="0em" margin-top="1.5em" space-after.minimum="2em" space-after.optimum="2em" space-after.maximum="2em" space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em"><fo:block font-weight="normal" font-size="10pt" space-before.optimum="1em" space-before.minimum="0.5em" space-before.maximum="2em" space-after.optimum="0.1pt" space-after.minimum="0.1pt" space-after.maximum="0.1pt" color="#336699" background-color="white" hyphenate="false" keep-with-next.within-column="always">Example 4.4. JSON String construction</fo:block><fo:block id="idm139680691879072" text-align="start" wrap-option="wrap" hyphenation-character="\" space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="true" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" font-family="Liberation Mono,monospace" background-color="#f5f5f5" color="black" padding-left="6pt" padding-top="6pt" padding-bottom="6pt" margin-left="0pc" font-size="8pt" border-width="1pt" border-style="solid" border-color="#aaaaaa">
          "This is a string"
</fo:block></fo:block></fo:block></fo:block><fo:block id="idm139680691878304"><fo:block><fo:block><fo:block margin-left="0pc" font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" keep-together.within-column="always"><fo:block keep-with-next.within-column="always"><fo:block font-family="Liberation Sans,sans-serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="1.8em" space-before.optimum="2.0em" space-before.maximum="2.2em" space-after.minimum="0.1em" space-after.optimum="0.1em" space-after.maximum="0.1em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Numbers</fo:marker><fo:block color="#336699" font-size="16pt">4.4. Numbers</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
			Numbers can be constructed using XQuery Integer, Decimal and Double literals.
		</fo:block><fo:block><fo:block id="idm139680691877056" border-left-width="3pt" border-left-style="solid" border-left-color="#aaaaaa" keep-together.within-column="" margin-left="0em" padding-left="0.8em" padding-top="0em" margin-top="1.5em" space-after.minimum="2em" space-after.optimum="2em" space-after.maximum="2em" space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em"><fo:block font-weight="normal" font-size="10pt" space-before.optimum="1em" space-before.minimum="0.5em" space-before.maximum="2em" space-after.optimum="0.1pt" space-after.minimum="0.1pt" space-after.maximum="0.1pt" color="#336699" background-color="white" hyphenate="false" keep-with-next.within-column="always">Example 4.5. JSON Number construction</fo:block><fo:block id="idm139680691876288" text-align="start" wrap-option="wrap" hyphenation-character="\" space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="true" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" font-family="Liberation Mono,monospace" background-color="#f5f5f5" color="black" padding-left="6pt" padding-top="6pt" padding-bottom="6pt" margin-left="0pc" font-size="8pt" border-width="1pt" border-style="solid" border-color="#aaaaaa">
          42
          3.14
          6.022E23
</fo:block></fo:block></fo:block></fo:block><fo:block id="idm139680691875520"><fo:block><fo:block><fo:block margin-left="0pc" font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" keep-together.within-column="always"><fo:block keep-with-next.within-column="always"><fo:block font-family="Liberation Sans,sans-serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="1.8em" space-before.optimum="2.0em" space-before.maximum="2.2em" space-after.minimum="0.1em" space-after.optimum="0.1em" space-after.maximum="0.1em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Booleans</fo:marker><fo:block color="#336699" font-size="16pt">4.5. Booleans</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
			Booleans can be constructed using the XQuery builtin functions fn:true() and fn:false().
		</fo:block></fo:block><fo:block id="idm139680691874112"><fo:block><fo:block><fo:block margin-left="0pc" font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" keep-together.within-column="always"><fo:block keep-with-next.within-column="always"><fo:block font-family="Liberation Sans,sans-serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="1.8em" space-before.optimum="2.0em" space-before.maximum="2.2em" space-after.minimum="0.1em" space-after.optimum="0.1em" space-after.maximum="0.1em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Null</fo:marker><fo:block color="#336699" font-size="16pt">4.6. Null</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
			Null can be constructed using the new builtin function jn:null().
		</fo:block></fo:block><fo:block id="idm139680691872704"><fo:block><fo:block><fo:block margin-left="0pc" font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" keep-together.within-column="always"><fo:block keep-with-next.within-column="always"><fo:block font-family="Liberation Sans,sans-serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="1.8em" space-before.optimum="2.0em" space-before.maximum="2.2em" space-after.minimum="0.1em" space-after.optimum="0.1em" space-after.maximum="0.1em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Boolean and null literals</fo:marker><fo:block color="#336699" font-size="16pt">4.7. Boolean and null literals</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
			A new option <fo:inline font-weight="bold" font-family="Liberation Mono,monospace">jn:jsoniq-boolean-and-null-literals</fo:inline> is available ("yes" or "no"), that activates or deactivates the interpretation of a standalone NameTest "true", "false" or "null" (meaning: occurring as a PathExpr, i.e., no slashes, no axes) as boolean and null literals. By default, it is set to "yes". <fo:footnote><fo:inline><fo:inline font-size="66.66%" font-weight="normal" font-style="normal" margin-left="0.25em" font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" baseline-shift="super">1</fo:inline></fo:inline><fo:footnote-body padding-top="48pt" font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" font-size="8pt" color="black" font-weight="normal" font-style="normal" text-align="left" start-indent="0pt" end-indent="0pt" text-indent="0pt" hyphenate="true" wrap-option="wrap" linefeed-treatment="treat-as-space"><fo:block><fo:inline font-size="66.66%" font-weight="normal" font-style="normal" margin-left="0.25em" font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" baseline-shift="super">1</fo:inline>
				If this feature is activated, a relative path expression that tests for an element named <fo:inline font-weight="bold" font-family="Liberation Mono,monospace">true</fo:inline>, <fo:inline font-weight="bold" font-family="Liberation Mono,monospace">false</fo:inline>, or <fo:inline font-weight="bold" font-family="Liberation Mono,monospace">null</fo:inline> must use the <fo:inline font-weight="bold" font-family="Liberation Mono,monospace">./</fo:inline> construct, as in <fo:inline font-weight="bold" font-family="Liberation Mono,monospace">./true</fo:inline>.
			</fo:block></fo:footnote-body></fo:footnote>
		</fo:block></fo:block></fo:flow></fo:page-sequence><fo:page-sequence xmlns:axf="http://www.antennahouse.com/names/XSL/Extensions" hyphenate="true" master-reference="body" language="en" format="1" initial-page-number="auto-odd" force-page-count="end-on-even" hyphenation-character="-" hyphenation-push-character-count="2" hyphenation-remain-character-count="2"><fo:static-content flow-name="xsl-region-before-first"><fo:block wrap-option="no-wrap" font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" margin-left="0pc"><fo:table table-layout="fixed" width="100%" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(0)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="before" relative-align="baseline"><fo:block/></fo:table-cell><fo:table-cell text-align="center" display-align="before" relative-align="baseline"><fo:block><fo:inline keep-together.within-line="always" font-weight="bold">Chapter 5.</fo:inline></fo:block></fo:table-cell><fo:table-cell text-align="right" display-align="before" relative-align="baseline"><fo:block/></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-before-odd"><fo:block wrap-option="no-wrap" font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" margin-left="0pc"><fo:table table-layout="fixed" width="100%" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(0)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="before" relative-align="baseline"><fo:block/></fo:table-cell><fo:table-cell text-align="center" display-align="before" relative-align="baseline"><fo:block/></fo:table-cell><fo:table-cell text-align="right" display-align="before" relative-align="baseline"><fo:block><fo:inline keep-together.within-line="always"><fo:retrieve-marker retrieve-class-name="section.head.marker" retrieve-position="first-including-carryover" retrieve-boundary="page-sequence"/></fo:inline></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-before-even"><fo:block wrap-option="no-wrap" font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" margin-left="0pc"><fo:table table-layout="fixed" width="100%" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(0)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="before" relative-align="baseline"><fo:block><fo:inline keep-together.within-line="always" font-weight="bold">Chapter 5. Navigation in JSON content</fo:inline></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="before" relative-align="baseline"><fo:block/></fo:table-cell><fo:table-cell text-align="right" display-align="before" relative-align="baseline"><fo:block/></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-before-blank"><fo:block wrap-option="no-wrap" font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" margin-left="0pc"><fo:table table-layout="fixed" width="100%" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(0)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="before" relative-align="baseline"><fo:block/></fo:table-cell><fo:table-cell text-align="center" display-align="before" relative-align="baseline"><fo:block/></fo:table-cell><fo:table-cell text-align="right" display-align="before" relative-align="baseline"><fo:block/></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" flow-name="xsl-footnote-separator"><fo:block margin-top="2em"><fo:leader color="black" leader-pattern="rule" leader-length="1in"/></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-inner-first"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-inner-odd"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-inner-even"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-inner-blank"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-outer-first"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-outer-odd"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-outer-even"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-outer-blank"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-after-first"><fo:block font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" margin-left="0pc"><fo:table table-layout="fixed" width="100%" border-top-width="0.5pt" border-top-style="solid" border-top-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="end" display-align="after" relative-align="baseline"><fo:block><fo:block><fo:page-number/></fo:block></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-after-odd"><fo:block font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" margin-left="0pc"><fo:table table-layout="fixed" width="100%" border-top-width="0.5pt" border-top-style="solid" border-top-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="end" display-align="after" relative-align="baseline"><fo:block><fo:block><fo:page-number/></fo:block></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-after-even"><fo:block font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" margin-left="0pc"><fo:table table-layout="fixed" width="100%" border-top-width="0.5pt" border-top-style="solid" border-top-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="after" relative-align="baseline"><fo:block><fo:block><fo:page-number/></fo:block></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="end" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-after-blank"><fo:block font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" margin-left="0pc"><fo:table table-layout="fixed" width="100%" border-top-width="0.5pt" border-top-style="solid" border-top-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="after" relative-align="baseline"><fo:block><fo:block><fo:page-number/></fo:block></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="end" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:flow flow-name="xsl-region-body" start-indent="0pt" end-indent="0pt"><fo:block id="section-json-navigation"><fo:block font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats"><fo:block margin-left="0pc"><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" color="#336699" background-color="white" font-size="24pt" font-weight="bold" text-align="left" padding-left="1em" padding-right="1em">Navigation in JSON content</fo:block></fo:block></fo:block></fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
		It is possible to navigate through JSON items using the dynamic function call syntax. The dynamic function call syntax is extended to handle object and array selection as follows:
	</fo:block><fo:list-block id="idm139680687866304" space-before.optimum="0.1pt" space-before.minimum="0.1pt" space-before.maximum="0.1pt" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em" provisional-label-separation="0.2em" provisional-distance-between-starts="1.0em"><fo:list-item id="idm139680685050016" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em">
				An implicit iteration is performed on the left-hand-side sequence. <fo:inline font-weight="bold" font-family="Liberation Mono,monospace">$sequence($params)</fo:inline> is equivalent to:
			</fo:block><fo:block id="idm139680676010640" text-align="start" wrap-option="wrap" hyphenation-character="\" space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="true" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" font-family="Liberation Mono,monospace" background-color="#f5f5f5" color="black" padding-left="6pt" padding-top="6pt" padding-bottom="6pt" margin-left="0pc" font-size="8pt" border-width="1pt" border-style="solid" border-color="#aaaaaa">
        for $item in $sequence return $item($params)
</fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item id="idm139680686933200" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em">
				The semantics of the dynamic function call is then defined on a single item, depending on its type: 
				<fo:list-block id="idm139680677269856" provisional-label-separation="0.2em" provisional-distance-between-starts="1.0em"><fo:list-item id="idm139680673440064" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em">
							If it is a function, the semantics is the same as defined in XQuery 3.0.
						</fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item id="idm139680688573504" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em">
							If it is an object, the dynamic function call is treated as an object lookup if unary, as a key listing if 0-ary. An error <fo:inline font-weight="bold" font-family="Liberation Mono,monospace">jerr:JNTY0018</fo:inline> is raised if there is more than one parameter.
						</fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item id="idm139680686629408" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em">
							If it is an array, the dynamic function call is treated as an array lookup if unary, as an array unboxing if 0-ary. An error <fo:inline font-weight="bold" font-family="Liberation Mono,monospace">jerr:JNTY0018</fo:inline> is raised if there is more than one parameter.
						</fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item id="idm139680680413104" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em">
							If it is an atomic or an XML node, the dynamic function call if unary or 0-ary always returns the empty sequence. An error <fo:inline font-weight="bold" font-family="Liberation Mono,monospace">jerr:JNTY0018</fo:inline> is raised if there is more than one parameter.
						</fo:block></fo:block></fo:list-item-body></fo:list-item></fo:list-block>

			</fo:block></fo:block></fo:list-item-body></fo:list-item></fo:list-block><fo:block id="idm139680687920672"><fo:block><fo:block><fo:block margin-left="0pc" font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" keep-together.within-column="always"><fo:block keep-with-next.within-column="always"><fo:block font-family="Liberation Sans,sans-serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="1.8em" space-before.optimum="2.0em" space-before.maximum="2.2em" space-after.minimum="0.1em" space-after.optimum="0.1em" space-after.maximum="0.1em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Object lookup</fo:marker><fo:block color="#336699" font-size="16pt">5.1. Object lookup</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
			If the dynamic function call is unary and the left-hand-side is an object, the semantics applied is that of object lookup and is as follows.
		</fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
			The unique parameter is cast to a string $s (an error is raised according to the semantics of casting if this fails).
		</fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
			If $s is in <fo:inline font-weight="bold" font-family="Liberation Mono,monospace">jdm:keys($o)</fo:inline> then <fo:inline font-weight="bold" font-family="Liberation Mono,monospace">$o($s)</fo:inline> returns the value of the pair with the name <fo:inline font-weight="bold" font-family="Liberation Mono,monospace">$s</fo:inline>, i.e. <fo:inline font-weight="bold" font-family="Liberation Mono,monospace">jdm:value($o, $s)</fo:inline>. Otherwise (i.e., it has no key matching <fo:inline font-weight="bold" font-family="Liberation Mono,monospace">$s</fo:inline>), an empty sequence is returned.
		</fo:block><fo:block><fo:block id="idm139680686398976" border-left-width="3pt" border-left-style="solid" border-left-color="#aaaaaa" keep-together.within-column="" margin-left="0em" padding-left="0.8em" padding-top="0em" margin-top="1.5em" space-after.minimum="2em" space-after.optimum="2em" space-after.maximum="2em" space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em"><fo:block font-weight="normal" font-size="10pt" space-before.optimum="1em" space-before.minimum="0.5em" space-before.maximum="2em" space-after.optimum="0.1pt" space-after.minimum="0.1pt" space-after.maximum="0.1pt" color="#336699" background-color="white" hyphenate="false" keep-with-next.within-column="always">Example 5.1. Object lookup</fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
				Retrieving a Pair by its name:
			</fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
				Query:
			</fo:block><fo:block id="idm139680678160816" text-align="start" wrap-option="wrap" hyphenation-character="\" space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="true" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" font-family="Liberation Mono,monospace" background-color="#f5f5f5" color="black" padding-left="6pt" padding-top="6pt" padding-bottom="6pt" margin-left="0pc" font-size="8pt" border-width="1pt" border-style="solid" border-color="#aaaaaa">
        let $map := { "eyes" : "blue", "hair" : "fuchsia" }
        return $map("eyes")
</fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
				Result:
			</fo:block><fo:block id="idm139680686128640" text-align="start" wrap-option="wrap" hyphenation-character="\" space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="true" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" font-family="Liberation Mono,monospace" background-color="#f5f5f5" color="black" padding-left="6pt" padding-top="6pt" padding-bottom="6pt" margin-left="0pc" font-size="8pt" border-width="1pt" border-style="solid" border-color="#aaaaaa">
        blue
</fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
				Using Pairs from existing Objects to create a new Object:
			</fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
				Query:
			</fo:block><fo:block id="idm139680677745248" text-align="start" wrap-option="wrap" hyphenation-character="\" space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="true" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" font-family="Liberation Mono,monospace" background-color="#f5f5f5" color="black" padding-left="6pt" padding-top="6pt" padding-bottom="6pt" margin-left="0pc" font-size="8pt" border-width="1pt" border-style="solid" border-color="#aaaaaa">
        let $x := { "eyes" : "blue", "hair" : "fuchsia" }
        let $y := { "eyes" : brown, "hair" : "brown" }
        return { "eyes" : $x("eyes"), "hair" : $y("hair") }
</fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
				Result:
			</fo:block><fo:block id="idm139680677744128" text-align="start" wrap-option="wrap" hyphenation-character="\" space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="true" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" font-family="Liberation Mono,monospace" background-color="#f5f5f5" color="black" padding-left="6pt" padding-top="6pt" padding-bottom="6pt" margin-left="0pc" font-size="8pt" border-width="1pt" border-style="solid" border-color="#aaaaaa">
          { "eyes" : "blue", "hair" : "brown" }
</fo:block></fo:block></fo:block></fo:block><fo:block id="idm139680677743360"><fo:block><fo:block><fo:block margin-left="0pc" font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" keep-together.within-column="always"><fo:block keep-with-next.within-column="always"><fo:block font-family="Liberation Sans,sans-serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="1.8em" space-before.optimum="2.0em" space-before.maximum="2.2em" space-after.minimum="0.1em" space-after.optimum="0.1em" space-after.maximum="0.1em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Object key listing</fo:marker><fo:block color="#336699" font-size="16pt">5.2. Object key listing</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
			If the dynamic function call is 0-ary and the left-hand-side is an object, the semantics applied is that of key listing and is as follows.
		</fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
			<fo:inline font-weight="bold" font-family="Liberation Mono,monospace">jdm:keys($o)</fo:inline> is returned.
		</fo:block><fo:block><fo:block id="idm139680679704528" border-left-width="3pt" border-left-style="solid" border-left-color="#aaaaaa" keep-together.within-column="" margin-left="0em" padding-left="0.8em" padding-top="0em" margin-top="1.5em" space-after.minimum="2em" space-after.optimum="2em" space-after.maximum="2em" space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em"><fo:block font-weight="normal" font-size="10pt" space-before.optimum="1em" space-before.minimum="0.5em" space-before.maximum="2em" space-after.optimum="0.1pt" space-after.minimum="0.1pt" space-after.maximum="0.1pt" color="#336699" background-color="white" hyphenate="false" keep-with-next.within-column="always">Example 5.2. Object key listing</fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
				Retrieving the keys of an object:
			</fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
				Query:
			</fo:block><fo:block id="idm139680679702800" text-align="start" wrap-option="wrap" hyphenation-character="\" space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="true" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" font-family="Liberation Mono,monospace" background-color="#f5f5f5" color="black" padding-left="6pt" padding-top="6pt" padding-bottom="6pt" margin-left="0pc" font-size="8pt" border-width="1pt" border-style="solid" border-color="#aaaaaa">
        let $map := { "eyes" : "blue", "hair" : "fuchsia" }
        return $map()
</fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
				Result:
			</fo:block><fo:block id="idm139680679701872" text-align="start" wrap-option="wrap" hyphenation-character="\" space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="true" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" font-family="Liberation Mono,monospace" background-color="#f5f5f5" color="black" padding-left="6pt" padding-top="6pt" padding-bottom="6pt" margin-left="0pc" font-size="8pt" border-width="1pt" border-style="solid" border-color="#aaaaaa">
        eyes hair
</fo:block></fo:block></fo:block></fo:block><fo:block id="idm139680679701072"><fo:block><fo:block><fo:block margin-left="0pc" font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" keep-together.within-column="always"><fo:block keep-with-next.within-column="always"><fo:block font-family="Liberation Sans,sans-serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="1.8em" space-before.optimum="2.0em" space-before.maximum="2.2em" space-after.minimum="0.1em" space-after.optimum="0.1em" space-after.maximum="0.1em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Array lookup</fo:marker><fo:block color="#336699" font-size="16pt">5.3. Array lookup</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
			If the dynamic function call is unary and the left-hand-side is an array, the semantics applied is that of array lookup and is as follows.
		</fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
			The unique parameter is cast to an integer $i (an error is raised according to the semantics of casting if this fails).
		</fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
			If $i is comprised between 1 and <fo:inline font-weight="bold" font-family="Liberation Mono,monospace">jdm:size($a)</fo:inline>, then <fo:inline font-weight="bold" font-family="Liberation Mono,monospace">$a($i)</fo:inline> returns the value of the pair at position <fo:inline font-weight="bold" font-family="Liberation Mono,monospace">$i</fo:inline>, i.e., <fo:inline font-weight="bold" font-family="Liberation Mono,monospace">jdm:value($a, $i)</fo:inline>.
		</fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
			Otherwise (i.e., if <fo:inline font-weight="bold" font-family="Liberation Mono,monospace">$i</fo:inline> is an invalid position), an empty sequence is returned.
		</fo:block><fo:block><fo:block id="idm139680677489104" border-left-width="3pt" border-left-style="solid" border-left-color="#aaaaaa" keep-together.within-column="" margin-left="0em" padding-left="0.8em" padding-top="0em" margin-top="1.5em" space-after.minimum="2em" space-after.optimum="2em" space-after.maximum="2em" space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em"><fo:block font-weight="normal" font-size="10pt" space-before.optimum="1em" space-before.minimum="0.5em" space-before.maximum="2em" space-after.optimum="0.1pt" space-after.minimum="0.1pt" space-after.maximum="0.1pt" color="#336699" background-color="white" hyphenate="false" keep-with-next.within-column="always">Example 5.3. Array lookup</fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
				Query:
			</fo:block><fo:block id="idm139680677487824" text-align="start" wrap-option="wrap" hyphenation-character="\" space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="true" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" font-family="Liberation Mono,monospace" background-color="#f5f5f5" color="black" padding-left="6pt" padding-top="6pt" padding-bottom="6pt" margin-left="0pc" font-size="8pt" border-width="1pt" border-style="solid" border-color="#aaaaaa">
        let $wd := ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"]
        return $wd(1)
</fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
				Result:
			</fo:block><fo:block id="idm139680677486752" text-align="start" wrap-option="wrap" hyphenation-character="\" space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="true" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" font-family="Liberation Mono,monospace" background-color="#f5f5f5" color="black" padding-left="6pt" padding-top="6pt" padding-bottom="6pt" margin-left="0pc" font-size="8pt" border-width="1pt" border-style="solid" border-color="#aaaaaa">
        Sunday
</fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
				For the following queries, assume the variable <fo:inline font-weight="bold" font-family="Liberation Mono,monospace">$f</fo:inline> is bound to the following two dimensional array.
			</fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
				Data:
			</fo:block><fo:block id="idm139680677484896" text-align="start" wrap-option="wrap" hyphenation-character="\" space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="true" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" font-family="Liberation Mono,monospace" background-color="#f5f5f5" color="black" padding-left="6pt" padding-top="6pt" padding-bottom="6pt" margin-left="0pc" font-size="8pt" border-width="1pt" border-style="solid" border-color="#aaaaaa">
        [
          [ "mercury", "venus", "earth", "mars" ],
          [ "monday", "tuesday", "wednesday", "thursday" ]
        ]
</fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
				Query:
			</fo:block><fo:block id="idm139680677483824" text-align="start" wrap-option="wrap" hyphenation-character="\" space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="true" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" font-family="Liberation Mono,monospace" background-color="#f5f5f5" color="black" padding-left="6pt" padding-top="6pt" padding-bottom="6pt" margin-left="0pc" font-size="8pt" border-width="1pt" border-style="solid" border-color="#aaaaaa">
        $f(1)
</fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
				Result:
			</fo:block><fo:block id="idm139680679132800" text-align="start" wrap-option="wrap" hyphenation-character="\" space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="true" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" font-family="Liberation Mono,monospace" background-color="#f5f5f5" color="black" padding-left="6pt" padding-top="6pt" padding-bottom="6pt" margin-left="0pc" font-size="8pt" border-width="1pt" border-style="solid" border-color="#aaaaaa">
        [ "mercury", "venus", "earth", "mars" ]
</fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
				Query:
			</fo:block><fo:block id="idm139680679131872" text-align="start" wrap-option="wrap" hyphenation-character="\" space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="true" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" font-family="Liberation Mono,monospace" background-color="#f5f5f5" color="black" padding-left="6pt" padding-top="6pt" padding-bottom="6pt" margin-left="0pc" font-size="8pt" border-width="1pt" border-style="solid" border-color="#aaaaaa">
        $f(2)(2)
</fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
				Result:
			</fo:block><fo:block id="idm139680679130912" text-align="start" wrap-option="wrap" hyphenation-character="\" space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="true" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" font-family="Liberation Mono,monospace" background-color="#f5f5f5" color="black" padding-left="6pt" padding-top="6pt" padding-bottom="6pt" margin-left="0pc" font-size="8pt" border-width="1pt" border-style="solid" border-color="#aaaaaa">
        tuesday
</fo:block></fo:block></fo:block></fo:block><fo:block id="idm139680679130112"><fo:block><fo:block><fo:block margin-left="0pc" font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" keep-together.within-column="always"><fo:block keep-with-next.within-column="always"><fo:block font-family="Liberation Sans,sans-serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="1.8em" space-before.optimum="2.0em" space-before.maximum="2.2em" space-after.minimum="0.1em" space-after.optimum="0.1em" space-after.maximum="0.1em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Array unboxing</fo:marker><fo:block color="#336699" font-size="16pt">5.4. Array unboxing</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
			If the dynamic function call is 0-ary and the left-hand-side is an array, the semantics applied is that of array unboxing and is as follows.
		</fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
			<fo:inline font-weight="bold" font-family="Liberation Mono,monospace">for $i in 1 to jdm:size($a) return $a($i)</fo:inline> is returned.
		</fo:block><fo:block><fo:block id="idm139680679127776" border-left-width="3pt" border-left-style="solid" border-left-color="#aaaaaa" keep-together.within-column="" margin-left="0em" padding-left="0.8em" padding-top="0em" margin-top="1.5em" space-after.minimum="2em" space-after.optimum="2em" space-after.maximum="2em" space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em"><fo:block font-weight="normal" font-size="10pt" space-before.optimum="1em" space-before.minimum="0.5em" space-before.maximum="2em" space-after.optimum="0.1pt" space-after.minimum="0.1pt" space-after.maximum="0.1pt" color="#336699" background-color="white" hyphenate="false" keep-with-next.within-column="always">Example 5.4. Array unboxing</fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
				Query:
			</fo:block><fo:block id="idm139680679126496" text-align="start" wrap-option="wrap" hyphenation-character="\" space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="true" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" font-family="Liberation Mono,monospace" background-color="#f5f5f5" color="black" padding-left="6pt" padding-top="6pt" padding-bottom="6pt" margin-left="0pc" font-size="8pt" border-width="1pt" border-style="solid" border-color="#aaaaaa">
        let $wd := ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"]
        return $wd()
</fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
				Result:
			</fo:block><fo:block id="idm139680688094400" text-align="start" wrap-option="wrap" hyphenation-character="\" space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="true" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" font-family="Liberation Mono,monospace" background-color="#f5f5f5" color="black" padding-left="6pt" padding-top="6pt" padding-bottom="6pt" margin-left="0pc" font-size="8pt" border-width="1pt" border-style="solid" border-color="#aaaaaa">
        Sunday Mondy Tuesday Wednesday Thursday Friday Saturday
</fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
				For the following queries, assume the variable <fo:inline font-weight="bold" font-family="Liberation Mono,monospace">$f</fo:inline> is bound to the following two dimensional array.
			</fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
				Data:
			</fo:block><fo:block id="idm139680688092576" text-align="start" wrap-option="wrap" hyphenation-character="\" space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="true" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" font-family="Liberation Mono,monospace" background-color="#f5f5f5" color="black" padding-left="6pt" padding-top="6pt" padding-bottom="6pt" margin-left="0pc" font-size="8pt" border-width="1pt" border-style="solid" border-color="#aaaaaa">
        [
          [ "mercury", "venus", "earth", "mars" ],
          [ "monday", "tuesday", "wednesday", "thursday" ]
        ]
</fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
				Query:
			</fo:block><fo:block id="idm139680688091504" text-align="start" wrap-option="wrap" hyphenation-character="\" space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="true" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" font-family="Liberation Mono,monospace" background-color="#f5f5f5" color="black" padding-left="6pt" padding-top="6pt" padding-bottom="6pt" margin-left="0pc" font-size="8pt" border-width="1pt" border-style="solid" border-color="#aaaaaa">
        $f()
</fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
				Result:
			</fo:block><fo:block id="idm139680688090544" text-align="start" wrap-option="wrap" hyphenation-character="\" space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="true" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" font-family="Liberation Mono,monospace" background-color="#f5f5f5" color="black" padding-left="6pt" padding-top="6pt" padding-bottom="6pt" margin-left="0pc" font-size="8pt" border-width="1pt" border-style="solid" border-color="#aaaaaa">
        [ "mercury", "venus", "earth", "mars" ] [ "monday", "tuesday", "wednesday", "thursday" ]
</fo:block></fo:block></fo:block></fo:block></fo:flow></fo:page-sequence><fo:page-sequence xmlns:axf="http://www.antennahouse.com/names/XSL/Extensions" hyphenate="true" master-reference="body" language="en" format="1" initial-page-number="auto-odd" force-page-count="end-on-even" hyphenation-character="-" hyphenation-push-character-count="2" hyphenation-remain-character-count="2"><fo:static-content flow-name="xsl-region-before-first"><fo:block wrap-option="no-wrap" font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" margin-left="0pc"><fo:table table-layout="fixed" width="100%" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(0)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="before" relative-align="baseline"><fo:block/></fo:table-cell><fo:table-cell text-align="center" display-align="before" relative-align="baseline"><fo:block><fo:inline keep-together.within-line="always" font-weight="bold">Chapter 6.</fo:inline></fo:block></fo:table-cell><fo:table-cell text-align="right" display-align="before" relative-align="baseline"><fo:block/></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-before-odd"><fo:block wrap-option="no-wrap" font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" margin-left="0pc"><fo:table table-layout="fixed" width="100%" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(0)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="before" relative-align="baseline"><fo:block/></fo:table-cell><fo:table-cell text-align="center" display-align="before" relative-align="baseline"><fo:block/></fo:table-cell><fo:table-cell text-align="right" display-align="before" relative-align="baseline"><fo:block><fo:inline keep-together.within-line="always"><fo:retrieve-marker retrieve-class-name="section.head.marker" retrieve-position="first-including-carryover" retrieve-boundary="page-sequence"/></fo:inline></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-before-even"><fo:block wrap-option="no-wrap" font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" margin-left="0pc"><fo:table table-layout="fixed" width="100%" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(0)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="before" relative-align="baseline"><fo:block><fo:inline keep-together.within-line="always" font-weight="bold">Chapter 6. Builtin functions and operators</fo:inline></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="before" relative-align="baseline"><fo:block/></fo:table-cell><fo:table-cell text-align="right" display-align="before" relative-align="baseline"><fo:block/></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-before-blank"><fo:block wrap-option="no-wrap" font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" margin-left="0pc"><fo:table table-layout="fixed" width="100%" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(0)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="before" relative-align="baseline"><fo:block/></fo:table-cell><fo:table-cell text-align="center" display-align="before" relative-align="baseline"><fo:block/></fo:table-cell><fo:table-cell text-align="right" display-align="before" relative-align="baseline"><fo:block/></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" flow-name="xsl-footnote-separator"><fo:block margin-top="2em"><fo:leader color="black" leader-pattern="rule" leader-length="1in"/></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-inner-first"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-inner-odd"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-inner-even"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-inner-blank"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-outer-first"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-outer-odd"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-outer-even"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-outer-blank"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-after-first"><fo:block font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" margin-left="0pc"><fo:table table-layout="fixed" width="100%" border-top-width="0.5pt" border-top-style="solid" border-top-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="end" display-align="after" relative-align="baseline"><fo:block><fo:block><fo:page-number/></fo:block></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-after-odd"><fo:block font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" margin-left="0pc"><fo:table table-layout="fixed" width="100%" border-top-width="0.5pt" border-top-style="solid" border-top-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="end" display-align="after" relative-align="baseline"><fo:block><fo:block><fo:page-number/></fo:block></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-after-even"><fo:block font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" margin-left="0pc"><fo:table table-layout="fixed" width="100%" border-top-width="0.5pt" border-top-style="solid" border-top-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="after" relative-align="baseline"><fo:block><fo:block><fo:page-number/></fo:block></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="end" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-after-blank"><fo:block font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" margin-left="0pc"><fo:table table-layout="fixed" width="100%" border-top-width="0.5pt" border-top-style="solid" border-top-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="after" relative-align="baseline"><fo:block><fo:block><fo:page-number/></fo:block></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="end" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:flow flow-name="xsl-region-body" start-indent="0pt" end-indent="0pt"><fo:block id="section-builtin-functions"><fo:block font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats"><fo:block margin-left="0pc"><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" color="#336699" background-color="white" font-size="24pt" font-weight="bold" text-align="left" padding-left="1em" padding-right="1em">Builtin functions and operators</fo:block></fo:block></fo:block></fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
		JSONiq defines a couple of basic builtin functions. Two of them define the atomized value and the effective boolean value of JSON items, and the others are for JSON navigation.
	</fo:block><fo:block id="idm139680689826224"><fo:block><fo:block><fo:block margin-left="0pc" font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" keep-together.within-column="always"><fo:block keep-with-next.within-column="always"><fo:block font-family="Liberation Sans,sans-serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="1.8em" space-before.optimum="2.0em" space-before.maximum="2.2em" space-after.minimum="0.1em" space-after.optimum="0.1em" space-after.maximum="0.1em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">fn:boolean (aka Effective Boolean Value)</fo:marker><fo:block color="#336699" font-size="16pt">6.1. fn:boolean (aka Effective Boolean Value)</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
			In XQuery, sequences can be converted to a boolean value. The effective boolean value is defined by invoking <fo:inline font-weight="bold" font-family="Liberation Mono,monospace">fn:boolean</fo:inline>.
		</fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
			<fo:inline font-weight="bold" font-family="Liberation Mono,monospace">fn:boolean($arg as item()*) as xs:boolean</fo:inline>
		</fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
			The definition of <fo:inline font-weight="bold" font-family="Liberation Mono,monospace">fn:boolean($arg)</fo:inline> is changed as follows:
		</fo:block><fo:list-block id="idm139680686610672" space-before.optimum="0.1pt" space-before.minimum="0.1pt" space-before.maximum="0.1pt" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em" provisional-label-separation="0.2em" provisional-distance-between-starts="1.0em"><fo:list-item id="idm139680677868352" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em">
					If $arg is a sequence whose first item is an object or an array, <fo:inline font-weight="bold" font-family="Liberation Mono,monospace">fn:boolean</fo:inline> returns true.
				</fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item id="idm139680684866832" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em">
					If $arg is a singleton value of type <fo:inline font-weight="bold" font-family="Liberation Mono,monospace">js:null</fo:inline>, <fo:inline font-weight="bold" font-family="Liberation Mono,monospace">fn:boolean</fo:inline> returns false.
				</fo:block></fo:block></fo:list-item-body></fo:list-item></fo:list-block><fo:block><fo:block id="idm139680675908064" border-left-width="3pt" border-left-style="solid" border-left-color="#aaaaaa" keep-together.within-column="" margin-left="0em" padding-left="0.8em" padding-top="0em" margin-top="1.5em" space-after.minimum="2em" space-after.optimum="2em" space-after.maximum="2em" space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em"><fo:block font-weight="normal" font-size="10pt" space-before.optimum="1em" space-before.minimum="0.5em" space-before.maximum="2em" space-after.optimum="0.1pt" space-after.minimum="0.1pt" space-after.maximum="0.1pt" color="#336699" background-color="white" hyphenate="false" keep-with-next.within-column="always">Example 6.1. Effective Boolean Value of JSONiq items</fo:block><fo:block id="idm139680678620272" text-align="start" wrap-option="wrap" hyphenation-character="\" space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="true" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" font-family="Liberation Mono,monospace" background-color="#f5f5f5" color="black" padding-left="6pt" padding-top="6pt" padding-bottom="6pt" margin-left="0pc" font-size="8pt" border-width="1pt" border-style="solid" border-color="#aaaaaa">
          Examples
          EBV( jn:null() )         	    false
          EBV( { } )                    true
          EBV ( { "foo": false } )   	  true
          EBV ( { "foo": 3, "bar":4 } )	true
          EBV( { "foo": 3 } )	          true
          EBV ( [1] )	                  true
          EBV ( ( [1], jn:null() ) )    true
</fo:block></fo:block></fo:block></fo:block><fo:block id="idm139680680392288"><fo:block><fo:block><fo:block margin-left="0pc" font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" keep-together.within-column="always"><fo:block keep-with-next.within-column="always"><fo:block font-family="Liberation Sans,sans-serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="1.8em" space-before.optimum="2.0em" space-before.maximum="2.2em" space-after.minimum="0.1em" space-after.optimum="0.1em" space-after.maximum="0.1em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">fn:collection</fo:marker><fo:block color="#336699" font-size="16pt">6.2. fn:collection</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
			This is a standard function in XQuery. JSONiq extends the function to also allow collections that contains JSON items, in an implementation-dependent order
		</fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
			<fo:inline font-weight="bold" font-family="Liberation Mono,monospace">fn:collection($uri as xs:string?) as structured-item()*</fo:inline>
		</fo:block></fo:block><fo:block id="idm139680676044544"><fo:block><fo:block><fo:block margin-left="0pc" font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" keep-together.within-column="always"><fo:block keep-with-next.within-column="always"><fo:block font-family="Liberation Sans,sans-serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="1.8em" space-before.optimum="2.0em" space-before.maximum="2.2em" space-after.minimum="0.1em" space-after.optimum="0.1em" space-after.maximum="0.1em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">fn:data (aka Atomization)</fo:marker><fo:block color="#336699" font-size="16pt">6.3. fn:data (aka Atomization)</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
			In XQuery, sequences can be atomized. Atomization is defined by invoking fn:data.
		</fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
			<fo:inline font-weight="bold" font-family="Liberation Mono,monospace">fn:data($arg as item()*) as xs:anyAtomicType*</fo:inline>
		</fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
			The error conditions of <fo:inline font-weight="bold" font-family="Liberation Mono,monospace">fn:data($arg)</fo:inline> are extended as follows. An error is raised (<fo:inline font-weight="bold" font-family="Liberation Mono,monospace">jerr:JNTY0004</fo:inline>) if an item in the sequence is an object or an array.
		</fo:block><fo:block><fo:block id="idm139680688838912" border-left-width="3pt" border-left-style="solid" border-left-color="#aaaaaa" keep-together.within-column="" margin-left="0em" padding-left="0.8em" padding-top="0em" margin-top="1.5em" space-after.minimum="2em" space-after.optimum="2em" space-after.maximum="2em" space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em"><fo:block font-weight="normal" font-size="10pt" space-before.optimum="1em" space-before.minimum="0.5em" space-before.maximum="2em" space-after.optimum="0.1pt" space-after.minimum="0.1pt" space-after.maximum="0.1pt" color="#336699" background-color="white" hyphenate="false" keep-with-next.within-column="always">Example 6.2. Atomization of JSONiq items</fo:block><fo:block id="idm139680688545456" text-align="start" wrap-option="wrap" hyphenation-character="\" space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="true" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" font-family="Liberation Mono,monospace" background-color="#f5f5f5" color="black" padding-left="6pt" padding-top="6pt" padding-bottom="6pt" margin-left="0pc" font-size="8pt" border-width="1pt" border-style="solid" border-color="#aaaaaa">
          fn:data( {"foo" : 3} )		          jerr:JNTY0004
          fn:data( [1] )			                jerr:JNTY0004
          fn:data( {"foo" : 3, "bar" : 4 } )	jerr:JNTY0004
          fn:data( { } )			                jerr:JNTY0004
</fo:block></fo:block></fo:block></fo:block><fo:block id="idm139680677709504"><fo:block><fo:block><fo:block margin-left="0pc" font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" keep-together.within-column="always"><fo:block keep-with-next.within-column="always"><fo:block font-family="Liberation Sans,sans-serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="1.8em" space-before.optimum="2.0em" space-before.maximum="2.2em" space-after.minimum="0.1em" space-after.optimum="0.1em" space-after.maximum="0.1em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">fn:string (aka string value)</fo:marker><fo:block color="#336699" font-size="16pt">6.4. fn:string (aka string value)</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
			In XQuery, items can have string values, which can be obtained by invoking fn:string. Objects and arrays do not have a string value.
		</fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
			<fo:inline font-weight="bold" font-family="Liberation Mono,monospace">fn:string($arg as item()?) as xs:string</fo:inline>
		</fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
			The error conditions of <fo:inline font-weight="bold" font-family="Liberation Mono,monospace">fn:string($arg)</fo:inline> are extended as follows. An error is raised (<fo:inline font-weight="bold" font-family="Liberation Mono,monospace">jerr:JNTY0024</fo:inline>) if the item is an object or an array.
		</fo:block><fo:block><fo:block id="idm139680677705856" border-left-width="3pt" border-left-style="solid" border-left-color="#aaaaaa" keep-together.within-column="" margin-left="0em" padding-left="0.8em" padding-top="0em" margin-top="1.5em" space-after.minimum="2em" space-after.optimum="2em" space-after.maximum="2em" space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em"><fo:block font-weight="normal" font-size="10pt" space-before.optimum="1em" space-before.minimum="0.5em" space-before.maximum="2em" space-after.optimum="0.1pt" space-after.minimum="0.1pt" space-after.maximum="0.1pt" color="#336699" background-color="white" hyphenate="false" keep-with-next.within-column="always">Example 6.3. Atomization of JSONiq items</fo:block><fo:block id="idm139680687910880" text-align="start" wrap-option="wrap" hyphenation-character="\" space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="true" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" font-family="Liberation Mono,monospace" background-color="#f5f5f5" color="black" padding-left="6pt" padding-top="6pt" padding-bottom="6pt" margin-left="0pc" font-size="8pt" border-width="1pt" border-style="solid" border-color="#aaaaaa">
          fn:string( {"foo" : 3} )		          jerr:JNTY0024
          fn:string( [1] )			                jerr:JNTY0024
          fn:string( {"foo" : 3, "bar" : 4 } )	jerr:JNTY0024
          fn:string( { } )			                jerr:JNTY0024
</fo:block></fo:block></fo:block></fo:block><fo:block id="idm139680687909856"><fo:block><fo:block><fo:block margin-left="0pc" font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" keep-together.within-column="always"><fo:block keep-with-next.within-column="always"><fo:block font-family="Liberation Sans,sans-serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="1.8em" space-before.optimum="2.0em" space-before.maximum="2.2em" space-after.minimum="0.1em" space-after.optimum="0.1em" space-after.maximum="0.1em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">fn:trace</fo:marker><fo:block color="#336699" font-size="16pt">6.5. fn:trace</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
			The default serialization method is changed to JSON-XML-hybrid.
		</fo:block></fo:block><fo:block id="idm139680687908448"><fo:block><fo:block><fo:block margin-left="0pc" font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" keep-together.within-column="always"><fo:block keep-with-next.within-column="always"><fo:block font-family="Liberation Sans,sans-serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="1.8em" space-before.optimum="2.0em" space-before.maximum="2.2em" space-after.minimum="0.1em" space-after.optimum="0.1em" space-after.maximum="0.1em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">jn:decode-from-roundtrip</fo:marker><fo:block color="#336699" font-size="16pt">6.6. jn:decode-from-roundtrip</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
			This function decodes non-JSON types previously encoded with <fo:inline font-weight="bold" font-family="Liberation Mono,monospace">jn:encode-for-roundtrip.</fo:inline>
		</fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
			<fo:inline font-weight="bold" font-family="Liberation Mono,monospace">jn:decode-from-roundtrip($items as item()*) as item()*</fo:inline>
		</fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
			<fo:inline font-weight="bold" font-family="Liberation Mono,monospace">jn:decode-from-roundtrip($items as item()*, $options as object()) as item()*</fo:inline>
		</fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
			There is one optional parameter than can be supplied using the $options object.
		</fo:block><fo:list-block id="idm139680679666752" space-before.optimum="0.1pt" space-before.minimum="0.1pt" space-before.maximum="0.1pt" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em" provisional-label-separation="0.2em" provisional-distance-between-starts="1.0em"><fo:list-item id="idm139680679666432" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em">
					<fo:inline font-style="italic">prefix</fo:inline> (string): The prefix of the strings used to for the encoding (default: "Q{http://jsoniq.org/roundtrip}").
				</fo:block></fo:block></fo:list-item-body></fo:list-item></fo:list-block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
			The above optional parameter is refered to as $prefix for convenience.
		</fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
			Error <fo:inline font-weight="bold" font-family="Liberation Mono,monospace">err:XPTY0004</fo:inline> is raised in case one this parameter is of incorrect type.
		</fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
			Non-JSON values are encoded to a special object containing two required fields "[$prefix]type" (xs:string) and "[$prefix]value" (xs:string), and two optional fields "[$prefix]prefix" (xs:string) and "[$prefix]encoding-level (xs:integer, strictly positive). An object that has the two required fields, and that has no other field that these four fields, and whose values match the types, is called an Encoded Object.
		</fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
			This function maps each item of the input sequence to a new item in the output sequence, preserving order.
		</fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
			For convenience, the map is defined recursively from item() to item().
		</fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
			An array is mapped to an array the members of which are mapped resursively.
		</fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
			Atomic values and XML nodes are mapped to themselves.
		</fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
			An object is mapped depending on whether it is an Encoded Object (according to the above definition).
		</fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
			An Encoded Object whose "[$prefix]type" field is "document-node()", "element()", "text()", "comment()" or "processing-instruction()" is mapped to the XML node optained by parsing the field "[$prefix]value". An error <fo:inline font-weight="bold" font-family="Liberation Mono,monospace">jerr:JNTY0023</fo:inline> is raised if the obtained node does not match the specified type.
		</fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
			An Encoded Object whose "[$prefix]type" field is another string is mapped to an atomic item with the type specified by the value of the field "[$prefix]type" (read as an EQName, with xs: automatically recognized as the XSD namespace).
		</fo:block><fo:list-block id="idm139680678930144" space-before.optimum="0.1pt" space-before.minimum="0.1pt" space-before.maximum="0.1pt" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em" provisional-label-separation="0.2em" provisional-distance-between-starts="1.0em"><fo:list-item id="idm139680678929824" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em">
					If this type is not xs:QName, xs:NOTATION or a subtype thereof, the atomic value is by casting the string in the field "[$prefix]value" to this type. An error <fo:inline font-weight="bold" font-family="Liberation Mono,monospace">jerr:JNTY0023</fo:inline> if this case does not succeed.
				</fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item id="idm139680678928272" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em">
					If this type is xs:QName, xs:NOTATION or a subtype thereof, then the atomic value to be built is a qualified name. The namespace and local name are built from the value (an EQName) of the field "[$prefix]value", and the prefix is built from the field "[$prefix]prefix" (empty if absent). An error <fo:inline font-weight="bold" font-family="Liberation Mono,monospace">jerr:JNTY0023</fo:inline> if this does not succeed (value is not an EQName, prefix is not an NCName).
				</fo:block></fo:block></fo:list-item-body></fo:list-item></fo:list-block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
			An object that is not an Encoded Object is mapped to an object with the same keys, and the associated values are mapped recursively.
		</fo:block><fo:block><fo:block id="idm139680678925808" border-left-width="3pt" border-left-style="solid" border-left-color="#aaaaaa" keep-together.within-column="" margin-left="0em" padding-left="0.8em" padding-top="0em" margin-top="1.5em" space-after.minimum="2em" space-after.optimum="2em" space-after.maximum="2em" space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em"><fo:block font-weight="normal" font-size="10pt" space-before.optimum="1em" space-before.minimum="0.5em" space-before.maximum="2em" space-after.optimum="0.1pt" space-after.minimum="0.1pt" space-after.maximum="0.1pt" color="#336699" background-color="white" hyphenate="false" keep-with-next.within-column="always">Example 6.4. Encoding non-native JSON for roundtripping.</fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
				Query:
			</fo:block><fo:block id="idm139680678924560" text-align="start" wrap-option="wrap" hyphenation-character="\" space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="true" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" font-family="Liberation Mono,monospace" background-color="#f5f5f5" color="black" padding-left="6pt" padding-top="6pt" padding-bottom="6pt" margin-left="0pc" font-size="8pt" border-width="1pt" border-style="solid" border-color="#aaaaaa">
        jn:decode-from-roundtrip(
          {
            "nan" : {
              "Q{http://jsoniq.org/roundtrip}type" : "xs:double",
              "Q{http://jsoniq.org/roundtrip}value" : "NaN"
            },
            "inf" : {
              "Q{http://jsoniq.org/roundtrip}type" : "xs:double",
              "Q{http://jsoniq.org/roundtrip}value" : "INF"
            }
            "date" : {
              "Q{http://jsoniq.org/roundtrip}type" : "xs:date",
              "Q{http://jsoniq.org/roundtrip}value" : "1066-10-14"
             }
            "hat" : {
              "Q{http://jsoniq.org/roundtrip}type" : "Q{http://www.example.com/hat-shop}hatSize",
              "Q{http://jsoniq.org/roundtrip}value" : "M"
            }
          }
        )
</fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
				Result:
			</fo:block><fo:block id="idm139680678922864" text-align="start" wrap-option="wrap" hyphenation-character="\" space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="true" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" font-family="Liberation Mono,monospace" background-color="#f5f5f5" color="black" padding-left="6pt" padding-top="6pt" padding-bottom="6pt" margin-left="0pc" font-size="8pt" border-width="1pt" border-style="solid" border-color="#aaaaaa">
        {
          "nan" : xs:double("NaN"),
          "inf" : xs:double("INF"),
          "date" : xs:date("1066-10-14"),
          "user" : hat:hatSize("M")
        }
</fo:block></fo:block></fo:block></fo:block><fo:block id="idm139680688257984"><fo:block><fo:block><fo:block margin-left="0pc" font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" keep-together.within-column="always"><fo:block keep-with-next.within-column="always"><fo:block font-family="Liberation Sans,sans-serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="1.8em" space-before.optimum="2.0em" space-before.maximum="2.2em" space-after.minimum="0.1em" space-after.optimum="0.1em" space-after.maximum="0.1em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">jn:encode-for-roundtrip</fo:marker><fo:block color="#336699" font-size="16pt">6.7. jn:encode-for-roundtrip</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
			This function recursively encodes non-JSON types in such a way that they can be serialized as JSON while keeping roundtrip capability.
		</fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
			The following computations are made with respect to the static context of the caller, so that the schema type definitions are available.
		</fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
			<fo:inline font-weight="bold" font-family="Liberation Mono,monospace">jn:encode-for-roundtrip($items as item()*) as item()*</fo:inline>
		</fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
			<fo:inline font-weight="bold" font-family="Liberation Mono,monospace">jn:encode-for-roundtrip($items as item()*, $options as object()?) as item()*</fo:inline>
		</fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
			There are two optional parameters than can be supplied using the $options object.
		</fo:block><fo:list-block id="idm139680688253664" space-before.optimum="0.1pt" space-before.minimum="0.1pt" space-before.maximum="0.1pt" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em" provisional-label-separation="0.2em" provisional-distance-between-starts="1.0em"><fo:list-item id="idm139680688253344" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em">
					<fo:inline font-style="italic">prefix</fo:inline> (string): The prefix of the strings used to for the encoding (default: "Q{http://jsoniq.org/roundtrip}").
				</fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item id="idm139680688251808" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em">
					<fo:inline font-style="italic">serialization-parameters</fo:inline> (element node): The serialization parameters for any nested XML (as specified in the XQuery 3.0 specifications). By default:
				</fo:block><fo:block id="idm139680688250448" text-align="start" wrap-option="wrap" hyphenation-character="\" space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="true" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" font-family="Liberation Mono,monospace" background-color="#f5f5f5" color="black" padding-left="6pt" padding-top="6pt" padding-bottom="6pt" margin-left="0pc" font-size="8pt" border-width="1pt" border-style="solid" border-color="#aaaaaa">
        
            &lt;serialization-parameters xmlns="http://www.w3.org/2010/xslt-xquery-serialization"&gt;
              &lt;omit-xml-declaration value="yes" /&gt;
            &lt;/serialization-parameters&gt;

</fo:block></fo:block></fo:list-item-body></fo:list-item></fo:list-block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
			The above optional parameters are refered to as $prefix and $serialization-parameters for convenience.
		</fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
			Error <fo:inline font-weight="bold" font-family="Liberation Mono,monospace">err:XPTY0004</fo:inline> is raised in case one of the parameters is of incorrect type.
		</fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
			This function maps each item of the input sequence to a new item in the output sequence, preserving order.
		</fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
			For convenience, the map is defined recursively from item() to item().
		</fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
			Non-JSON values are encoded to a special object containing two required fields "[$prefix]type" (xs:string) and "[$prefix]value" (xs:string), and two optional fields "[$prefix]prefix" (xs:string) and "[$prefix]encoding-level (xs:integer, strictly positive). An object that has the two required fields, and that has no other field that these four fields, and whose values match the types, is called an Encoded Object.
		</fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
			An object that is not an Encoded Object is mapped to an object with the same keys, and the associated values are obtained by a recursive call on the original values.
		</fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
			An object that is an Encoded Object is left unchanged, except for the field "[$prefix]encoding-level" that is increased by 1 if it exists, or set to 2 if it is absent. This ensures round-trippability of already encoded data.
		</fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
			An array is mapped to an array. Its members are obtained with a recursive call on the members of the original array.
		</fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
			JSON native atomic values (of type exactly xs:double (except infinites and NaN), xs:decimal (except integers), xs:integer, xs:string, xs:boolean or js:null) are mapped to themselves.
		</fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
			XML nodes are mapped to an Encoded Object with two pairs: 
			<fo:list-block id="idm139680687086080" space-before.optimum="0.1pt" space-before.minimum="0.1pt" space-before.maximum="0.1pt" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em" provisional-label-separation="0.2em" provisional-distance-between-starts="1.0em"><fo:list-item id="idm139680687085760" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em">
						A pair named "[$prefix]type" and with the value "document-node()", "element()", "text()", "comment()" or "processing-instruction()", depending on the node kind. If it is an attribute or namespace node, <fo:inline font-weight="bold" font-family="Liberation Mono,monospace">err:SENR0001</fo:inline> will be raised by the step below.
					</fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item id="idm139680687084160" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em">
						A pair named "[$prefix]value" and whose value is a serialization of the XML node according to the XML output method and with the serialization parameters specified by $serialization-parameters.
					</fo:block></fo:block></fo:list-item-body></fo:list-item></fo:list-block>

		</fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
			Non-native atomic values that are not qualified names (i.e., neither xs:QName nor xs:NOTATION nor subtypes) are mapped to an Encoded Object with two fields: 
			<fo:list-block id="idm139680687082224" space-before.optimum="0.1pt" space-before.minimum="0.1pt" space-before.maximum="0.1pt" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em" provisional-label-separation="0.2em" provisional-distance-between-starts="1.0em"><fo:list-item id="idm139680687081904" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em">
						A field "[$prefix]type" containing the EQName of the atomic type (The XSD namespace may be simply output with the xs: prefix).
					</fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item id="idm139680687080816" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em">
						A field "[$prefix]value" containing the lexical representation of the atomic value.
					</fo:block></fo:block></fo:list-item-body></fo:list-item></fo:list-block>

		</fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
			Non-native atomic values that are qualified names (i.e., xs:QName or xs:NOTATION or subtypes) are mapped to an object with two or three pairs: 
			<fo:list-block id="idm139680687079120" space-before.optimum="0.1pt" space-before.minimum="0.1pt" space-before.maximum="0.1pt" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em" provisional-label-separation="0.2em" provisional-distance-between-starts="1.0em"><fo:list-item id="idm139680687078800" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em">
						A field "[$prefix]type" containing the EQName of the atomic type (The XSD namespace may be simply output with the xs: prefix).
					</fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item id="idm139680687077712" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em">
						A field "[$prefix]value" containing the EQName corresponding to the qualified name (which includes namespace and local name).
					</fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item id="idm139680687076624" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em">
						A field "[$prefix]prefix" containing the prefix of the qualified name (only if there is such a prefix).
					</fo:block></fo:block></fo:list-item-body></fo:list-item></fo:list-block>

		</fo:block><fo:block><fo:block id="idm139680687075248" border-left-width="3pt" border-left-style="solid" border-left-color="#aaaaaa" keep-together.within-column="" margin-left="0em" padding-left="0.8em" padding-top="0em" margin-top="1.5em" space-after.minimum="2em" space-after.optimum="2em" space-after.maximum="2em" space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em"><fo:block font-weight="normal" font-size="10pt" space-before.optimum="1em" space-before.minimum="0.5em" space-before.maximum="2em" space-after.optimum="0.1pt" space-after.minimum="0.1pt" space-after.maximum="0.1pt" color="#336699" background-color="white" hyphenate="false" keep-with-next.within-column="always">Example 6.5. Mapping non-JSON values</fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
				Query:
			</fo:block><fo:block id="idm139680689032800" text-align="start" wrap-option="wrap" hyphenation-character="\" space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="true" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" font-family="Liberation Mono,monospace" background-color="#f5f5f5" color="black" padding-left="6pt" padding-top="6pt" padding-bottom="6pt" margin-left="0pc" font-size="8pt" border-width="1pt" border-style="solid" border-color="#aaaaaa">
        {
          "serialized XML" :
            jn:encode-for-roundtrip(&lt;para&gt;
                 A pair named "[$prefix]value" (where [$prefix] is replaced with the
                 value of the parameter $prefix) and whose value is a serialization
                 of the XML node according to the XML output method and with the
                 serialization parameters specified by $param.
                 &lt;/para&gt;)
        }
        

</fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
				Result:
			</fo:block><fo:block id="idm139680689031248" text-align="start" wrap-option="wrap" hyphenation-character="\" space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="true" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" font-family="Liberation Mono,monospace" background-color="#f5f5f5" color="black" padding-left="6pt" padding-top="6pt" padding-bottom="6pt" margin-left="0pc" font-size="8pt" border-width="1pt" border-style="solid" border-color="#aaaaaa">
        {
          "serialized XML" : {
              "Q{http://jsoniq.org/roundtrip}type" : "node()",
              "Q{http://jsoniq.org/roundtrip}value" : "&lt;para&gt;
                 A pair named "[$prefix]value" (where [$prefix] is replaced with the
                 value of the parameter $prefix) and whose value is a serialization
                 of the XML node according to the XML output method and with the
                 serialization parameters specified by $param.
                 &lt;/para&gt;"
          }
        }

</fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
				Query:
			</fo:block><fo:block id="idm139680689029616" text-align="start" wrap-option="wrap" hyphenation-character="\" space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="true" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" font-family="Liberation Mono,monospace" background-color="#f5f5f5" color="black" padding-left="6pt" padding-top="6pt" padding-bottom="6pt" margin-left="0pc" font-size="8pt" border-width="1pt" border-style="solid" border-color="#aaaaaa">
        jn:encode-for-roundtrip({ "nan" : xs:double("NaN"),
                                  "inf" : xs:double("INF"),
                                  "date" : xs:date("1066-10-14"),
                                  "user" : hat:hatSize("M"),
                                  "QName" : xs:QName("jn:encode-for-roundtrip"),
                                  "EQName" : fn:QName("http://jsoniq.org/roundtrip", "value")
                                })
</fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
				Result:
			</fo:block><fo:block id="idm139680689028208" text-align="start" wrap-option="wrap" hyphenation-character="\" space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="true" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" font-family="Liberation Mono,monospace" background-color="#f5f5f5" color="black" padding-left="6pt" padding-top="6pt" padding-bottom="6pt" margin-left="0pc" font-size="8pt" border-width="1pt" border-style="solid" border-color="#aaaaaa">
        {
          "nan" : {
            "Q{http://jsoniq.org/roundtrip}type" : "xs:double",
            "Q{http://jsoniq.org/roundtrip}value" : "NaN"
          },
          "inf" : {
            "Q{http://jsoniq.org/roundtrip}type" : "xs:double",
            "Q{http://jsoniq.org/roundtrip}value" : "INF"
          },
          "date" : {
            "Q{http://jsoniq.org/roundtrip}type" : "xs:date",
            "Q{http://jsoniq.org/roundtrip}value" : "1066-10-14"
          },
          "hat" : {
            "Q{http://jsoniq.org/roundtrip}type" : "Q{http://www.example.com/hat-shop}hatSize",
            "Q{http://jsoniq.org/roundtrip}value" : "M"
          },
          "QName" : { 
            "Q{http://jsoniq.org/roundtrip}type" : "xs:QName", 
            "Q{http://jsoniq.org/roundtrip}value" : "Q{http://jsoniq.org/functions}encode-for-roundtrip", 
            "Q{http://jsoniq.org/roundtrip}prefix" : "jn" 
          },
          "EQName" : { 
            "Q{http://jsoniq.org/roundtrip}type" : "xs:QName", 
            "Q{http://jsoniq.org/roundtrip}value" : "Q{http://jsoniq.org/roundtrip}value" 
          }
        }
</fo:block></fo:block></fo:block></fo:block><fo:block id="idm139680689026288"><fo:block><fo:block><fo:block margin-left="0pc" font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" keep-together.within-column="always"><fo:block keep-with-next.within-column="always"><fo:block font-family="Liberation Sans,sans-serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="1.8em" space-before.optimum="2.0em" space-before.maximum="2.2em" space-after.minimum="0.1em" space-after.optimum="0.1em" space-after.maximum="0.1em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">jn:json-doc</fo:marker><fo:block color="#336699" font-size="16pt">6.8. jn:json-doc</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
			This function returns the JSON node associated with the supplied URI. It has the same semantics as <fo:inline font-weight="bold" font-family="Liberation Mono,monospace">fn:doc</fo:inline>, except that it returns an Object or an Array.
		</fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
			<fo:inline font-weight="bold" font-family="Liberation Mono,monospace">jn:json-doc($uri as xs:string?) as json-item()?</fo:inline>
		</fo:block></fo:block><fo:block id="idm139680689023504"><fo:block><fo:block><fo:block margin-left="0pc" font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" keep-together.within-column="always"><fo:block keep-with-next.within-column="always"><fo:block font-family="Liberation Sans,sans-serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="1.8em" space-before.optimum="2.0em" space-before.maximum="2.2em" space-after.minimum="0.1em" space-after.optimum="0.1em" space-after.maximum="0.1em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">jn:keys</fo:marker><fo:block color="#336699" font-size="16pt">6.9. jn:keys</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
			This function returns all keys of all objects in the supplied sequence, using the jdm:keys accessor, with duplicates eliminated. The order in which the keys are returned is implementation-dependent but must be stable within a snapshot. Non-objects in the input sequence are ignored.
		</fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
			<fo:inline font-weight="bold" font-family="Liberation Mono,monospace">jn:keys($arg as item()*) as xs:string*</fo:inline>
		</fo:block><fo:block><fo:block id="idm139680689021024" border-left-width="3pt" border-left-style="solid" border-left-color="#aaaaaa" keep-together.within-column="" margin-left="0em" padding-left="0.8em" padding-top="0em" margin-top="1.5em" space-after.minimum="2em" space-after.optimum="2em" space-after.maximum="2em" space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em"><fo:block font-weight="normal" font-size="10pt" space-before.optimum="1em" space-before.minimum="0.5em" space-before.maximum="2em" space-after.optimum="0.1pt" space-after.minimum="0.1pt" space-after.maximum="0.1pt" color="#336699" background-color="white" hyphenate="false" keep-with-next.within-column="always">Example 6.6. Getting all keys in a sequence</fo:block><fo:block id="idm139680689020256" text-align="start" wrap-option="wrap" hyphenation-character="\" space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="true" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" font-family="Liberation Mono,monospace" background-color="#f5f5f5" color="black" padding-left="6pt" padding-top="6pt" padding-bottom="6pt" margin-left="0pc" font-size="8pt" border-width="1pt" border-style="solid" border-color="#aaaaaa">
          let $seq := ("foo", [ 1, 2, 3 ], { "a" : 1, "b" : 2 }, { "a" : 3, "c" : 4 })
          return jn:keys($seq)
</fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
				Resulting (possibly with a different ordering) in:
			</fo:block><fo:block id="idm139680689019152" text-align="start" wrap-option="wrap" hyphenation-character="\" space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="true" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" font-family="Liberation Mono,monospace" background-color="#f5f5f5" color="black" padding-left="6pt" padding-top="6pt" padding-bottom="6pt" margin-left="0pc" font-size="8pt" border-width="1pt" border-style="solid" border-color="#aaaaaa">
          ("a", "b", "c")
</fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
				Retrieving all Pairs from an Object:
			</fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
				Query:
			</fo:block><fo:block id="idm139680689017776" text-align="start" wrap-option="wrap" hyphenation-character="\" space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="true" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" font-family="Liberation Mono,monospace" background-color="#f5f5f5" color="black" padding-left="6pt" padding-top="6pt" padding-bottom="6pt" margin-left="0pc" font-size="8pt" border-width="1pt" border-style="solid" border-color="#aaaaaa">
            let $map := { "eyes" : "blue", "hair" : "fuchsia" }
            for $key in jn:keys($map)
            return { $key : $map($key) }
</fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
				Result:
			</fo:block><fo:block id="idm139680687258320" text-align="start" wrap-option="wrap" hyphenation-character="\" space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="true" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" font-family="Liberation Mono,monospace" background-color="#f5f5f5" color="black" padding-left="6pt" padding-top="6pt" padding-bottom="6pt" margin-left="0pc" font-size="8pt" border-width="1pt" border-style="solid" border-color="#aaaaaa">
            { "eyes" : "blue" }
            { "hair" : "fuchsia" }
</fo:block></fo:block></fo:block></fo:block><fo:block id="idm139680687257472"><fo:block><fo:block><fo:block margin-left="0pc" font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" keep-together.within-column="always"><fo:block keep-with-next.within-column="always"><fo:block font-family="Liberation Sans,sans-serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="1.8em" space-before.optimum="2.0em" space-before.maximum="2.2em" space-after.minimum="0.1em" space-after.optimum="0.1em" space-after.maximum="0.1em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">jn:members</fo:marker><fo:block color="#336699" font-size="16pt">6.10. jn:members</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
			This functions returns all values that are in all arrays of an input sequence, preserving the order. Non-arrays in the input sequence are ignored.
		</fo:block><fo:block id="idm139680687256048" text-align="start" wrap-option="wrap" hyphenation-character="\" space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="true" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" font-family="Liberation Mono,monospace" background-color="#f5f5f5" color="black" padding-left="6pt" padding-top="6pt" padding-bottom="6pt" margin-left="0pc" font-size="8pt" border-width="1pt" border-style="solid" border-color="#aaaaaa">
        declare function jn:members($arg as item()*) as item()* {
          for $array in $arg[. instance of array()]
          for $position in 1 to jn:size($array)
          return $array($position)
        };
</fo:block><fo:block><fo:block id="idm139680687255376" border-left-width="3pt" border-left-style="solid" border-left-color="#aaaaaa" keep-together.within-column="" margin-left="0em" padding-left="0.8em" padding-top="0em" margin-top="1.5em" space-after.minimum="2em" space-after.optimum="2em" space-after.maximum="2em" space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em"><fo:block font-weight="normal" font-size="10pt" space-before.optimum="1em" space-before.minimum="0.5em" space-before.maximum="2em" space-after.optimum="0.1pt" space-after.minimum="0.1pt" space-after.maximum="0.1pt" color="#336699" background-color="white" hyphenate="false" keep-with-next.within-column="always">Example 6.7. Retrieving the members of an array</fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
				Query:
			</fo:block><fo:block id="idm139680687254128" text-align="start" wrap-option="wrap" hyphenation-character="\" space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="true" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" font-family="Liberation Mono,monospace" background-color="#f5f5f5" color="black" padding-left="6pt" padding-top="6pt" padding-bottom="6pt" margin-left="0pc" font-size="8pt" border-width="1pt" border-style="solid" border-color="#aaaaaa">
          let $planets :=  ( "foo", { "foo" : "bar "}, [ "mercury", "venus", "earth", "mars" ], [ 1, 2, 3 ])
          return jn:members($planets)</fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
				Result:
			</fo:block><fo:block id="idm139680687253040" text-align="start" wrap-option="wrap" hyphenation-character="\" space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="true" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" font-family="Liberation Mono,monospace" background-color="#f5f5f5" color="black" padding-left="6pt" padding-top="6pt" padding-bottom="6pt" margin-left="0pc" font-size="8pt" border-width="1pt" border-style="solid" border-color="#aaaaaa">mercury venus earth mars 1 2 3</fo:block></fo:block></fo:block></fo:block><fo:block id="idm139680687252272"><fo:block><fo:block><fo:block margin-left="0pc" font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" keep-together.within-column="always"><fo:block keep-with-next.within-column="always"><fo:block font-family="Liberation Sans,sans-serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="1.8em" space-before.optimum="2.0em" space-before.maximum="2.2em" space-after.minimum="0.1em" space-after.optimum="0.1em" space-after.maximum="0.1em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">jn:null</fo:marker><fo:block color="#336699" font-size="16pt">6.11. jn:null</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
			This function returns the JSON null.
		</fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
			<fo:inline font-weight="bold" font-family="Liberation Mono,monospace">jn:null() as js:null</fo:inline>
		</fo:block></fo:block><fo:block id="idm139680687249904"><fo:block><fo:block><fo:block margin-left="0pc" font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" keep-together.within-column="always"><fo:block keep-with-next.within-column="always"><fo:block font-family="Liberation Sans,sans-serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="1.8em" space-before.optimum="2.0em" space-before.maximum="2.2em" space-after.minimum="0.1em" space-after.optimum="0.1em" space-after.maximum="0.1em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">jn:parse-json</fo:marker><fo:block color="#336699" font-size="16pt">6.12. jn:parse-json</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
			This function has the same semantics as fn:parse-xml(), except that it parses the string as JSON (not XML), and returns a sequence of objects or arrays rather than an XML document.
		</fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
			<fo:inline font-weight="bold" font-family="Liberation Mono,monospace">jn:parse-json($arg as xs:string?, $options as object()) as json-item()*</fo:inline>
		</fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
			<fo:inline font-weight="bold" font-family="Liberation Mono,monospace">jn:parse-json($arg as xs:string?) as json-item()*</fo:inline>
		</fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
			If <fo:inline font-weight="bold" font-family="Liberation Mono,monospace">$options("jsoniq-multiple-top-level-items")</fo:inline> evaluates to the empty sequence, or the second parameter is not specified, it is considered to be true.
		</fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
			If <fo:inline font-weight="bold" font-family="Liberation Mono,monospace">$options("jsoniq-multiple-top-level-items")</fo:inline> is not of type <fo:inline font-weight="bold" font-family="Liberation Mono,monospace">xs:boolean</fo:inline>, then <fo:inline font-weight="bold" font-family="Liberation Mono,monospace">jerr:JNTY0020</fo:inline> is raised..
		</fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
			If <fo:inline font-weight="bold" font-family="Liberation Mono,monospace">$options("jsoniq-multiple-top-level-items")</fo:inline> is true, then jn:parse-json recognizes and parses sequences of objects and arrays, with no separation other than whitespaces.
		</fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
			If parsing is not successful, then <fo:inline font-weight="bold" font-family="Liberation Mono,monospace">jerr:JNDY0021</fo:inline> is raised. Parsing is considered in particular to be non-successful if <fo:inline font-weight="bold" font-family="Liberation Mono,monospace">$options("jsoniq-multiple-top-level-items")</fo:inline> is false and there is extra content after parsing a single abject or array.
		</fo:block><fo:block><fo:block id="idm139680687241248" border-left-width="3pt" border-left-style="solid" border-left-color="#aaaaaa" keep-together.within-column="" margin-left="0em" padding-left="0.8em" padding-top="0em" margin-top="1.5em" space-after.minimum="2em" space-after.optimum="2em" space-after.maximum="2em" space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em"><fo:block font-weight="normal" font-size="10pt" space-before.optimum="1em" space-before.minimum="0.5em" space-before.maximum="2em" space-after.optimum="0.1pt" space-after.minimum="0.1pt" space-after.maximum="0.1pt" color="#336699" background-color="white" hyphenate="false" keep-with-next.within-column="always">Example 6.8. Parsing JSON items.</fo:block><fo:block id="idm139680687240448" text-align="start" wrap-option="wrap" hyphenation-character="\" space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="true" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" font-family="Liberation Mono,monospace" background-color="#f5f5f5" color="black" padding-left="6pt" padding-top="6pt" padding-bottom="6pt" margin-left="0pc" font-size="8pt" border-width="1pt" border-style="solid" border-color="#aaaaaa">
parse-json("{&amp;quot;foo&amp;quot; : &amp;quot;bar&amp;quot;} {&amp;quot;bar&amp;quot; : &amp;quot;foo&amp;quot;} [ 1, 2, 3 ]")
</fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
				Result:
			</fo:block><fo:block id="idm139680687239520" text-align="start" wrap-option="wrap" hyphenation-character="\" space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="true" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" font-family="Liberation Mono,monospace" background-color="#f5f5f5" color="black" padding-left="6pt" padding-top="6pt" padding-bottom="6pt" margin-left="0pc" font-size="8pt" border-width="1pt" border-style="solid" border-color="#aaaaaa">
{ "foo" : "bar" }
{ "bar" : "foo" }
[ 1, 2, 3 ]
</fo:block></fo:block></fo:block></fo:block><fo:block id="idm139680687238752"><fo:block><fo:block><fo:block margin-left="0pc" font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" keep-together.within-column="always"><fo:block keep-with-next.within-column="always"><fo:block font-family="Liberation Sans,sans-serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="1.8em" space-before.optimum="2.0em" space-before.maximum="2.2em" space-after.minimum="0.1em" space-after.optimum="0.1em" space-after.maximum="0.1em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">jn:size</fo:marker><fo:block color="#336699" font-size="16pt">6.13. jn:size</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
			This function returns the size of the supplied array using the jdm:size accessor (or the empty sequence if the empty sequence is provided).
		</fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
			<fo:inline font-weight="bold" font-family="Liberation Mono,monospace">jn:size(array()?) as xs:integer?</fo:inline>
		</fo:block><fo:block><fo:block id="idm139680687236416" border-left-width="3pt" border-left-style="solid" border-left-color="#aaaaaa" keep-together.within-column="" margin-left="0em" padding-left="0.8em" padding-top="0em" margin-top="1.5em" space-after.minimum="2em" space-after.optimum="2em" space-after.maximum="2em" space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em"><fo:block font-weight="normal" font-size="10pt" space-before.optimum="1em" space-before.minimum="0.5em" space-before.maximum="2em" space-after.optimum="0.1pt" space-after.minimum="0.1pt" space-after.maximum="0.1pt" color="#336699" background-color="white" hyphenate="false" keep-with-next.within-column="always">Example 6.9. Retrieving the size of an array</fo:block><fo:block id="idm139680687235648" text-align="start" wrap-option="wrap" hyphenation-character="\" space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="true" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" font-family="Liberation Mono,monospace" background-color="#f5f5f5" color="black" padding-left="6pt" padding-top="6pt" padding-bottom="6pt" margin-left="0pc" font-size="8pt" border-width="1pt" border-style="solid" border-color="#aaaaaa">
          let $a := [1 to 10]
          return jn:size($a)
</fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
				Result:
			</fo:block><fo:block id="idm139680687234640" text-align="start" wrap-option="wrap" hyphenation-character="\" space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="true" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" font-family="Liberation Mono,monospace" background-color="#f5f5f5" color="black" padding-left="6pt" padding-top="6pt" padding-bottom="6pt" margin-left="0pc" font-size="8pt" border-width="1pt" border-style="solid" border-color="#aaaaaa">10</fo:block></fo:block></fo:block></fo:block><fo:block id="idm139680687233840"><fo:block><fo:block><fo:block margin-left="0pc" font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" keep-together.within-column="always"><fo:block keep-with-next.within-column="always"><fo:block font-family="Liberation Sans,sans-serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="1.8em" space-before.optimum="2.0em" space-before.maximum="2.2em" space-after.minimum="0.1em" space-after.optimum="0.1em" space-after.maximum="0.1em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Changes to cast semantics</fo:marker><fo:block color="#336699" font-size="16pt">6.14. Changes to cast semantics</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
			The semantics of casts is changed as follows.
		</fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
			No value of an atomic type different than js:null (or derived) can be cast to js:null. An error <fo:inline font-weight="bold" font-family="Liberation Mono,monospace">err:XPTY0004</fo:inline> is raised instead.
		</fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
			A js:null can still be cast to xs:string or xs:untypedAtomic as specified in the XPath function specification, which leads to its canonical representation "null".
		</fo:block></fo:block><fo:block id="idm139680687230896"><fo:block><fo:block><fo:block margin-left="0pc" font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" keep-together.within-column="always"><fo:block keep-with-next.within-column="always"><fo:block font-family="Liberation Sans,sans-serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="1.8em" space-before.optimum="2.0em" space-before.maximum="2.2em" space-after.minimum="0.1em" space-after.optimum="0.1em" space-after.maximum="0.1em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Changes to arithmetic operation semantics</fo:marker><fo:block color="#336699" font-size="16pt">6.15. Changes to arithmetic operation semantics</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
			The semantics of arithmetic operations is changed as follows. If one of the operands is null, an type error <fo:inline font-weight="bold" font-family="Liberation Mono,monospace">err:XPTY0004</fo:inline> is raised.
		</fo:block><fo:block><fo:block id="idm139680687229072" border-left-width="3pt" border-left-style="solid" border-left-color="#aaaaaa" keep-together.within-column="" margin-left="0em" padding-left="0.8em" padding-top="0em" margin-top="1.5em" space-after.minimum="2em" space-after.optimum="2em" space-after.maximum="2em" space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em"><fo:block font-weight="normal" font-size="10pt" space-before.optimum="1em" space-before.minimum="0.5em" space-before.maximum="2em" space-after.optimum="0.1pt" space-after.minimum="0.1pt" space-after.maximum="0.1pt" color="#336699" background-color="white" hyphenate="false" keep-with-next.within-column="always">Example 6.10. Addition</fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
				Query
			</fo:block><fo:block id="idm139680687227792" text-align="start" wrap-option="wrap" hyphenation-character="\" space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="true" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" font-family="Liberation Mono,monospace" background-color="#f5f5f5" color="black" padding-left="6pt" padding-top="6pt" padding-bottom="6pt" margin-left="0pc" font-size="8pt" border-width="1pt" border-style="solid" border-color="#aaaaaa">
        null + 1
</fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
				Result
			</fo:block><fo:block id="idm139680687226832" text-align="start" wrap-option="wrap" hyphenation-character="\" space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="true" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" font-family="Liberation Mono,monospace" background-color="#f5f5f5" color="black" padding-left="6pt" padding-top="6pt" padding-bottom="6pt" margin-left="0pc" font-size="8pt" border-width="1pt" border-style="solid" border-color="#aaaaaa">
        Error.
</fo:block></fo:block></fo:block></fo:block><fo:block id="idm139680687226032"><fo:block><fo:block><fo:block margin-left="0pc" font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" keep-together.within-column="always"><fo:block keep-with-next.within-column="always"><fo:block font-family="Liberation Sans,sans-serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="1.8em" space-before.optimum="2.0em" space-before.maximum="2.2em" space-after.minimum="0.1em" space-after.optimum="0.1em" space-after.maximum="0.1em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Changes to value comparison semantics</fo:marker><fo:block color="#336699" font-size="16pt">6.16. Changes to value comparison semantics</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
			The semantics of value comparison is changed as follows.
		</fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
			Null is considered equal to itself, unequal to any other atomic items, and smaller than any other atomic item.
		</fo:block><fo:block><fo:block id="idm139680687224160" border-left-width="3pt" border-left-style="solid" border-left-color="#aaaaaa" keep-together.within-column="" margin-left="0em" padding-left="0.8em" padding-top="0em" margin-top="1.5em" space-after.minimum="2em" space-after.optimum="2em" space-after.maximum="2em" space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em"><fo:block font-weight="normal" font-size="10pt" space-before.optimum="1em" space-before.minimum="0.5em" space-before.maximum="2em" space-after.optimum="0.1pt" space-after.minimum="0.1pt" space-after.maximum="0.1pt" color="#336699" background-color="white" hyphenate="false" keep-with-next.within-column="always">Example 6.11. Value comparison</fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
				Query
			</fo:block><fo:block id="idm139680687222880" text-align="start" wrap-option="wrap" hyphenation-character="\" space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="true" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" font-family="Liberation Mono,monospace" background-color="#f5f5f5" color="black" padding-left="6pt" padding-top="6pt" padding-bottom="6pt" margin-left="0pc" font-size="8pt" border-width="1pt" border-style="solid" border-color="#aaaaaa">
        1 eq null, null eq null, 1 ne null, null lt 1
</fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
				Result
			</fo:block><fo:block id="idm139680687221952" text-align="start" wrap-option="wrap" hyphenation-character="\" space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="true" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" font-family="Liberation Mono,monospace" background-color="#f5f5f5" color="black" padding-left="6pt" padding-top="6pt" padding-bottom="6pt" margin-left="0pc" font-size="8pt" border-width="1pt" border-style="solid" border-color="#aaaaaa">
        false true true true
</fo:block></fo:block></fo:block></fo:block><fo:block id="idm139680687221184"><fo:block><fo:block><fo:block margin-left="0pc" font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" keep-together.within-column="always"><fo:block keep-with-next.within-column="always"><fo:block font-family="Liberation Sans,sans-serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="1.8em" space-before.optimum="2.0em" space-before.maximum="2.2em" space-after.minimum="0.1em" space-after.optimum="0.1em" space-after.maximum="0.1em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Changes to general comparison semantics</fo:marker><fo:block color="#336699" font-size="16pt">6.17. Changes to general comparison semantics</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
			The semantics of general comparison is changed as follows.
		</fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
			After atomization, if one of the operands is the null atomic item, the other item is not cast, and pair-wise comparison is done using the modified semantics of value comparison.
		</fo:block><fo:block><fo:block id="idm139680687219232" border-left-width="3pt" border-left-style="solid" border-left-color="#aaaaaa" keep-together.within-column="" margin-left="0em" padding-left="0.8em" padding-top="0em" margin-top="1.5em" space-after.minimum="2em" space-after.optimum="2em" space-after.maximum="2em" space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em"><fo:block font-weight="normal" font-size="10pt" space-before.optimum="1em" space-before.minimum="0.5em" space-before.maximum="2em" space-after.optimum="0.1pt" space-after.minimum="0.1pt" space-after.maximum="0.1pt" color="#336699" background-color="white" hyphenate="false" keep-with-next.within-column="always">Example 6.12. General comparison: equality</fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
				Query
			</fo:block><fo:block id="idm139680687217984" text-align="start" wrap-option="wrap" hyphenation-character="\" space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="true" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" font-family="Liberation Mono,monospace" background-color="#f5f5f5" color="black" padding-left="6pt" padding-top="6pt" padding-bottom="6pt" margin-left="0pc" font-size="8pt" border-width="1pt" border-style="solid" border-color="#aaaaaa">
        (null, 2) = (1, 3)
</fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
				Result
			</fo:block><fo:block id="idm139680687217056" text-align="start" wrap-option="wrap" hyphenation-character="\" space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="true" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" font-family="Liberation Mono,monospace" background-color="#f5f5f5" color="black" padding-left="6pt" padding-top="6pt" padding-bottom="6pt" margin-left="0pc" font-size="8pt" border-width="1pt" border-style="solid" border-color="#aaaaaa">
        false
</fo:block></fo:block></fo:block></fo:block></fo:flow></fo:page-sequence><fo:page-sequence xmlns:axf="http://www.antennahouse.com/names/XSL/Extensions" hyphenate="true" master-reference="body" language="en" format="1" initial-page-number="auto-odd" force-page-count="end-on-even" hyphenation-character="-" hyphenation-push-character-count="2" hyphenation-remain-character-count="2"><fo:static-content flow-name="xsl-region-before-first"><fo:block wrap-option="no-wrap" font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" margin-left="0pc"><fo:table table-layout="fixed" width="100%" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(0)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="before" relative-align="baseline"><fo:block/></fo:table-cell><fo:table-cell text-align="center" display-align="before" relative-align="baseline"><fo:block><fo:inline keep-together.within-line="always" font-weight="bold">Chapter 7.</fo:inline></fo:block></fo:table-cell><fo:table-cell text-align="right" display-align="before" relative-align="baseline"><fo:block/></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-before-odd"><fo:block wrap-option="no-wrap" font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" margin-left="0pc"><fo:table table-layout="fixed" width="100%" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(0)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="before" relative-align="baseline"><fo:block/></fo:table-cell><fo:table-cell text-align="center" display-align="before" relative-align="baseline"><fo:block/></fo:table-cell><fo:table-cell text-align="right" display-align="before" relative-align="baseline"><fo:block><fo:inline keep-together.within-line="always"><fo:retrieve-marker retrieve-class-name="section.head.marker" retrieve-position="first-including-carryover" retrieve-boundary="page-sequence"/></fo:inline></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-before-even"><fo:block wrap-option="no-wrap" font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" margin-left="0pc"><fo:table table-layout="fixed" width="100%" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(0)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="before" relative-align="baseline"><fo:block><fo:inline keep-together.within-line="always" font-weight="bold">Chapter 7. JSON updates</fo:inline></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="before" relative-align="baseline"><fo:block/></fo:table-cell><fo:table-cell text-align="right" display-align="before" relative-align="baseline"><fo:block/></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-before-blank"><fo:block wrap-option="no-wrap" font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" margin-left="0pc"><fo:table table-layout="fixed" width="100%" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(0)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="before" relative-align="baseline"><fo:block/></fo:table-cell><fo:table-cell text-align="center" display-align="before" relative-align="baseline"><fo:block/></fo:table-cell><fo:table-cell text-align="right" display-align="before" relative-align="baseline"><fo:block/></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" flow-name="xsl-footnote-separator"><fo:block margin-top="2em"><fo:leader color="black" leader-pattern="rule" leader-length="1in"/></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-inner-first"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-inner-odd"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-inner-even"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-inner-blank"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-outer-first"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-outer-odd"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-outer-even"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-outer-blank"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-after-first"><fo:block font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" margin-left="0pc"><fo:table table-layout="fixed" width="100%" border-top-width="0.5pt" border-top-style="solid" border-top-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="end" display-align="after" relative-align="baseline"><fo:block><fo:block><fo:page-number/></fo:block></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-after-odd"><fo:block font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" margin-left="0pc"><fo:table table-layout="fixed" width="100%" border-top-width="0.5pt" border-top-style="solid" border-top-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="end" display-align="after" relative-align="baseline"><fo:block><fo:block><fo:page-number/></fo:block></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-after-even"><fo:block font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" margin-left="0pc"><fo:table table-layout="fixed" width="100%" border-top-width="0.5pt" border-top-style="solid" border-top-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="after" relative-align="baseline"><fo:block><fo:block><fo:page-number/></fo:block></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="end" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-after-blank"><fo:block font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" margin-left="0pc"><fo:table table-layout="fixed" width="100%" border-top-width="0.5pt" border-top-style="solid" border-top-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="after" relative-align="baseline"><fo:block><fo:block><fo:page-number/></fo:block></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="end" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:flow flow-name="xsl-region-body" start-indent="0pt" end-indent="0pt"><fo:block id="section-json-updates"><fo:block font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats"><fo:block margin-left="0pc"><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" color="#336699" background-color="white" font-size="24pt" font-weight="bold" text-align="left" padding-left="1em" padding-right="1em">JSON updates</fo:block></fo:block></fo:block></fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
		JSONiq introduces new update primitives for updating Objects and Arrays. Update primitives can be generated with new JSONiq updating expressions.
	</fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
		An individual function may create an invalid JSON instance; however, an updating query must produce a valid JSON instance once the entire query is evaluated, or an error is raised and the entire update fails, leaving the instance in its original state.
	</fo:block><fo:block id="idm139680678785968"><fo:block><fo:block><fo:block margin-left="0pc" font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" keep-together.within-column="always"><fo:block keep-with-next.within-column="always"><fo:block font-family="Liberation Sans,sans-serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="1.8em" space-before.optimum="2.0em" space-before.maximum="2.2em" space-after.minimum="0.1em" space-after.optimum="0.1em" space-after.maximum="0.1em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">JSON udpate primitives</fo:marker><fo:block color="#336699" font-size="16pt">7.1. JSON udpate primitives</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
			The following new update primitives are introduced.
		</fo:block><fo:list-block id="idm139680688234800" space-before.optimum="0.1pt" space-before.minimum="0.1pt" space-before.maximum="0.1pt" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em" provisional-label-separation="0.2em" provisional-distance-between-starts="1.0em"><fo:list-item id="idm139680678243520" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em">
					<fo:inline font-weight="bold" font-family="Liberation Mono,monospace">jupd:insert-into-object($o as object(), $p as object())</fo:inline>
				</fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
					Inserts all pairs of the object <fo:inline font-weight="bold" font-family="Liberation Mono,monospace">$p</fo:inline> into the object $o.
				</fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item id="idm139680679395440" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em">
					<fo:inline font-weight="bold" font-family="Liberation Mono,monospace">jupd:insert-into-array($a as array(), $i as xs:integer, $c as item()*)</fo:inline>
				</fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
					Inserts all items in the sequence $c before position $i into the array $a.
				</fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item id="idm139680679324240" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em">
					<fo:inline font-weight="bold" font-family="Liberation Mono,monospace">jupd:delete-from-object($o as object(), $s as xs:string*)</fo:inline>
				</fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
					Removes the pairs the names of which appear in $s from the object $o.
				</fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item id="idm139680679750560" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em">
					<fo:inline font-weight="bold" font-family="Liberation Mono,monospace">jupd:delete-from-array($a as array(), $i as xs:integer)</fo:inline>
				</fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
					Removes the item at position $i from the array $a (causes all following items in the array to move one position to the left).
				</fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item id="idm139680679517952" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em">
					<fo:inline font-weight="bold" font-family="Liberation Mono,monospace">jupd:replace-in-array($a as array(), $i as xs:integer, $v as item())</fo:inline>
				</fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
					Replaces the item at position $i in the array $a with the item $v (do nothing if $i is not comprised between 1 and jdm:size($a)).
				</fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item id="idm139680686031216" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em">
					<fo:inline font-weight="bold" font-family="Liberation Mono,monospace">jupd:replace-in-object($o as object(), $n as xs:string, $v as item())</fo:inline>
				</fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
					Replaces the value of the pair named $n in the object $o with the item $v (do nothing if there is no such pair).
				</fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item id="idm139680678160208" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em">
					<fo:inline font-weight="bold" font-family="Liberation Mono,monospace">jupd:rename-in-object($o as object(), $n as xs:string, $p as xs:string)</fo:inline>
				</fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
					Renames the pair originally named $n in the object $o as $p (do nothing if there is no such pair).
				</fo:block></fo:block></fo:list-item-body></fo:list-item></fo:list-block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
			Update primitives within a PUL are applied with strict snapshot semantics. For examples, the positions are resolved against the array before the updates. Names are resolved on the object before the updates.
		</fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
			In the middle of a program, several PULs can be produced against the same snapshot. They are then merged with <fo:inline font-weight="bold" font-family="Liberation Mono,monospace">upd:mergeUpdates</fo:inline>, which is extended as follows.
		</fo:block><fo:list-block id="idm139680685901072" space-before.optimum="0.1pt" space-before.minimum="0.1pt" space-before.maximum="0.1pt" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em" provisional-label-separation="0.2em" provisional-distance-between-starts="1.0em"><fo:list-item id="idm139680685900752" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em">
					Several deletes on the same object are replaced with a unique delete on that object, with a list of all selectors (names) to be deleted, where duplicates have been eliminated.
				</fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item id="idm139680685899616" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em">
					Several deletes on the same array and selector (position) are replaced with a unique delete on that array and with that selector.
				</fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item id="idm139680677964880" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em">
					Several inserts on the same array and selector (position) are equivalent to a unique insert on that array and selector with the content of those original inserts appended in an implementation-dependent order (like XQUF).
				</fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item id="idm139680677963712" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em">
					Several inserts on the same object are equivalent to a unique insert where the objects containing the pairs to insert are merged. An error <fo:inline font-weight="bold" font-family="Liberation Mono,monospace">jerr:JNUP0005</fo:inline> is raised if a collision occurs.
				</fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item id="idm139680677962176" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em">
					Several replaces on the same object or array and with the same selector raise an error <fo:inline font-weight="bold" font-family="Liberation Mono,monospace">jerr:JNUP0009</fo:inline>.
				</fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item id="idm139680677960768" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em">
					Several renames on the same object and with the same selector raise an error <fo:inline font-weight="bold" font-family="Liberation Mono,monospace">jerr:JNUP0010</fo:inline>.
				</fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item id="idm139680677959360" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em">
					If there is a replace and a delete on the same object or array and with the same selector, the replace is omitted in the merged PUL.
				</fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item id="idm139680685498032" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em">
					If there is a rename and a delete on the same object or array and with the same selector, the rename is omitted in the merged PUL.
				</fo:block></fo:block></fo:list-item-body></fo:list-item></fo:list-block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
			At the end of an updating program, the resulting PUL is applied with <fo:inline font-weight="bold" font-family="Liberation Mono,monospace">upd:applyUpdates</fo:inline>, which is extended as follows:
		</fo:block><fo:list-block id="idm139680685495888" space-before.optimum="0.1pt" space-before.minimum="0.1pt" space-before.maximum="0.1pt" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em" provisional-label-separation="0.2em" provisional-distance-between-starts="1.0em"><fo:list-item id="idm139680685495568" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em">
					First, before applying any update, each update primitive (except the jupd:insert-into-object primitives, which do not have any target) locks onto its target by resolving the selector on the object or array it updates. If the selector is resolved to the empty sequence, the update primitive is ignored in step 2. After this operation, each of these update primitives will contain a reference to either the pair (for an object) or the value (for an array) on or relatively to which it operates
				</fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item id="idm139680685494128" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em">
					Then each update primitive is applied, using the target references that were resolved at step 1. The order in which they are applied is not relevant and does not affect the final instance of the data model. After applying all updates, an error <fo:inline font-weight="bold" font-family="Liberation Mono,monospace">jerr:JNUP0006</fo:inline> is raised upon pair name collision within the same object.
				</fo:block></fo:block></fo:list-item-body></fo:list-item></fo:list-block></fo:block><fo:block id="idm139680685492080"><fo:block><fo:block><fo:block margin-left="0pc" font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" keep-together.within-column="always"><fo:block keep-with-next.within-column="always"><fo:block font-family="Liberation Sans,sans-serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="1.8em" space-before.optimum="2.0em" space-before.maximum="2.2em" space-after.minimum="0.1em" space-after.optimum="0.1em" space-after.maximum="0.1em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Update syntax: new updating expressions</fo:marker><fo:block color="#336699" font-size="16pt">7.2. Update syntax: new updating expressions</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
			The following syntax is introduced for updates.
		</fo:block><fo:block id="idm139680685490864"><fo:block><fo:block><fo:block margin-left="0pc" font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" keep-together.within-column="always"><fo:block keep-with-next.within-column="always"><fo:block font-family="Liberation Sans,sans-serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="1.8em" space-before.optimum="2.0em" space-before.maximum="2.2em" space-after.minimum="0.1em" space-after.optimum="0.1em" space-after.maximum="0.1em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Deleting expressions</fo:marker><fo:block color="#336699" font-size="14pt">7.2.1. Deleting expressions</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block id="idm139680677475632" text-align="start" wrap-option="wrap" hyphenation-character="\" space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="true" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" font-family="Liberation Mono,monospace" background-color="#f5f5f5" color="black" padding-left="6pt" padding-top="6pt" padding-bottom="6pt" margin-left="0pc" font-size="8pt" border-width="1pt" border-style="solid" border-color="#aaaaaa">
            JSONDeleteExpr ::= "delete" "json" PrimaryExpr ( "(" ExprSingle ")" )+ 
</fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
				PrimaryExpr followed by all "(" ExprSingle ")" except the last one, is evaluated according to the semantics of dynamic function calls. It must return a single object $o or a single array $a. Otherwise, <fo:inline font-weight="bold" font-family="Liberation Mono,monospace">jerr:JNUP0008</fo:inline> is raised. After this evaluation, two cases can appear for interpreting the last "(" ExprSingle ")":
			</fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
				(for explanatory purposes, suboperands are replaced with a variable containing the result of their evaluation)
			</fo:block><fo:list-block id="idm139680677473360" space-before.optimum="0.1pt" space-before.minimum="0.1pt" space-before.maximum="0.1pt" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em" provisional-label-separation="0.2em" provisional-distance-between-starts="1.0em"><fo:list-item id="idm139680677473040" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em">
						<fo:inline font-weight="bold" font-family="Liberation Mono,monospace">delete json $o($s)</fo:inline>
					</fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
						$s is atomized and cast to xs:string (<fo:inline font-weight="bold" font-family="Liberation Mono,monospace">jerr:JNUP0007</fo:inline> is raised upon failure).
					</fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
						Creates the update primitive <fo:inline font-weight="bold" font-family="Liberation Mono,monospace">jupd:delete-from-object($o, $s)</fo:inline>. An error <fo:inline font-weight="bold" font-family="Liberation Mono,monospace">JNUP:0016</fo:inline> is raised if $o does not contain a pair with the key $s.
					</fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item id="idm139680677469360" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em">
						<fo:inline font-weight="bold" font-family="Liberation Mono,monospace">delete json $a($i)</fo:inline>
					</fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
						$i is atomized and cast to xs:integer (<fo:inline font-weight="bold" font-family="Liberation Mono,monospace">jerr:JNUP0007</fo:inline> is raised upon failure).
					</fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
						Creates the update primitive <fo:inline font-weight="bold" font-family="Liberation Mono,monospace">jupd:delete-from-array($a, $i)</fo:inline>. An error <fo:inline font-weight="bold" font-family="Liberation Mono,monospace">JNUP:0016</fo:inline> is raised if $i is out of the range of the array $a.
					</fo:block></fo:block></fo:list-item-body></fo:list-item></fo:list-block><fo:block><fo:block id="idm139680686503184" border-left-width="3pt" border-left-style="solid" border-left-color="#aaaaaa" keep-together.within-column="" margin-left="0em" padding-left="0.8em" padding-top="0em" margin-top="1.5em" space-after.minimum="2em" space-after.optimum="2em" space-after.maximum="2em" space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em"><fo:block font-weight="normal" font-size="10pt" space-before.optimum="1em" space-before.minimum="0.5em" space-before.maximum="2em" space-after.optimum="0.1pt" space-after.minimum="0.1pt" space-after.maximum="0.1pt" color="#336699" background-color="white" hyphenate="false" keep-with-next.within-column="always">Example 7.1. Deleting from an object and from an array</fo:block><fo:block id="idm139680686502416" text-align="start" wrap-option="wrap" hyphenation-character="\" space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="true" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" font-family="Liberation Mono,monospace" background-color="#f5f5f5" color="black" padding-left="6pt" padding-top="6pt" padding-bottom="6pt" margin-left="0pc" font-size="8pt" border-width="1pt" border-style="solid" border-color="#aaaaaa">
             delete json $o("foo")
             delete json $a(2)
</fo:block></fo:block></fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
				Note:
			</fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
				If <fo:inline font-weight="bold" font-family="Liberation Mono,monospace">$o($s)</fo:inline> or <fo:inline font-weight="bold" font-family="Liberation Mono,monospace">$a($i)</fo:inline> resolves to an empty sequence, the produced update primitive will have no effect.
			</fo:block></fo:block><fo:block id="idm139680686499680"><fo:block><fo:block><fo:block margin-left="0pc" font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" keep-together.within-column="always"><fo:block keep-with-next.within-column="always"><fo:block font-family="Liberation Sans,sans-serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="1.8em" space-before.optimum="2.0em" space-before.maximum="2.2em" space-after.minimum="0.1em" space-after.optimum="0.1em" space-after.maximum="0.1em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Inserting expressions</fo:marker><fo:block color="#336699" font-size="14pt">7.2.2. Inserting expressions</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block id="idm139680686498880" text-align="start" wrap-option="wrap" hyphenation-character="\" space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="true" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" font-family="Liberation Mono,monospace" background-color="#f5f5f5" color="black" padding-left="6pt" padding-top="6pt" padding-bottom="6pt" margin-left="0pc" font-size="8pt" border-width="1pt" border-style="solid" border-color="#aaaaaa">
            JSONInsertExpr ::= "insert" "json" ExprSingle "into" ExprSingle ("at" "position" ExprSingle)?
                             | "insert" "json" PairConstructor ("," Pair Constructor)* "into" ExprSingle
</fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
				(for explanatory purposes, suboperands are replaced with a variable containing the result of their evaluation)
			</fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
				The second variant corresponds to the insertion of a statically known number of pairs:
			</fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
				<fo:inline font-weight="bold" font-family="Liberation Mono,monospace">insert json "foo" : "bar", "bar" : "foo" into $o</fo:inline>
			</fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
				is defined as being equivalent to:
			</fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
				<fo:inline font-weight="bold" font-family="Liberation Mono,monospace">insert json { "foo" : "bar", "bar" : "foo" } into $o</fo:inline>
			</fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
				Inserting expressions are available in two flavors (object insertion, array insertion):
			</fo:block><fo:list-block id="idm139680686494432" space-before.optimum="0.1pt" space-before.minimum="0.1pt" space-before.maximum="0.1pt" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em" provisional-label-separation="0.2em" provisional-distance-between-starts="1.0em"><fo:list-item id="idm139680686494112" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em">
						<fo:inline font-weight="bold" font-family="Liberation Mono,monospace">insert json $p into $o</fo:inline>
					</fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
						$o must be an object. Otherwise, <fo:inline font-weight="bold" font-family="Liberation Mono,monospace">jerr:JNUP0008</fo:inline> is raised.
					</fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
						$p must be a sequence of objects. Otherwise, <fo:inline font-weight="bold" font-family="Liberation Mono,monospace">jerr:JNUP0019</fo:inline> is raised.
					</fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
						$o is post-processed by invoking <fo:inline font-weight="bold" font-family="Liberation Mono,monospace">jn:object</fo:inline>, which results in a single object containing all pairs to insert. In particular, <fo:inline font-weight="bold" font-family="Liberation Mono,monospace">jerr:JNDY0003</fo:inline> is raised upon a pair collision.
					</fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
						Makes a copy $p and creates the update primitive <fo:inline font-weight="bold" font-family="Liberation Mono,monospace">jupd:insert-into-object($o, $p)</fo:inline>
					</fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item id="idm139680685608144" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em">
						<fo:inline font-weight="bold" font-family="Liberation Mono,monospace">insert json $c into $a at position $i</fo:inline>
					</fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
						$a must be an array. Otherwise, <fo:inline font-weight="bold" font-family="Liberation Mono,monospace">jerr:JNUP0008</fo:inline> is raised.
					</fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
						$i is atomized and cast to xs:integer (<fo:inline font-weight="bold" font-family="Liberation Mono,monospace">jerr:JNUP0007</fo:inline> is raised upon failure).
					</fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
						Makes a copy of all items in $c and creates the update primitive <fo:inline font-weight="bold" font-family="Liberation Mono,monospace">jupd:insert-into-array($a, $i, $c)</fo:inline>
					</fo:block></fo:block></fo:list-item-body></fo:list-item></fo:list-block><fo:block><fo:block id="idm139680685603856" border-left-width="3pt" border-left-style="solid" border-left-color="#aaaaaa" keep-together.within-column="" margin-left="0em" padding-left="0.8em" padding-top="0em" margin-top="1.5em" space-after.minimum="2em" space-after.optimum="2em" space-after.maximum="2em" space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em"><fo:block font-weight="normal" font-size="10pt" space-before.optimum="1em" space-before.minimum="0.5em" space-before.maximum="2em" space-after.optimum="0.1pt" space-after.minimum="0.1pt" space-after.maximum="0.1pt" color="#336699" background-color="white" hyphenate="false" keep-with-next.within-column="always">Example 7.2. Inserting into an array or an object</fo:block><fo:block id="idm139680685603088" text-align="start" wrap-option="wrap" hyphenation-character="\" space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="true" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" font-family="Liberation Mono,monospace" background-color="#f5f5f5" color="black" padding-left="6pt" padding-top="6pt" padding-bottom="6pt" margin-left="0pc" font-size="8pt" border-width="1pt" border-style="solid" border-color="#aaaaaa">
              insert json (1, 2, 3) into $a at position 3
              insert json { "foo": 3, "bar":4 } into $o
</fo:block></fo:block></fo:block></fo:block><fo:block id="idm139680685602192"><fo:block><fo:block><fo:block margin-left="0pc" font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" keep-together.within-column="always"><fo:block keep-with-next.within-column="always"><fo:block font-family="Liberation Sans,sans-serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="1.8em" space-before.optimum="2.0em" space-before.maximum="2.2em" space-after.minimum="0.1em" space-after.optimum="0.1em" space-after.maximum="0.1em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Renaming expressions</fo:marker><fo:block color="#336699" font-size="14pt">7.2.3. Renaming expressions</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block id="idm139680685601392" text-align="start" wrap-option="wrap" hyphenation-character="\" space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="true" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" font-family="Liberation Mono,monospace" background-color="#f5f5f5" color="black" padding-left="6pt" padding-top="6pt" padding-bottom="6pt" margin-left="0pc" font-size="8pt" border-width="1pt" border-style="solid" border-color="#aaaaaa">
            JSONRenameExpr ::= "rename" "json" PrimaryExpr  ( "(" ExprSingle ")" )+ "as" ExprSingle
</fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
				(for explanatory purposes, suboperands are replaced with a variable containing the result of their evaluation)
			</fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
				<fo:inline font-weight="bold" font-family="Liberation Mono,monospace">rename json $o($s) as $n</fo:inline>
			</fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
				PrimaryExpr followed by all "(" ExprSingle ")" except the last one, is evaluated according to the semantics of dynamic function calls. It must return a single object $o. Otherwise, <fo:inline font-weight="bold" font-family="Liberation Mono,monospace">jerr:JNUP0008</fo:inline> is raised. After this evaluation, the last "(" ExprSingle ")" is interpreted as follows:
			</fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
				$s is atomized and cast to xs:string (<fo:inline font-weight="bold" font-family="Liberation Mono,monospace">jerr:JNUP0007</fo:inline> is raised upon failure).
			</fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
				Creates the update primitive <fo:inline font-weight="bold" font-family="Liberation Mono,monospace">jupd:rename-in-object($o, $s, $n)</fo:inline>. An error <fo:inline font-weight="bold" font-family="Liberation Mono,monospace">JNUP:0016</fo:inline> is raised if $o does not contain a pair with the key $s.
			</fo:block><fo:block><fo:block id="idm139680685596016" border-left-width="3pt" border-left-style="solid" border-left-color="#aaaaaa" keep-together.within-column="" margin-left="0em" padding-left="0.8em" padding-top="0em" margin-top="1.5em" space-after.minimum="2em" space-after.optimum="2em" space-after.maximum="2em" space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em"><fo:block font-weight="normal" font-size="10pt" space-before.optimum="1em" space-before.minimum="0.5em" space-before.maximum="2em" space-after.optimum="0.1pt" space-after.minimum="0.1pt" space-after.maximum="0.1pt" color="#336699" background-color="white" hyphenate="false" keep-with-next.within-column="always">Example 7.3. Renaming an object pair</fo:block><fo:block id="idm139680685595216" text-align="start" wrap-option="wrap" hyphenation-character="\" space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="true" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" font-family="Liberation Mono,monospace" background-color="#f5f5f5" color="black" padding-left="6pt" padding-top="6pt" padding-bottom="6pt" margin-left="0pc" font-size="8pt" border-width="1pt" border-style="solid" border-color="#aaaaaa">
              rename json $o("foo") as "bar"
</fo:block></fo:block></fo:block></fo:block><fo:block id="idm139680688144240"><fo:block><fo:block><fo:block margin-left="0pc" font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" keep-together.within-column="always"><fo:block keep-with-next.within-column="always"><fo:block font-family="Liberation Sans,sans-serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="1.8em" space-before.optimum="2.0em" space-before.maximum="2.2em" space-after.minimum="0.1em" space-after.optimum="0.1em" space-after.maximum="0.1em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Replacing expressions</fo:marker><fo:block color="#336699" font-size="14pt">7.2.4. Replacing expressions</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block id="idm139680688143440" text-align="start" wrap-option="wrap" hyphenation-character="\" space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="true" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" font-family="Liberation Mono,monospace" background-color="#f5f5f5" color="black" padding-left="6pt" padding-top="6pt" padding-bottom="6pt" margin-left="0pc" font-size="8pt" border-width="1pt" border-style="solid" border-color="#aaaaaa">
            JSONReplaceExpr ::= "replace" "json" "value" "of" PrimaryExpr ( "(" ExprSingle ")" )+ "with" ExprSingle
</fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
				PrimaryExpr followed by all "(" ExprSingle ")" except the last one, is evaluated according to the semantics of dynamic function calls. It must return a single object $o or a single array $a. Otherwise, <fo:inline font-weight="bold" font-family="Liberation Mono,monospace">jerr:JNUP0008</fo:inline> is raised. After this evaluation, two cases can appear for interpreting the last "(" ExprSingle ")":
			</fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
				(for explanatory purposes, suboperands are replaced with a variable containing the result of their evaluation)
			</fo:block><fo:list-block id="idm139680688141040" space-before.optimum="0.1pt" space-before.minimum="0.1pt" space-before.maximum="0.1pt" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em" provisional-label-separation="0.2em" provisional-distance-between-starts="1.0em"><fo:list-item id="idm139680688140720" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em">
						<fo:inline font-weight="bold" font-family="Liberation Mono,monospace">replace json value of $o($s) with $c</fo:inline>
					</fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
						$s is atomized and cast to xs:string (<fo:inline font-weight="bold" font-family="Liberation Mono,monospace">jerr:JNUP0007</fo:inline> is raised upon failure).
					</fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
						$c is postprocessed in the same way as values in a pair constructor, i.e., if $c is the empty sequence, it is replaced with the atomic value null, and if it is a sequence of more than one item, an array is created with all items in this sequence and in the same order. Ultimately, in all cases, $c will be a single item.
					</fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
						Makes a copy of $c and creates the update primitive <fo:inline font-weight="bold" font-family="Liberation Mono,monospace">jupd:replace-in-object($o, $s, $c)</fo:inline>. An error <fo:inline font-weight="bold" font-family="Liberation Mono,monospace">JNUP:0016</fo:inline> is raised if $o does not contain a pair with the key $s.
					</fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item id="idm139680688136112" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em">
						<fo:inline font-weight="bold" font-family="Liberation Mono,monospace">replace json value of $a($i) with $c</fo:inline>
					</fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
						$i is atomized and cast to xs:integer (<fo:inline font-weight="bold" font-family="Liberation Mono,monospace">jerr:JNUP0007</fo:inline> is raised upon failure).
					</fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
						$c is postprocessed in the same way as values in a pair constructor, i.e., if $c is the empty sequence, it is replaced with the atomic value null, and if it is a sequence of more than one item, an array is created with all items in this sequence and in the same order. Ultimately, in all cases, $c will be a single item.
					</fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
						Makes a copy of $c and creates the update primitive <fo:inline font-weight="bold" font-family="Liberation Mono,monospace">jupd:replace-in-array($a, $i, $c)</fo:inline>. An error <fo:inline font-weight="bold" font-family="Liberation Mono,monospace">JNUP:0016</fo:inline> is raised if $i is out of the range of array $a.
					</fo:block></fo:block></fo:list-item-body></fo:list-item></fo:list-block><fo:block><fo:block id="idm139680688131424" border-left-width="3pt" border-left-style="solid" border-left-color="#aaaaaa" keep-together.within-column="" margin-left="0em" padding-left="0.8em" padding-top="0em" margin-top="1.5em" space-after.minimum="2em" space-after.optimum="2em" space-after.maximum="2em" space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em"><fo:block font-weight="normal" font-size="10pt" space-before.optimum="1em" space-before.minimum="0.5em" space-before.maximum="2em" space-after.optimum="0.1pt" space-after.minimum="0.1pt" space-after.maximum="0.1pt" color="#336699" background-color="white" hyphenate="false" keep-with-next.within-column="always">Example 7.4. Replace a value in an object or in an array</fo:block><fo:block id="idm139680688130656" text-align="start" wrap-option="wrap" hyphenation-character="\" space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="true" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" font-family="Liberation Mono,monospace" background-color="#f5f5f5" color="black" padding-left="6pt" padding-top="6pt" padding-bottom="6pt" margin-left="0pc" font-size="8pt" border-width="1pt" border-style="solid" border-color="#aaaaaa">
              replace json value of $o("foo") with 5
              replace json value of $a(3) with 25
</fo:block></fo:block></fo:block></fo:block><fo:block id="idm139680688129760"><fo:block><fo:block><fo:block margin-left="0pc" font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" keep-together.within-column="always"><fo:block keep-with-next.within-column="always"><fo:block font-family="Liberation Sans,sans-serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="1.8em" space-before.optimum="2.0em" space-before.maximum="2.2em" space-after.minimum="0.1em" space-after.optimum="0.1em" space-after.maximum="0.1em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Appending expressions</fo:marker><fo:block color="#336699" font-size="14pt">7.2.5. Appending expressions</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block id="idm139680688128960" text-align="start" wrap-option="wrap" hyphenation-character="\" space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="true" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" font-family="Liberation Mono,monospace" background-color="#f5f5f5" color="black" padding-left="6pt" padding-top="6pt" padding-bottom="6pt" margin-left="0pc" font-size="8pt" border-width="1pt" border-style="solid" border-color="#aaaaaa">
            JSONAppendExpr ::= "append" "json" ExprSingle "into" ExprSingle
</fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
				(for explanatory purposes, suboperands are replaced with a variable containing the result of their evaluation)
			</fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
				<fo:inline font-weight="bold" font-family="Liberation Mono,monospace">append json $c into $a</fo:inline>
			</fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
				$a must be an array. Otherwise, <fo:inline font-weight="bold" font-family="Liberation Mono,monospace">jerr:JNUP0008</fo:inline> is raised.
			</fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
				Creates the update primitive <fo:inline font-weight="bold" font-family="Liberation Mono,monospace">insert-into-array($a, $a()+1, $c)</fo:inline>
			</fo:block><fo:block><fo:block id="idm139680685419728" border-left-width="3pt" border-left-style="solid" border-left-color="#aaaaaa" keep-together.within-column="" margin-left="0em" padding-left="0.8em" padding-top="0em" margin-top="1.5em" space-after.minimum="2em" space-after.optimum="2em" space-after.maximum="2em" space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em"><fo:block font-weight="normal" font-size="10pt" space-before.optimum="1em" space-before.minimum="0.5em" space-before.maximum="2em" space-after.optimum="0.1pt" space-after.minimum="0.1pt" space-after.maximum="0.1pt" color="#336699" background-color="white" hyphenate="false" keep-with-next.within-column="always">Example 7.5. Appending values to an array</fo:block><fo:block id="idm139680685418960" text-align="start" wrap-option="wrap" hyphenation-character="\" space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="true" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" font-family="Liberation Mono,monospace" background-color="#f5f5f5" color="black" padding-left="6pt" padding-top="6pt" padding-bottom="6pt" margin-left="0pc" font-size="8pt" border-width="1pt" border-style="solid" border-color="#aaaaaa">
              append json (1,2) into $a
</fo:block></fo:block></fo:block></fo:block></fo:block></fo:flow></fo:page-sequence><fo:page-sequence xmlns:axf="http://www.antennahouse.com/names/XSL/Extensions" hyphenate="true" master-reference="body" language="en" format="1" initial-page-number="auto-odd" force-page-count="end-on-even" hyphenation-character="-" hyphenation-push-character-count="2" hyphenation-remain-character-count="2"><fo:static-content flow-name="xsl-region-before-first"><fo:block wrap-option="no-wrap" font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" margin-left="0pc"><fo:table table-layout="fixed" width="100%" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(0)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="before" relative-align="baseline"><fo:block/></fo:table-cell><fo:table-cell text-align="center" display-align="before" relative-align="baseline"><fo:block><fo:inline keep-together.within-line="always" font-weight="bold">Chapter 8.</fo:inline></fo:block></fo:table-cell><fo:table-cell text-align="right" display-align="before" relative-align="baseline"><fo:block/></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-before-odd"><fo:block wrap-option="no-wrap" font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" margin-left="0pc"><fo:table table-layout="fixed" width="100%" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(0)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="before" relative-align="baseline"><fo:block/></fo:table-cell><fo:table-cell text-align="center" display-align="before" relative-align="baseline"><fo:block/></fo:table-cell><fo:table-cell text-align="right" display-align="before" relative-align="baseline"><fo:block><fo:inline keep-together.within-line="always"><fo:retrieve-marker retrieve-class-name="section.head.marker" retrieve-position="first-including-carryover" retrieve-boundary="page-sequence"/></fo:inline></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-before-even"><fo:block wrap-option="no-wrap" font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" margin-left="0pc"><fo:table table-layout="fixed" width="100%" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(0)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="before" relative-align="baseline"><fo:block><fo:inline keep-together.within-line="always" font-weight="bold">Chapter 8. Function library</fo:inline></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="before" relative-align="baseline"><fo:block/></fo:table-cell><fo:table-cell text-align="right" display-align="before" relative-align="baseline"><fo:block/></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-before-blank"><fo:block wrap-option="no-wrap" font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" margin-left="0pc"><fo:table table-layout="fixed" width="100%" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(0)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="before" relative-align="baseline"><fo:block/></fo:table-cell><fo:table-cell text-align="center" display-align="before" relative-align="baseline"><fo:block/></fo:table-cell><fo:table-cell text-align="right" display-align="before" relative-align="baseline"><fo:block/></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" flow-name="xsl-footnote-separator"><fo:block margin-top="2em"><fo:leader color="black" leader-pattern="rule" leader-length="1in"/></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-inner-first"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-inner-odd"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-inner-even"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-inner-blank"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-outer-first"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-outer-odd"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-outer-even"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-outer-blank"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-after-first"><fo:block font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" margin-left="0pc"><fo:table table-layout="fixed" width="100%" border-top-width="0.5pt" border-top-style="solid" border-top-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="end" display-align="after" relative-align="baseline"><fo:block><fo:block><fo:page-number/></fo:block></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-after-odd"><fo:block font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" margin-left="0pc"><fo:table table-layout="fixed" width="100%" border-top-width="0.5pt" border-top-style="solid" border-top-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="end" display-align="after" relative-align="baseline"><fo:block><fo:block><fo:page-number/></fo:block></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-after-even"><fo:block font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" margin-left="0pc"><fo:table table-layout="fixed" width="100%" border-top-width="0.5pt" border-top-style="solid" border-top-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="after" relative-align="baseline"><fo:block><fo:block><fo:page-number/></fo:block></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="end" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-after-blank"><fo:block font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" margin-left="0pc"><fo:table table-layout="fixed" width="100%" border-top-width="0.5pt" border-top-style="solid" border-top-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="after" relative-align="baseline"><fo:block><fo:block><fo:page-number/></fo:block></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="end" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:flow flow-name="xsl-region-body" start-indent="0pt" end-indent="0pt"><fo:block id="section-function-library"><fo:block font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats"><fo:block margin-left="0pc"><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" color="#336699" background-color="white" font-size="24pt" font-weight="bold" text-align="left" padding-left="1em" padding-right="1em">Function library</fo:block></fo:block></fo:block></fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
		This section defines a function library on top of JSONiq. These functions are not part of the JSONiq core, because the latter is intended to be minimal.
	</fo:block><fo:block id="idm139680687716208"><fo:block><fo:block><fo:block margin-left="0pc" font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" keep-together.within-column="always"><fo:block keep-with-next.within-column="always"><fo:block font-family="Liberation Sans,sans-serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="1.8em" space-before.optimum="2.0em" space-before.maximum="2.2em" space-after.minimum="0.1em" space-after.optimum="0.1em" space-after.maximum="0.1em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">libjn:accumulate</fo:marker><fo:block color="#336699" font-size="16pt">8.1. libjn:accumulate</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
			This function dynamically builds an object, like jn:object, except that it does not throw an error upon pair collision. Instead, it accumulates them into an array. Non-object items in the input sequence are ignored.
		</fo:block><fo:block id="idm139680687988000" text-align="start" wrap-option="wrap" hyphenation-character="\" space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="true" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" font-family="Liberation Mono,monospace" background-color="#f5f5f5" color="black" padding-left="6pt" padding-top="6pt" padding-bottom="6pt" margin-left="0pc" font-size="8pt" border-width="1pt" border-style="solid" border-color="#aaaaaa">
declare function libjn:accumulate($sequence as item()*) as object()
{
  {|
    for $key in $sequence() return { $key : $sequence($key) }
  |}
};
</fo:block></fo:block><fo:block id="idm139680685142176"><fo:block><fo:block><fo:block margin-left="0pc" font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" keep-together.within-column="always"><fo:block keep-with-next.within-column="always"><fo:block font-family="Liberation Sans,sans-serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="1.8em" space-before.optimum="2.0em" space-before.maximum="2.2em" space-after.minimum="0.1em" space-after.optimum="0.1em" space-after.maximum="0.1em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">libjn:descendant-arrays</fo:marker><fo:block color="#336699" font-size="16pt">8.2. libjn:descendant-arrays</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
			This function returns all arrays contained within the supplied items, regardless of depth.
		</fo:block><fo:block id="idm139680680312288" text-align="start" wrap-option="wrap" hyphenation-character="\" space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="true" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" font-family="Liberation Mono,monospace" background-color="#f5f5f5" color="black" padding-left="6pt" padding-top="6pt" padding-bottom="6pt" margin-left="0pc" font-size="8pt" border-width="1pt" border-style="solid" border-color="#aaaaaa">
declare function libjn:descendant-arrays($sequence as item()*) as array()*
{
  for $item in $sequence
  return typeswitch ($item)
  case array() return (
    $item,
    libjn:descendant-arrays($item())
  )
  case object() return
    libjn:descendant-arrays(libjn:values($item))
  default return ()
};
</fo:block><fo:block><fo:block id="idm139680675942672" border-left-width="3pt" border-left-style="solid" border-left-color="#aaaaaa" keep-together.within-column="" margin-left="0em" padding-left="0.8em" padding-top="0em" margin-top="1.5em" space-after.minimum="2em" space-after.optimum="2em" space-after.maximum="2em" space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em"><fo:block font-weight="normal" font-size="10pt" space-before.optimum="1em" space-before.minimum="0.5em" space-before.maximum="2em" space-after.optimum="0.1pt" space-after.minimum="0.1pt" space-after.maximum="0.1pt" color="#336699" background-color="white" hyphenate="false" keep-with-next.within-column="always">Example 8.1. Accessing all descendant arrays</fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
				Query:
			</fo:block><fo:block id="idm139680680189248" text-align="start" wrap-option="wrap" hyphenation-character="\" space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="true" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" font-family="Liberation Mono,monospace" background-color="#f5f5f5" color="black" padding-left="6pt" padding-top="6pt" padding-bottom="6pt" margin-left="0pc" font-size="8pt" border-width="1pt" border-style="solid" border-color="#aaaaaa">libjn:descendant-arrays(
  (
    { "foo" : { "bar" : [ 1, 2 ] } },
    [ [ { "foo" : "bar", "bar" : "foo" } ] ],
    true(),
    1,
    jn:null()
  )
)</fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
				Result:
			</fo:block><fo:block id="idm139680677440352" text-align="start" wrap-option="wrap" hyphenation-character="\" space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="true" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" font-family="Liberation Mono,monospace" background-color="#f5f5f5" color="black" padding-left="6pt" padding-top="6pt" padding-bottom="6pt" margin-left="0pc" font-size="8pt" border-width="1pt" border-style="solid" border-color="#aaaaaa">
[ 1, 2 ]
[ [ { "foo" : "bar", "bar" : "foo" } ] ]
[ { "foo" : "bar", "bar" : "foo" } ]
</fo:block></fo:block></fo:block></fo:block><fo:block id="idm139680679846912"><fo:block><fo:block><fo:block margin-left="0pc" font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" keep-together.within-column="always"><fo:block keep-with-next.within-column="always"><fo:block font-family="Liberation Sans,sans-serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="1.8em" space-before.optimum="2.0em" space-before.maximum="2.2em" space-after.minimum="0.1em" space-after.optimum="0.1em" space-after.maximum="0.1em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">libjn:descendant-objects</fo:marker><fo:block color="#336699" font-size="16pt">8.3. libjn:descendant-objects</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
			This function returns all objects contained within the supplied items, regardless of depth.
		</fo:block><fo:block id="idm139680688157632" text-align="start" wrap-option="wrap" hyphenation-character="\" space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="true" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" font-family="Liberation Mono,monospace" background-color="#f5f5f5" color="black" padding-left="6pt" padding-top="6pt" padding-bottom="6pt" margin-left="0pc" font-size="8pt" border-width="1pt" border-style="solid" border-color="#aaaaaa">
declare function libjn:descendant-objects($sequence as item()*) as object()*
{
  for $item in $sequence
  return typeswitch ($item)
  case object() return (
    $item,
    libjn:descendant-objects(libjn:values($item))
  )
  case array() return
    libjn:descendant-objects($item())
  default return ()
};
</fo:block><fo:block><fo:block id="idm139680678225968" border-left-width="3pt" border-left-style="solid" border-left-color="#aaaaaa" keep-together.within-column="" margin-left="0em" padding-left="0.8em" padding-top="0em" margin-top="1.5em" space-after.minimum="2em" space-after.optimum="2em" space-after.maximum="2em" space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em"><fo:block font-weight="normal" font-size="10pt" space-before.optimum="1em" space-before.minimum="0.5em" space-before.maximum="2em" space-after.optimum="0.1pt" space-after.minimum="0.1pt" space-after.maximum="0.1pt" color="#336699" background-color="white" hyphenate="false" keep-with-next.within-column="always">Example 8.2. Accessing all descendant objects</fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
				Query:
			</fo:block><fo:block id="idm139680687685840" text-align="start" wrap-option="wrap" hyphenation-character="\" space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="true" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" font-family="Liberation Mono,monospace" background-color="#f5f5f5" color="black" padding-left="6pt" padding-top="6pt" padding-bottom="6pt" margin-left="0pc" font-size="8pt" border-width="1pt" border-style="solid" border-color="#aaaaaa">libjn:descendant-objects(
  (
    { "foo" : { "bar" : [ 1, 2 ] } },
    [ [ { "foo" : "bar", "bar" : "foo" } ] ],
    true(),
    1,
    jn:null()
  )
)</fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
				Result:
			</fo:block><fo:block id="idm139680677887568" text-align="start" wrap-option="wrap" hyphenation-character="\" space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="true" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" font-family="Liberation Mono,monospace" background-color="#f5f5f5" color="black" padding-left="6pt" padding-top="6pt" padding-bottom="6pt" margin-left="0pc" font-size="8pt" border-width="1pt" border-style="solid" border-color="#aaaaaa">
{ "foo" : { "bar" : [ 1, 2 ] } }
{ "bar" : [ 1, 2 ] }
{ "foo" : "bar", "bar" : "foo" }
</fo:block></fo:block></fo:block></fo:block><fo:block id="idm139680679482208"><fo:block><fo:block><fo:block margin-left="0pc" font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" keep-together.within-column="always"><fo:block keep-with-next.within-column="always"><fo:block font-family="Liberation Sans,sans-serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="1.8em" space-before.optimum="2.0em" space-before.maximum="2.2em" space-after.minimum="0.1em" space-after.optimum="0.1em" space-after.maximum="0.1em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">libjn:descendant-pairs</fo:marker><fo:block color="#336699" font-size="16pt">8.4. libjn:descendant-pairs</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
			This function returns all descendant pairs within the supplied items.
		</fo:block><fo:block id="idm139680677180400" text-align="start" wrap-option="wrap" hyphenation-character="\" space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="true" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" font-family="Liberation Mono,monospace" background-color="#f5f5f5" color="black" padding-left="6pt" padding-top="6pt" padding-bottom="6pt" margin-left="0pc" font-size="8pt" border-width="1pt" border-style="solid" border-color="#aaaaaa">
        declare function libjn:descendant-pairs($sequence as item()*)
        {
          for $item in $sequence
          return typeswitch ($item)
          case object() return
            for $key in jn:keys($item)
            let $value := $item($key)
            return (
              { $key : $value },
              libjn:descendant-pairs($value)
            )
          case array() return
            libjn:descendant-pairs($item())
          default return ()
        };
</fo:block><fo:block><fo:block id="idm139680686450512" border-left-width="3pt" border-left-style="solid" border-left-color="#aaaaaa" keep-together.within-column="" margin-left="0em" padding-left="0.8em" padding-top="0em" margin-top="1.5em" space-after.minimum="2em" space-after.optimum="2em" space-after.maximum="2em" space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em"><fo:block font-weight="normal" font-size="10pt" space-before.optimum="1em" space-before.minimum="0.5em" space-before.maximum="2em" space-after.optimum="0.1pt" space-after.minimum="0.1pt" space-after.maximum="0.1pt" color="#336699" background-color="white" hyphenate="false" keep-with-next.within-column="always">Example 8.3. Accessing all descendant pairs</fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
				Query:
			</fo:block><fo:block id="idm139680677997536" text-align="start" wrap-option="wrap" hyphenation-character="\" space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="true" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" font-family="Liberation Mono,monospace" background-color="#f5f5f5" color="black" padding-left="6pt" padding-top="6pt" padding-bottom="6pt" margin-left="0pc" font-size="8pt" border-width="1pt" border-style="solid" border-color="#aaaaaa">libjn:descendant-pairs(
  (
    { "foo" : { "bar" : [ 1, 2 ] } },
    [ [ { "foo" : "bar", "bar" : "foo" } ] ],
    true(),
    1,
    jn:null()
  )
)</fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
				Result:
			</fo:block><fo:block id="idm139680685220048" text-align="start" wrap-option="wrap" hyphenation-character="\" space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="true" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" font-family="Liberation Mono,monospace" background-color="#f5f5f5" color="black" padding-left="6pt" padding-top="6pt" padding-bottom="6pt" margin-left="0pc" font-size="8pt" border-width="1pt" border-style="solid" border-color="#aaaaaa">
{ "foo" : { "bar" : [ 1, 2 ] } }
{ "bar" : [ 1, 2 ] }
{ "foo" : "bar" }
{ "bar" : "foo" }
</fo:block></fo:block></fo:block><fo:block><fo:block id="idm139680685219440" border-left-width="3pt" border-left-style="solid" border-left-color="#aaaaaa" keep-together.within-column="" margin-left="0em" padding-left="0.8em" padding-top="0em" margin-top="1.5em" space-after.minimum="2em" space-after.optimum="2em" space-after.maximum="2em" space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em"><fo:block font-weight="normal" font-size="10pt" space-before.optimum="1em" space-before.minimum="0.5em" space-before.maximum="2em" space-after.optimum="0.1pt" space-after.minimum="0.1pt" space-after.maximum="0.1pt" color="#336699" background-color="white" hyphenate="false" keep-with-next.within-column="always">Example 8.4. Query all pairs with a given name.</fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
				Query:
			</fo:block><fo:block id="idm139680685218192" text-align="start" wrap-option="wrap" hyphenation-character="\" space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="true" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" font-family="Liberation Mono,monospace" background-color="#f5f5f5" color="black" padding-left="6pt" padding-top="6pt" padding-bottom="6pt" margin-left="0pc" font-size="8pt" border-width="1pt" border-style="solid" border-color="#aaaaaa">libjn:descendant-pairs({
  "first" : 1,
  "second" : { 
    "first" : "a", 
    "second" : "b" 
  }
})("first")</fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
				Result:
			</fo:block><fo:block id="idm139680685217136" text-align="start" wrap-option="wrap" hyphenation-character="\" space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="true" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" font-family="Liberation Mono,monospace" background-color="#f5f5f5" color="black" padding-left="6pt" padding-top="6pt" padding-bottom="6pt" margin-left="0pc" font-size="8pt" border-width="1pt" border-style="solid" border-color="#aaaaaa">
        1 a
</fo:block></fo:block></fo:block></fo:block><fo:block id="idm139680678064352"><fo:block><fo:block><fo:block margin-left="0pc" font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" keep-together.within-column="always"><fo:block keep-with-next.within-column="always"><fo:block font-family="Liberation Sans,sans-serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="1.8em" space-before.optimum="2.0em" space-before.maximum="2.2em" space-after.minimum="0.1em" space-after.optimum="0.1em" space-after.maximum="0.1em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">libjn:flatten</fo:marker><fo:block color="#336699" font-size="16pt">8.5. libjn:flatten</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
			This function recursively "flattens" the supplied (top-level) arrays, leaving non-arrays unchanged.
		</fo:block><fo:block id="idm139680678062976" text-align="start" wrap-option="wrap" hyphenation-character="\" space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="true" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" font-family="Liberation Mono,monospace" background-color="#f5f5f5" color="black" padding-left="6pt" padding-top="6pt" padding-bottom="6pt" margin-left="0pc" font-size="8pt" border-width="1pt" border-style="solid" border-color="#aaaaaa">
declare function libjn:flatten($sequence as item()*) as item()*
{
  for $item in $sequence
  return
    typeswitch ($item)
    case array() return libjn:flatten($item())
    default return $item
};
</fo:block><fo:block><fo:block id="idm139680678062320" border-left-width="3pt" border-left-style="solid" border-left-color="#aaaaaa" keep-together.within-column="" margin-left="0em" padding-left="0.8em" padding-top="0em" margin-top="1.5em" space-after.minimum="2em" space-after.optimum="2em" space-after.maximum="2em" space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em"><fo:block font-weight="normal" font-size="10pt" space-before.optimum="1em" space-before.minimum="0.5em" space-before.maximum="2em" space-after.optimum="0.1pt" space-after.minimum="0.1pt" space-after.maximum="0.1pt" color="#336699" background-color="white" hyphenate="false" keep-with-next.within-column="always">Example 8.5. Flattening arrays.</fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
				Query:
			</fo:block><fo:block id="idm139680678061040" text-align="start" wrap-option="wrap" hyphenation-character="\" space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="true" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" font-family="Liberation Mono,monospace" background-color="#f5f5f5" color="black" padding-left="6pt" padding-top="6pt" padding-bottom="6pt" margin-left="0pc" font-size="8pt" border-width="1pt" border-style="solid" border-color="#aaaaaa">libjn:flatten(
  (
    { "foo" : { "bar" : [ 1, 2 ] } },
    [ 1, 2, [ { "foo" : "bar", "bar" : "foo" } ], 3, 4 ],
    true(),
    1,
    jn:null()
  )
)
</fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
				Result:
			</fo:block><fo:block id="idm139680678059936" text-align="start" wrap-option="wrap" hyphenation-character="\" space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="true" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" font-family="Liberation Mono,monospace" background-color="#f5f5f5" color="black" padding-left="6pt" padding-top="6pt" padding-bottom="6pt" margin-left="0pc" font-size="8pt" border-width="1pt" border-style="solid" border-color="#aaaaaa">
{ "foo" : { "bar" : [ 1, 2 ] } } 1 2 { "foo" : "bar", "bar" : "foo" } 3 4 true 1 null
</fo:block></fo:block></fo:block></fo:block><fo:block id="idm139680678059168"><fo:block><fo:block><fo:block margin-left="0pc" font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" keep-together.within-column="always"><fo:block keep-with-next.within-column="always"><fo:block font-family="Liberation Sans,sans-serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="1.8em" space-before.optimum="2.0em" space-before.maximum="2.2em" space-after.minimum="0.1em" space-after.optimum="0.1em" space-after.maximum="0.1em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">libjn:intersect</fo:marker><fo:block color="#336699" font-size="16pt">8.6. libjn:intersect</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
			This function returns an object that only contains keys shared by all input objects, and associates to each of these keys the corresponding values in the input objects (wrapped in an array if more than one). Non-objects are ignored.
		</fo:block><fo:block id="idm139680678057664" text-align="start" wrap-option="wrap" hyphenation-character="\" space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="true" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" font-family="Liberation Mono,monospace" background-color="#f5f5f5" color="black" padding-left="6pt" padding-top="6pt" padding-bottom="6pt" margin-left="0pc" font-size="8pt" border-width="1pt" border-style="solid" border-color="#aaaaaa">
declare function libjn:intersect($sequence as item()*) as object()
{
  {|
    let $objects := $sequence[. instance of object()]
    for $key in head($objects)()
    where every $object in tail($objects)
          satisfies exists(index-of($object(), $key))
    return { $key : $objects($key) }
  |}
};
</fo:block><fo:block><fo:block id="idm139680685273728" border-left-width="3pt" border-left-style="solid" border-left-color="#aaaaaa" keep-together.within-column="" margin-left="0em" padding-left="0.8em" padding-top="0em" margin-top="1.5em" space-after.minimum="2em" space-after.optimum="2em" space-after.maximum="2em" space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em"><fo:block font-weight="normal" font-size="10pt" space-before.optimum="1em" space-before.minimum="0.5em" space-before.maximum="2em" space-after.optimum="0.1pt" space-after.minimum="0.1pt" space-after.maximum="0.1pt" color="#336699" background-color="white" hyphenate="false" keep-with-next.within-column="always">Example 8.6. Intersecting objects.</fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
				Query:
			</fo:block><fo:block id="idm139680685272448" text-align="start" wrap-option="wrap" hyphenation-character="\" space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="true" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" font-family="Liberation Mono,monospace" background-color="#f5f5f5" color="black" padding-left="6pt" padding-top="6pt" padding-bottom="6pt" margin-left="0pc" font-size="8pt" border-width="1pt" border-style="solid" border-color="#aaaaaa">libjn:intersect(
  (
    { "foo" : { "bar" : [ 1, 2 ] } },
    [ 1, 2, 3, 4 ],
    { "foo" : "bar", "bar" : "foo" }
    true(),
    1,
    jn:null()
  )
)
</fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
				Result:
			</fo:block><fo:block id="idm139680685271344" text-align="start" wrap-option="wrap" hyphenation-character="\" space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="true" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" font-family="Liberation Mono,monospace" background-color="#f5f5f5" color="black" padding-left="6pt" padding-top="6pt" padding-bottom="6pt" margin-left="0pc" font-size="8pt" border-width="1pt" border-style="solid" border-color="#aaaaaa">
{ "foo" : [ { "bar" : [ 1, 2 ] }, "bar" ] }
</fo:block></fo:block></fo:block></fo:block><fo:block id="idm139680685270576"><fo:block><fo:block><fo:block margin-left="0pc" font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" keep-together.within-column="always"><fo:block keep-with-next.within-column="always"><fo:block font-family="Liberation Sans,sans-serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="1.8em" space-before.optimum="2.0em" space-before.maximum="2.2em" space-after.minimum="0.1em" space-after.optimum="0.1em" space-after.maximum="0.1em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">libjn:project</fo:marker><fo:block color="#336699" font-size="16pt">8.7. libjn:project</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
			This function iterates on the input sequence. It projects objects by filtering their pairs and leaves non-objects intact.
		</fo:block><fo:block id="idm139680685269184" text-align="start" wrap-option="wrap" hyphenation-character="\" space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="true" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" font-family="Liberation Mono,monospace" background-color="#f5f5f5" color="black" padding-left="6pt" padding-top="6pt" padding-bottom="6pt" margin-left="0pc" font-size="8pt" border-width="1pt" border-style="solid" border-color="#aaaaaa">
declare function libjn:project($sequence as item()*, $keys as xs:string*) as item()*
{
  for $item in $sequence
  return typeswitch ($item)
         case $object as object() return
         {|
           for $key in $object()[ . = $keys ]
           return { $key : $object($key) }
         |}
         default return $item
};
</fo:block><fo:block><fo:block id="idm139680685268384" border-left-width="3pt" border-left-style="solid" border-left-color="#aaaaaa" keep-together.within-column="" margin-left="0em" padding-left="0.8em" padding-top="0em" margin-top="1.5em" space-after.minimum="2em" space-after.optimum="2em" space-after.maximum="2em" space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em"><fo:block font-weight="normal" font-size="10pt" space-before.optimum="1em" space-before.minimum="0.5em" space-before.maximum="2em" space-after.optimum="0.1pt" space-after.minimum="0.1pt" space-after.maximum="0.1pt" color="#336699" background-color="white" hyphenate="false" keep-with-next.within-column="always">Example 8.7. Projecting objects.</fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
				Query:
			</fo:block><fo:block id="idm139680685267104" text-align="start" wrap-option="wrap" hyphenation-character="\" space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="true" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" font-family="Liberation Mono,monospace" background-color="#f5f5f5" color="black" padding-left="6pt" padding-top="6pt" padding-bottom="6pt" margin-left="0pc" font-size="8pt" border-width="1pt" border-style="solid" border-color="#aaaaaa">libjn:project(
  (
    {
      "Captain" : "Kirk",
      "First Officer" : "Spock",
      "Engineer" : "Scott"
    },
    [ 1, 2, 3, 4 ]
    {
      "Captain" : "Archer",
      "Engineer" : "Trip",
    },
    true(),
    1,
    jn:null()
  ),
  ("Captain", "First Officer", "XQuery Evangelist")
)
</fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
				Result:
			</fo:block><fo:block id="idm139680677722144" text-align="start" wrap-option="wrap" hyphenation-character="\" space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="true" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" font-family="Liberation Mono,monospace" background-color="#f5f5f5" color="black" padding-left="6pt" padding-top="6pt" padding-bottom="6pt" margin-left="0pc" font-size="8pt" border-width="1pt" border-style="solid" border-color="#aaaaaa">
{ "Captain" : "Kirk", "First Officer" : "Spock" }
[ 1, 2, 3, 4 ] { "Captain" : "Archer" } true 1 null
</fo:block></fo:block></fo:block></fo:block><fo:block id="idm139680677721376"><fo:block><fo:block><fo:block margin-left="0pc" font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" keep-together.within-column="always"><fo:block keep-with-next.within-column="always"><fo:block font-family="Liberation Sans,sans-serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="1.8em" space-before.optimum="2.0em" space-before.maximum="2.2em" space-after.minimum="0.1em" space-after.optimum="0.1em" space-after.maximum="0.1em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">libjn:remove-keys</fo:marker><fo:block color="#336699" font-size="16pt">8.8. libjn:remove-keys</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
			This function iterates on the input sequence. It removes the pairs with the given keys from all objects and leaves non-objects intact.
		</fo:block><fo:block id="idm139680677719968" text-align="start" wrap-option="wrap" hyphenation-character="\" space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="true" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" font-family="Liberation Mono,monospace" background-color="#f5f5f5" color="black" padding-left="6pt" padding-top="6pt" padding-bottom="6pt" margin-left="0pc" font-size="8pt" border-width="1pt" border-style="solid" border-color="#aaaaaa">
declare function libjn:remove-keys($sequence as item()*, $keys as xs:string*) as item()*
{
  for $item in $sequence
  return typeswitch ($item)
         case $object as object() return
         {|
           for $key in $object() [ not (. = $keys) ]
           return { $key : $object($key) }
         |}
         default return $item
};
</fo:block><fo:block><fo:block id="idm139680677719168" border-left-width="3pt" border-left-style="solid" border-left-color="#aaaaaa" keep-together.within-column="" margin-left="0em" padding-left="0.8em" padding-top="0em" margin-top="1.5em" space-after.minimum="2em" space-after.optimum="2em" space-after.maximum="2em" space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em"><fo:block font-weight="normal" font-size="10pt" space-before.optimum="1em" space-before.minimum="0.5em" space-before.maximum="2em" space-after.optimum="0.1pt" space-after.minimum="0.1pt" space-after.maximum="0.1pt" color="#336699" background-color="white" hyphenate="false" keep-with-next.within-column="always">Example 8.8. Projecting objects.</fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
				Query:
			</fo:block><fo:block id="idm139680677717888" text-align="start" wrap-option="wrap" hyphenation-character="\" space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="true" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" font-family="Liberation Mono,monospace" background-color="#f5f5f5" color="black" padding-left="6pt" padding-top="6pt" padding-bottom="6pt" margin-left="0pc" font-size="8pt" border-width="1pt" border-style="solid" border-color="#aaaaaa">libjn:remove-keys(
  (
    {
      "Captain" : "Kirk",
      "First Officer" : "Spock",
      "Engineer" : "Scott"
    },
    [ 1, 2, 3, 4 ]
    {
      "Captain" : "Archer",
      "Engineer" : "Trip",
    },
    true(),
    1,
    jn:null()
  ),
  ("Captain", "First Officer", "XQuery Evangelist")
)
</fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
				Result:
			</fo:block><fo:block id="idm139680677716640" text-align="start" wrap-option="wrap" hyphenation-character="\" space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="true" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" font-family="Liberation Mono,monospace" background-color="#f5f5f5" color="black" padding-left="6pt" padding-top="6pt" padding-bottom="6pt" margin-left="0pc" font-size="8pt" border-width="1pt" border-style="solid" border-color="#aaaaaa">
{ "Engineer" : "Scott" } [ 1, 2, 3, 4 ] { "Engineer" : "Trip" } true 1 null
</fo:block></fo:block></fo:block></fo:block><fo:block id="idm139680677715872"><fo:block><fo:block><fo:block margin-left="0pc" font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" keep-together.within-column="always"><fo:block keep-with-next.within-column="always"><fo:block font-family="Liberation Sans,sans-serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="1.8em" space-before.optimum="2.0em" space-before.maximum="2.2em" space-after.minimum="0.1em" space-after.optimum="0.1em" space-after.maximum="0.1em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">libjn:values</fo:marker><fo:block color="#336699" font-size="16pt">8.9. libjn:values</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
			This function returns all values in the supplied objects. Non-objects are ignored.
		</fo:block><fo:block id="idm139680677714624" text-align="start" wrap-option="wrap" hyphenation-character="\" space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="true" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" font-family="Liberation Mono,monospace" background-color="#f5f5f5" color="black" padding-left="6pt" padding-top="6pt" padding-bottom="6pt" margin-left="0pc" font-size="8pt" border-width="1pt" border-style="solid" border-color="#aaaaaa">
        declare function libjn:values($sequence as item()*) as item()* {
          for $item in $sequence
          return $item() ! $item(.)
        };
</fo:block><fo:block><fo:block id="idm139680677827376" border-left-width="3pt" border-left-style="solid" border-left-color="#aaaaaa" keep-together.within-column="" margin-left="0em" padding-left="0.8em" padding-top="0em" margin-top="1.5em" space-after.minimum="2em" space-after.optimum="2em" space-after.maximum="2em" space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em"><fo:block font-weight="normal" font-size="10pt" space-before.optimum="1em" space-before.minimum="0.5em" space-before.maximum="2em" space-after.optimum="0.1pt" space-after.minimum="0.1pt" space-after.maximum="0.1pt" color="#336699" background-color="white" hyphenate="false" keep-with-next.within-column="always">Example 8.9. Extracting all values from objects.</fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
				Query:
			</fo:block><fo:block id="idm139680677826128" text-align="start" wrap-option="wrap" hyphenation-character="\" space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="true" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" font-family="Liberation Mono,monospace" background-color="#f5f5f5" color="black" padding-left="6pt" padding-top="6pt" padding-bottom="6pt" margin-left="0pc" font-size="8pt" border-width="1pt" border-style="solid" border-color="#aaaaaa">libjn:values(
  (
    {
      "Captain" : "Kirk",
      "First Officer" : "Spock",
      "Engineer" : "Scott"
    },
    [ 1, 2, 3, 4 ]
    {
      "Captain" : "Archer",
      "Engineer" : "Trip",
    },
    true(),
    1,
    jn:null()
  )
)
</fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
				Result:
			</fo:block><fo:block id="idm139680677824944" text-align="start" wrap-option="wrap" hyphenation-character="\" space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="true" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" font-family="Liberation Mono,monospace" background-color="#f5f5f5" color="black" padding-left="6pt" padding-top="6pt" padding-bottom="6pt" margin-left="0pc" font-size="8pt" border-width="1pt" border-style="solid" border-color="#aaaaaa">
Kirk Spock Scott Archer Trip
</fo:block></fo:block></fo:block></fo:block></fo:flow></fo:page-sequence><fo:page-sequence xmlns:axf="http://www.antennahouse.com/names/XSL/Extensions" hyphenate="true" master-reference="body" language="en" format="1" initial-page-number="auto-odd" force-page-count="end-on-even" hyphenation-character="-" hyphenation-push-character-count="2" hyphenation-remain-character-count="2"><fo:static-content flow-name="xsl-region-before-first"><fo:block wrap-option="no-wrap" font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" margin-left="0pc"><fo:table table-layout="fixed" width="100%" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(0)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="before" relative-align="baseline"><fo:block/></fo:table-cell><fo:table-cell text-align="center" display-align="before" relative-align="baseline"><fo:block><fo:inline keep-together.within-line="always" font-weight="bold">Chapter 9.</fo:inline></fo:block></fo:table-cell><fo:table-cell text-align="right" display-align="before" relative-align="baseline"><fo:block/></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-before-odd"><fo:block wrap-option="no-wrap" font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" margin-left="0pc"><fo:table table-layout="fixed" width="100%" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(0)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="before" relative-align="baseline"><fo:block/></fo:table-cell><fo:table-cell text-align="center" display-align="before" relative-align="baseline"><fo:block/></fo:table-cell><fo:table-cell text-align="right" display-align="before" relative-align="baseline"><fo:block><fo:inline keep-together.within-line="always"><fo:retrieve-marker retrieve-class-name="section.head.marker" retrieve-position="first-including-carryover" retrieve-boundary="page-sequence"/></fo:inline></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-before-even"><fo:block wrap-option="no-wrap" font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" margin-left="0pc"><fo:table table-layout="fixed" width="100%" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(0)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="before" relative-align="baseline"><fo:block><fo:inline keep-together.within-line="always" font-weight="bold">Chapter 9. Combining XML and JSON</fo:inline></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="before" relative-align="baseline"><fo:block/></fo:table-cell><fo:table-cell text-align="right" display-align="before" relative-align="baseline"><fo:block/></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-before-blank"><fo:block wrap-option="no-wrap" font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" margin-left="0pc"><fo:table table-layout="fixed" width="100%" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(0)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="before" relative-align="baseline"><fo:block/></fo:table-cell><fo:table-cell text-align="center" display-align="before" relative-align="baseline"><fo:block/></fo:table-cell><fo:table-cell text-align="right" display-align="before" relative-align="baseline"><fo:block/></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" flow-name="xsl-footnote-separator"><fo:block margin-top="2em"><fo:leader color="black" leader-pattern="rule" leader-length="1in"/></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-inner-first"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-inner-odd"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-inner-even"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-inner-blank"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-outer-first"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-outer-odd"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-outer-even"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-outer-blank"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-after-first"><fo:block font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" margin-left="0pc"><fo:table table-layout="fixed" width="100%" border-top-width="0.5pt" border-top-style="solid" border-top-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="end" display-align="after" relative-align="baseline"><fo:block><fo:block><fo:page-number/></fo:block></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-after-odd"><fo:block font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" margin-left="0pc"><fo:table table-layout="fixed" width="100%" border-top-width="0.5pt" border-top-style="solid" border-top-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="end" display-align="after" relative-align="baseline"><fo:block><fo:block><fo:page-number/></fo:block></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-after-even"><fo:block font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" margin-left="0pc"><fo:table table-layout="fixed" width="100%" border-top-width="0.5pt" border-top-style="solid" border-top-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="after" relative-align="baseline"><fo:block><fo:block><fo:page-number/></fo:block></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="end" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-after-blank"><fo:block font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" margin-left="0pc"><fo:table table-layout="fixed" width="100%" border-top-width="0.5pt" border-top-style="solid" border-top-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="after" relative-align="baseline"><fo:block><fo:block><fo:page-number/></fo:block></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="end" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:flow flow-name="xsl-region-body" start-indent="0pt" end-indent="0pt"><fo:block id="section-combining-xml-and-json"><fo:block font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats"><fo:block margin-left="0pc"><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" color="#336699" background-color="white" font-size="24pt" font-weight="bold" text-align="left" padding-left="1em" padding-right="1em">Combining XML and JSON</fo:block></fo:block></fo:block></fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
		JSONiq is designed to allow XML and JSON to be used in the same query.
	</fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
		The syntax of JSONiq allows JSON constructors to contain XML values, and allows JSON constructors to occur in XML constructors. JSON does not support XML nodes or types, and XML does not support Objects or Arrays, but JSONiq allows Objects and Arrays to contain XML nodes, and defines rules for using JSONiq nodes in XML content expressions.
	</fo:block><fo:block><fo:block id="idm139680678705440" border-left-width="3pt" border-left-style="solid" border-left-color="#aaaaaa" keep-together.within-column="" margin-left="0em" padding-left="0.8em" padding-top="0em" margin-top="1.5em" space-after.minimum="2em" space-after.optimum="2em" space-after.maximum="2em" space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em"><fo:block font-weight="normal" font-size="10pt" space-before.optimum="1em" space-before.minimum="0.5em" space-before.maximum="2em" space-after.optimum="0.1pt" space-after.minimum="0.1pt" space-after.maximum="0.1pt" color="#336699" background-color="white" hyphenate="false" keep-with-next.within-column="always">Example 9.1. XML in JSON</fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
			Both XML nodes and atomic values may occur in the values of Objects.
		</fo:block><fo:block id="idm139680677942960" text-align="start" wrap-option="wrap" hyphenation-character="\" space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="true" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" font-family="Liberation Mono,monospace" background-color="#f5f5f5" color="black" padding-left="6pt" padding-top="6pt" padding-bottom="6pt" margin-left="0pc" font-size="8pt" border-width="1pt" border-style="solid" border-color="#aaaaaa">
        {
          "element" : &lt;mercury&gt;Hg&lt;/mercury&gt;
,
          "atomic value" : xs:date("1896-01-24")
          "several dates" : [ xs:date("1066-10-14"), xs:date("1935-01-11"), xs:date("1989-11-09") ]
        }
</fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
			XML nodes and atomic values may also appear in Arrays.
		</fo:block><fo:block id="idm139680687684304" text-align="start" wrap-option="wrap" hyphenation-character="\" space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="true" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" font-family="Liberation Mono,monospace" background-color="#f5f5f5" color="black" padding-left="6pt" padding-top="6pt" padding-bottom="6pt" margin-left="0pc" font-size="8pt" border-width="1pt" border-style="solid" border-color="#aaaaaa">[ xs:date("1066-10-14"), &lt;mercury&gt;Hg&lt;/mercury&gt;
, "ice cream" ]</fo:block></fo:block></fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
		JSONiq does not allow XML nodes to contain Objects and Arrays. If an XQuery element content sequence, the value of the enclosed expression of an attribute, or the value of the content expression of a computed constructor contains an Object or Array, an error <fo:inline font-weight="bold" font-family="Liberation Mono,monospace">jerr:JNTY0011</fo:inline> is raised.
	</fo:block><fo:block><fo:block id="idm139680680224160" border-left-width="3pt" border-left-style="solid" border-left-color="#aaaaaa" keep-together.within-column="" margin-left="0em" padding-left="0.8em" padding-top="0em" margin-top="1.5em" space-after.minimum="2em" space-after.optimum="2em" space-after.maximum="2em" space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em"><fo:block font-weight="normal" font-size="10pt" space-before.optimum="1em" space-before.minimum="0.5em" space-before.maximum="2em" space-after.optimum="0.1pt" space-after.minimum="0.1pt" space-after.maximum="0.1pt" color="#336699" background-color="white" hyphenate="false" keep-with-next.within-column="always">Example 9.2. Objects in XML Constructors</fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
			Objects can be indirectly used in the content expression of any XQuery constructor.
		</fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
			Query:
		</fo:block><fo:block id="idm139680678019872" text-align="start" wrap-option="wrap" hyphenation-character="\" space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="true" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" font-family="Liberation Mono,monospace" background-color="#f5f5f5" color="black" padding-left="6pt" padding-top="6pt" padding-bottom="6pt" margin-left="0pc" font-size="8pt" border-width="1pt" border-style="solid" border-color="#aaaaaa">
        let $object := { "x" : 10, "y" : 12 }
        let $x := $object("x")
        return &lt;x&gt;{ $x }&lt;/x&gt;

</fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
			An Array can also be used in the content expression.<fo:footnote><fo:inline><fo:inline font-size="66.66%" font-weight="normal" font-style="normal" margin-left="0.25em" font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" baseline-shift="super">1</fo:inline></fo:inline><fo:footnote-body padding-top="48pt" font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" font-size="8pt" color="black" font-weight="normal" font-style="normal" text-align="left" start-indent="0pt" end-indent="0pt" text-indent="0pt" hyphenate="true" wrap-option="wrap" linefeed-treatment="treat-as-space"><fo:block><fo:inline font-size="66.66%" font-weight="normal" font-style="normal" margin-left="0.25em" font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" baseline-shift="super">1</fo:inline>
				The data in this example is taken from an example on Stefan Goessner's JSONT site (<fo:basic-link external-destination="url(http://goessner.net/articles/jsont/)" font-style="italic" color="#0066cc"><fo:inline hyphenate="false">http://goessner.net/articles/jsont/</fo:inline></fo:basic-link>).
			</fo:block></fo:footnote-body></fo:footnote>:
		</fo:block><fo:block id="idm139680675893216" text-align="start" wrap-option="wrap" hyphenation-character="\" space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="true" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" font-family="Liberation Mono,monospace" background-color="#f5f5f5" color="black" padding-left="6pt" padding-top="6pt" padding-bottom="6pt" margin-left="0pc" font-size="8pt" border-width="1pt" border-style="solid" border-color="#aaaaaa">
        &lt;svg&gt;&lt;polygon stroke="blue" points="(jnlib:flatten([ [10,10], [20,10], [20,20], [10,20] ])}" /&gt;&lt;/svg&gt;

</fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
			Here is the result of the above query:
		</fo:block><fo:block id="idm139680677253632" text-align="start" wrap-option="wrap" hyphenation-character="\" space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="true" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" font-family="Liberation Mono,monospace" background-color="#f5f5f5" color="black" padding-left="6pt" padding-top="6pt" padding-bottom="6pt" margin-left="0pc" font-size="8pt" border-width="1pt" border-style="solid" border-color="#aaaaaa">&lt;svg&gt;&lt;polygon stroke="blue" points="10 10 20 10 20 20 10 20" /&gt;&lt;/svg&gt;
</fo:block></fo:block></fo:block></fo:flow></fo:page-sequence><fo:page-sequence xmlns:axf="http://www.antennahouse.com/names/XSL/Extensions" hyphenate="true" master-reference="body" language="en" format="1" initial-page-number="auto-odd" force-page-count="end-on-even" hyphenation-character="-" hyphenation-push-character-count="2" hyphenation-remain-character-count="2"><fo:static-content flow-name="xsl-region-before-first"><fo:block wrap-option="no-wrap" font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" margin-left="0pc"><fo:table table-layout="fixed" width="100%" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(0)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="before" relative-align="baseline"><fo:block/></fo:table-cell><fo:table-cell text-align="center" display-align="before" relative-align="baseline"><fo:block><fo:inline keep-together.within-line="always" font-weight="bold">Chapter 10.</fo:inline></fo:block></fo:table-cell><fo:table-cell text-align="right" display-align="before" relative-align="baseline"><fo:block/></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-before-odd"><fo:block wrap-option="no-wrap" font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" margin-left="0pc"><fo:table table-layout="fixed" width="100%" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(0)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="before" relative-align="baseline"><fo:block/></fo:table-cell><fo:table-cell text-align="center" display-align="before" relative-align="baseline"><fo:block/></fo:table-cell><fo:table-cell text-align="right" display-align="before" relative-align="baseline"><fo:block><fo:inline keep-together.within-line="always"><fo:retrieve-marker retrieve-class-name="section.head.marker" retrieve-position="first-including-carryover" retrieve-boundary="page-sequence"/></fo:inline></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-before-even"><fo:block wrap-option="no-wrap" font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" margin-left="0pc"><fo:table table-layout="fixed" width="100%" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(0)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="before" relative-align="baseline"><fo:block><fo:inline keep-together.within-line="always" font-weight="bold">Chapter 10. JSON Serialization</fo:inline></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="before" relative-align="baseline"><fo:block/></fo:table-cell><fo:table-cell text-align="right" display-align="before" relative-align="baseline"><fo:block/></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-before-blank"><fo:block wrap-option="no-wrap" font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" margin-left="0pc"><fo:table table-layout="fixed" width="100%" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(0)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="before" relative-align="baseline"><fo:block/></fo:table-cell><fo:table-cell text-align="center" display-align="before" relative-align="baseline"><fo:block/></fo:table-cell><fo:table-cell text-align="right" display-align="before" relative-align="baseline"><fo:block/></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" flow-name="xsl-footnote-separator"><fo:block margin-top="2em"><fo:leader color="black" leader-pattern="rule" leader-length="1in"/></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-inner-first"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-inner-odd"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-inner-even"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-inner-blank"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-outer-first"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-outer-odd"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-outer-even"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-outer-blank"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-after-first"><fo:block font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" margin-left="0pc"><fo:table table-layout="fixed" width="100%" border-top-width="0.5pt" border-top-style="solid" border-top-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="end" display-align="after" relative-align="baseline"><fo:block><fo:block><fo:page-number/></fo:block></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-after-odd"><fo:block font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" margin-left="0pc"><fo:table table-layout="fixed" width="100%" border-top-width="0.5pt" border-top-style="solid" border-top-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="end" display-align="after" relative-align="baseline"><fo:block><fo:block><fo:page-number/></fo:block></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-after-even"><fo:block font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" margin-left="0pc"><fo:table table-layout="fixed" width="100%" border-top-width="0.5pt" border-top-style="solid" border-top-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="after" relative-align="baseline"><fo:block><fo:block><fo:page-number/></fo:block></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="end" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-after-blank"><fo:block font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" margin-left="0pc"><fo:table table-layout="fixed" width="100%" border-top-width="0.5pt" border-top-style="solid" border-top-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="after" relative-align="baseline"><fo:block><fo:block><fo:page-number/></fo:block></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="end" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:flow flow-name="xsl-region-body" start-indent="0pt" end-indent="0pt"><fo:block id="section-json-serialization"><fo:block font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats"><fo:block margin-left="0pc"><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" color="#336699" background-color="white" font-size="24pt" font-weight="bold" text-align="left" padding-left="1em" padding-right="1em">JSON Serialization</fo:block></fo:block></fo:block></fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
		JSONiq defines two new output methods: "JSON" and "JSON-XML-hybrid". The JSON output method outputs guaranteed JSON (application/json) with the small exception that it may also output a sequence of objects and arrays (as seems to be standard practice, for example, in REST APIs). The JSON-XML-hybrid method allows serializing mixed sequences of JSON items and XML nodes for convenience. The JSON-XML-hybrid method is the default output method.
	</fo:block><fo:block id="idm139680677771840"><fo:block><fo:block><fo:block margin-left="0pc" font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" keep-together.within-column="always"><fo:block keep-with-next.within-column="always"><fo:block font-family="Liberation Sans,sans-serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="1.8em" space-before.optimum="2.0em" space-before.maximum="2.2em" space-after.minimum="0.1em" space-after.optimum="0.1em" space-after.maximum="0.1em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">New serialization parameters</fo:marker><fo:block color="#336699" font-size="16pt">10.1. New serialization parameters</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
			One new serialization parameter is introduced:
		</fo:block><fo:list-block id="idm139680686020448" space-before.optimum="0.1pt" space-before.minimum="0.1pt" space-before.maximum="0.1pt" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em" provisional-label-separation="0.2em" provisional-distance-between-starts="1.0em"><fo:list-item id="idm139680677510096" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em">
					<fo:inline font-weight="bold" font-family="Liberation Mono,monospace">jsoniq-multiple-top-level-items</fo:inline> (one of: "yes", "no"):
				</fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
					Specifies if multiple items are allowed. Default is "yes".
				</fo:block></fo:block></fo:list-item-body></fo:list-item></fo:list-block></fo:block><fo:block id="idm139680678071312"><fo:block><fo:block><fo:block margin-left="0pc" font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" keep-together.within-column="always"><fo:block keep-with-next.within-column="always"><fo:block font-family="Liberation Sans,sans-serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="1.8em" space-before.optimum="2.0em" space-before.maximum="2.2em" space-after.minimum="0.1em" space-after.optimum="0.1em" space-after.maximum="0.1em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Changes to sequence normalization</fo:marker><fo:block color="#336699" font-size="16pt">10.2. Changes to sequence normalization</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
			The XQuery and XSLT serialization specification performs sequence normalization before serializing an XDM instance. The result is a sequence of exactly one document node.
		</fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
			JSONiq extends sequence normalization as follows:
		</fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
			The final step of building a document node with all items as its children is only done for adjacent XML nodes. JSON objects and arrays in the input sequence are left untouched.
		</fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
			This means that the final result of sequence normalization will be a sequence of objects, arrays and document nodes.
		</fo:block></fo:block><fo:block id="idm139680688813360"><fo:block><fo:block><fo:block margin-left="0pc" font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" keep-together.within-column="always"><fo:block keep-with-next.within-column="always"><fo:block font-family="Liberation Sans,sans-serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="1.8em" space-before.optimum="2.0em" space-before.maximum="2.2em" space-after.minimum="0.1em" space-after.optimum="0.1em" space-after.maximum="0.1em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">The JSON output method</fo:marker><fo:block color="#336699" font-size="16pt">10.3. The JSON output method</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block id="idm139680685835888"><fo:block><fo:block><fo:block margin-left="0pc" font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" keep-together.within-column="always"><fo:block keep-with-next.within-column="always"><fo:block font-family="Liberation Sans,sans-serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="1.8em" space-before.optimum="2.0em" space-before.maximum="2.2em" space-after.minimum="0.1em" space-after.optimum="0.1em" space-after.maximum="0.1em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Serialization of a sequence of items</fo:marker><fo:block color="#336699" font-size="14pt">10.3.1. Serialization of a sequence of items</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
				If the normalized sequence does not consist exclusively of JSON arrays and objects, an error <fo:inline font-weight="bold" font-family="Liberation Mono,monospace">jerr:JNSE0014</fo:inline> is raised.
			</fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
				If jsoniq-multiple-top-level-items is set to "no" and the sequence to be serialized does not consist of a single object or array, an error <fo:inline font-weight="bold" font-family="Liberation Mono,monospace">jerr:JNSE0012</fo:inline> is raised.
			</fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
				If jsoniq-multiple-top-level-items is set to "yes", then the JSON items in the sequence are serialized one by one as specified below, in the same order and without any separating character (except whitespaces, depending on the indent parameter).
			</fo:block></fo:block><fo:block id="idm139680687663504"><fo:block><fo:block><fo:block margin-left="0pc" font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" keep-together.within-column="always"><fo:block keep-with-next.within-column="always"><fo:block font-family="Liberation Sans,sans-serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="1.8em" space-before.optimum="2.0em" space-before.maximum="2.2em" space-after.minimum="0.1em" space-after.optimum="0.1em" space-after.maximum="0.1em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Serialization of individual JSON values</fo:marker><fo:block color="#336699" font-size="14pt">10.3.2. Serialization of individual JSON values</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
				This section specifies how JSON items as well as JSON atomic values are serialized.
			</fo:block><fo:list-block id="idm139680688026080" space-before.optimum="0.1pt" space-before.minimum="0.1pt" space-before.maximum="0.1pt" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em" provisional-label-separation="0.2em" provisional-distance-between-starts="1.0em"><fo:list-item id="idm139680688044256" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em">
						Object
					</fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
						An object is serialized as an opening curly brace {, followed by the comma-separated serializations of all its pairs, followed by a closing curly brace.
					</fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
						A pair is serialized as the serialization of its name, followed by a colon, followed by the serialization of its value.
					</fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item id="idm139680677425200" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em">
						Array
					</fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
						An array is serialized as an opening square brace, followed by the comma-separated serializations of all its member values, followed by a closing square brace.
					</fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item id="idm139680687583360" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em">
						<fo:inline font-weight="bold" font-family="Liberation Mono,monospace">xs:string</fo:inline>
					</fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
						An atomic value of type xs:string is serialized between double quotes and with the escaping specified in http://www.ietf.org/rfc/rfc4627.txt.
					</fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item id="idm139680687581296" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em">
						<fo:inline font-weight="bold" font-family="Liberation Mono,monospace">xs:double</fo:inline>, <fo:inline font-weight="bold" font-family="Liberation Mono,monospace">xs:float</fo:inline> (except Nan, positive/negative infinity), <fo:inline font-weight="bold" font-family="Liberation Mono,monospace">xs:decimal</fo:inline> or subtype
					</fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
						An atomic value of a numeric type (<fo:inline font-weight="bold" font-family="Liberation Mono,monospace">xs:double</fo:inline>, <fo:inline font-weight="bold" font-family="Liberation Mono,monospace">xs:float</fo:inline>, <fo:inline font-weight="bold" font-family="Liberation Mono,monospace">xs:decimal</fo:inline> or subtype) is serialized as its lexical representation, i.e., is cast to <fo:inline font-weight="bold" font-family="Liberation Mono,monospace">xs:string</fo:inline>, not surrounded by quotes. This corresponds to the JSON number notation, but with a few exceptions which must be fixed before serializing:
					</fo:block><fo:list-block id="idm139680687835088" provisional-label-separation="0.2em" provisional-distance-between-starts="1.0em"><fo:list-item id="idm139680687834768" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em">
								The leading + sign must be removed if present.
							</fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item id="idm139680687833840" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em">
								A zero must be added in front of and/or after the dot if no digit is present in front of and/or after the dot.
							</fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item id="idm139680687832768" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em">
								Unnecessary zeros in front of the number (except if the only digit in front of the dot is 0) must be removed.
							</fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item id="idm139680687831696" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em">
								Values of type xs:decimal that have a lexical representation without dot must be suffixed with ".0" (so that it parses back as a decimal).
							</fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item id="idm139680680376352" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em">
								Values of type xs:double that have a lexical representation without E must be suffixed with "E0" (so that it parses back as a double).
							</fo:block></fo:block></fo:list-item-body></fo:list-item></fo:list-block></fo:block></fo:list-item-body></fo:list-item><fo:list-item id="idm139680680374944" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em">
						<fo:inline font-weight="bold" font-family="Liberation Mono,monospace">xs:boolean</fo:inline> or subtype
					</fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
						An atomic value matching the type <fo:inline font-weight="bold" font-family="Liberation Mono,monospace">xs:boolean</fo:inline> is serialized as <fo:inline font-weight="bold" font-family="Liberation Mono,monospace">true</fo:inline> or <fo:inline font-weight="bold" font-family="Liberation Mono,monospace">false</fo:inline>, not surrounded by quotes.
					</fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item id="idm139680680371648" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em">
						<fo:inline font-weight="bold" font-family="Liberation Mono,monospace">js:null</fo:inline> or subtype
					</fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
						The atomic value null matching the type <fo:inline font-weight="bold" font-family="Liberation Mono,monospace">js:null</fo:inline> is serialized as <fo:inline font-weight="bold" font-family="Liberation Mono,monospace">null</fo:inline>, not surrounded by quotes.
					</fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item id="idm139680680368832" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em">
						All other atomic values are output as if they were of value <fo:inline font-weight="bold" font-family="Liberation Mono,monospace">xs:string</fo:inline> (i.e., as a JSON string).
					</fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item id="idm139680678819648" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em">
						An error jerr:JNSE0014 is raised if an XML node or a function is encountered.
					</fo:block></fo:block></fo:list-item-body></fo:list-item></fo:list-block></fo:block><fo:block id="idm139680678818400"><fo:block><fo:block><fo:block margin-left="0pc" font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" keep-together.within-column="always"><fo:block keep-with-next.within-column="always"><fo:block font-family="Liberation Sans,sans-serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="1.8em" space-before.optimum="2.0em" space-before.maximum="2.2em" space-after.minimum="0.1em" space-after.optimum="0.1em" space-after.maximum="0.1em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Influence of other serialization parameters upon the JSON output method</fo:marker><fo:block color="#336699" font-size="14pt">10.3.3. Influence of other serialization parameters upon the JSON output method</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block id="idm139680678817632"><fo:block><fo:block><fo:block margin-left="0pc" font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" keep-together.within-column="always"><fo:block keep-with-next.within-column="always"><fo:block font-family="Liberation Sans,sans-serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="1.8em" space-before.optimum="2.0em" space-before.maximum="2.2em" space-after.minimum="0.1em" space-after.optimum="0.1em" space-after.maximum="0.1em" text-align="left" start-indent="0pc"><fo:block color="#336699" font-size="13pt">10.3.3.1. JSON output method: the indent parameter</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
					Like for the XML output method, the indent parameter controls if the serializer is allowed to add extra whitespaces to make the output easier to read. If the indent parameter has the value "yes", the serializer may output additional whitespaces characters outside of JSON literals. If the indent parameter has the value "no", the serializer may not output any whitespaces outside of JSON literals.
				</fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
					If the indent parameter is set to yes, the algorithm for adding whitespaces is allowed to add them at the following places, and only at these places:
				</fo:block><fo:list-block id="idm139680678815360" space-before.optimum="0.1pt" space-before.minimum="0.1pt" space-before.maximum="0.1pt" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em" provisional-label-separation="0.2em" provisional-distance-between-starts="1.0em"><fo:list-item id="idm139680678815040" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em">
							Between an object-opening curly brace and the first key.
						</fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item id="idm139680678814112" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em">
							On either side of a key-value-separating colon.
						</fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item id="idm139680678813184" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em">
							Before and after pair-separating commas in an object.
						</fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item id="idm139680685521936" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em">
							Between the value of the last pair of an object and the object-closing curly brace.
						</fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item id="idm139680685521008" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em">
							Between an array-opening square bracket and the first member.
						</fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item id="idm139680685520080" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em">
							Before and after value-separating commas in an array.
						</fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item id="idm139680685519152" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em">
							Between the last member of an array and the array-closing square bracket.
						</fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item id="idm139680685518224" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em">
							Between two objects or arrays if multiple JSON items are serialized.
						</fo:block></fo:block></fo:list-item-body></fo:list-item></fo:list-block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
					In particular, no whitespaces may be added inside JSON literals (strings, numbers, booleans, nulls).
				</fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
					If the indent parameter is set to no, no whitespace may be output to any of the places mentioned above.
				</fo:block></fo:block><fo:block id="idm139680685515824"><fo:block><fo:block><fo:block margin-left="0pc" font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" keep-together.within-column="always"><fo:block keep-with-next.within-column="always"><fo:block font-family="Liberation Sans,sans-serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="1.8em" space-before.optimum="2.0em" space-before.maximum="2.2em" space-after.minimum="0.1em" space-after.optimum="0.1em" space-after.maximum="0.1em" text-align="left" start-indent="0pc"><fo:block color="#336699" font-size="13pt">10.3.3.2. JSON output method: the byte-order-mark parameter</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
					The byte-order-mark parameter is applicable to the JSON output method and has the same semantics as for the XML output method.
				</fo:block></fo:block><fo:block id="idm139680685514288"><fo:block><fo:block><fo:block margin-left="0pc" font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" keep-together.within-column="always"><fo:block keep-with-next.within-column="always"><fo:block font-family="Liberation Sans,sans-serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="1.8em" space-before.optimum="2.0em" space-before.maximum="2.2em" space-after.minimum="0.1em" space-after.optimum="0.1em" space-after.maximum="0.1em" text-align="left" start-indent="0pc"><fo:block color="#336699" font-size="13pt">10.3.3.3. JSON output method: the use-character-maps parameter</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
					The use-character-maps parameter is applicable to the JSON output method and has the same semantics as for the XML output method.
				</fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
					Like for the XML output method, the result of serialization using the JSON output method is not guaranteed to be well-formed JSON if character maps have been specified.
				</fo:block></fo:block></fo:block></fo:block><fo:block id="idm139680686274048"><fo:block><fo:block><fo:block margin-left="0pc" font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" keep-together.within-column="always"><fo:block keep-with-next.within-column="always"><fo:block font-family="Liberation Sans,sans-serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="1.8em" space-before.optimum="2.0em" space-before.maximum="2.2em" space-after.minimum="0.1em" space-after.optimum="0.1em" space-after.maximum="0.1em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">The JSON-XML-hybrid output method</fo:marker><fo:block color="#336699" font-size="16pt">10.4. The JSON-XML-hybrid output method</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
			This method serializes a sequence of items to a stream of objects, arrays, XML nodes and text as follows:
		</fo:block><fo:list-block id="idm139680686272704" space-before.optimum="0.1pt" space-before.minimum="0.1pt" space-before.maximum="0.1pt" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em" provisional-label-separation="0.2em" provisional-distance-between-starts="1.0em"><fo:list-item id="idm139680686272384" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em">
					An object or array is serialized according to the JSON output method (the value of jsoniq-multiple-top-level-items is irrelevant), with the exception that no error is raised if an XML node is found as a value in an object or a member of an array. Instead, the XML node is serialized to a JSON string as described below for document nodes.
				</fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item id="idm139680686271088" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em">
					A document node is serialized according to the xml output method and the corresponding serialization parameters (except that the parameters setting declaration and doctypes are ignored, and no doctype or XML declaration is output).
				</fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item id="idm139680686269904" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em">
					The item serialization outputs are not separated by any spaces in the final output (except if the indent parameter is set, in which case the serializer is free to insert whitespaces).
				</fo:block></fo:block></fo:list-item-body></fo:list-item></fo:list-block></fo:block><fo:block id="idm139680686268448"><fo:block><fo:block><fo:block margin-left="0pc" font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" keep-together.within-column="always"><fo:block keep-with-next.within-column="always"><fo:block font-family="Liberation Sans,sans-serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="1.8em" space-before.optimum="2.0em" space-before.maximum="2.2em" space-after.minimum="0.1em" space-after.optimum="0.1em" space-after.maximum="0.1em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Changes to ther other output methods</fo:marker><fo:block color="#336699" font-size="16pt">10.5. Changes to ther other output methods</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
			The other outputs methods (XML, HTML, XHTML, Text) are changed as follows: if the normalized sequence does not consist of exactly one document node, then <fo:inline font-weight="bold" font-family="Liberation Mono,monospace">jerr:JNSE0022</fo:inline> is raised.
		</fo:block></fo:block></fo:flow></fo:page-sequence><fo:page-sequence xmlns:axf="http://www.antennahouse.com/names/XSL/Extensions" hyphenate="true" master-reference="body" language="en" format="1" initial-page-number="auto-odd" force-page-count="end-on-even" hyphenation-character="-" hyphenation-push-character-count="2" hyphenation-remain-character-count="2"><fo:static-content flow-name="xsl-region-before-first"><fo:block wrap-option="no-wrap" font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" margin-left="0pc"><fo:table table-layout="fixed" width="100%" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(0)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="before" relative-align="baseline"><fo:block/></fo:table-cell><fo:table-cell text-align="center" display-align="before" relative-align="baseline"><fo:block><fo:inline keep-together.within-line="always" font-weight="bold">Chapter 11.</fo:inline></fo:block></fo:table-cell><fo:table-cell text-align="right" display-align="before" relative-align="baseline"><fo:block/></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-before-odd"><fo:block wrap-option="no-wrap" font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" margin-left="0pc"><fo:table table-layout="fixed" width="100%" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(0)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="before" relative-align="baseline"><fo:block/></fo:table-cell><fo:table-cell text-align="center" display-align="before" relative-align="baseline"><fo:block/></fo:table-cell><fo:table-cell text-align="right" display-align="before" relative-align="baseline"><fo:block><fo:inline keep-together.within-line="always"><fo:retrieve-marker retrieve-class-name="section.head.marker" retrieve-position="first-including-carryover" retrieve-boundary="page-sequence"/></fo:inline></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-before-even"><fo:block wrap-option="no-wrap" font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" margin-left="0pc"><fo:table table-layout="fixed" width="100%" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(0)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="before" relative-align="baseline"><fo:block><fo:inline keep-together.within-line="always" font-weight="bold">Chapter 11. Error codes</fo:inline></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="before" relative-align="baseline"><fo:block/></fo:table-cell><fo:table-cell text-align="right" display-align="before" relative-align="baseline"><fo:block/></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-before-blank"><fo:block wrap-option="no-wrap" font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" margin-left="0pc"><fo:table table-layout="fixed" width="100%" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(0)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="before" relative-align="baseline"><fo:block/></fo:table-cell><fo:table-cell text-align="center" display-align="before" relative-align="baseline"><fo:block/></fo:table-cell><fo:table-cell text-align="right" display-align="before" relative-align="baseline"><fo:block/></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" flow-name="xsl-footnote-separator"><fo:block margin-top="2em"><fo:leader color="black" leader-pattern="rule" leader-length="1in"/></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-inner-first"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-inner-odd"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-inner-even"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-inner-blank"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-outer-first"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-outer-odd"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-outer-even"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-outer-blank"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-after-first"><fo:block font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" margin-left="0pc"><fo:table table-layout="fixed" width="100%" border-top-width="0.5pt" border-top-style="solid" border-top-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="end" display-align="after" relative-align="baseline"><fo:block><fo:block><fo:page-number/></fo:block></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-after-odd"><fo:block font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" margin-left="0pc"><fo:table table-layout="fixed" width="100%" border-top-width="0.5pt" border-top-style="solid" border-top-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="end" display-align="after" relative-align="baseline"><fo:block><fo:block><fo:page-number/></fo:block></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-after-even"><fo:block font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" margin-left="0pc"><fo:table table-layout="fixed" width="100%" border-top-width="0.5pt" border-top-style="solid" border-top-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="after" relative-align="baseline"><fo:block><fo:block><fo:page-number/></fo:block></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="end" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-after-blank"><fo:block font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" margin-left="0pc"><fo:table table-layout="fixed" width="100%" border-top-width="0.5pt" border-top-style="solid" border-top-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="after" relative-align="baseline"><fo:block><fo:block><fo:page-number/></fo:block></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="end" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:flow flow-name="xsl-region-body" start-indent="0pt" end-indent="0pt"><fo:block id="section-error-codes"><fo:block font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats"><fo:block margin-left="0pc"><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" color="#336699" background-color="white" font-size="24pt" font-weight="bold" text-align="left" padding-left="1em" padding-right="1em">Error codes</fo:block></fo:block></fo:block></fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
		The JSONiq error codes are summarized here.
	</fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
		<fo:inline font-weight="bold" font-family="Liberation Mono,monospace">jerr:JNDY0003</fo:inline>
	</fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
		It is a dynamic error if two pairs in an object constructor or in a simple object union have the same name.
	</fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
		<fo:inline font-weight="bold" font-family="Liberation Mono,monospace">jerr:JNTY0004</fo:inline>
	</fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
		Arrays and objects cannot be atomized. It is a type error to call fn:data on a sequence containing an array or an object.
	</fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
		<fo:inline font-weight="bold" font-family="Liberation Mono,monospace">jerr:JNUP0005</fo:inline>
	</fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
		It is a dynamic error if a pending update list contains two JSON insert update primitives on the same object and pair name.
	</fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
		<fo:inline font-weight="bold" font-family="Liberation Mono,monospace">jerr:JNUP0006</fo:inline>
	</fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
		It is a dynamic error if upd:applyUpdates causes an object to contain two pairs with the same name.
	</fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
		<fo:inline font-weight="bold" font-family="Liberation Mono,monospace">jerr:JNUP0007</fo:inline>
	</fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
		It is a type error if, in an updating expression, an array selector cannot be cast to xs:integer or if an object selector cannot be cast to xs:string.
	</fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
		<fo:inline font-weight="bold" font-family="Liberation Mono,monospace">jerr:JNUP0008</fo:inline>
	</fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
		It is a dynamic error if the target of a JSON delete or JSON replace expression is not an array or an object. It is a dynamic error if the target of a renaming expression is not an object. It is a dynamic error if the target of an appending expression is not an array. It is a dynamic error if the target of a position-inserting expression is not an array. It is a dynamic error if the target of a non-position-inserting expression is not an object.
	</fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
		<fo:inline font-weight="bold" font-family="Liberation Mono,monospace">jerr:JNUP0009</fo:inline>
	</fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
		It is a dynamic error if a pending update list contains two JSON replacing update primitives on the same object or array, and with the same selector.
	</fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
		<fo:inline font-weight="bold" font-family="Liberation Mono,monospace">jerr:JNUP0010</fo:inline>
	</fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
		It is a dynamic error if a pending update list contains two JSON renaming update primitives on the same object and with the same selector.
	</fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
		<fo:inline font-weight="bold" font-family="Liberation Mono,monospace">jerr:JNTY0011</fo:inline>
	</fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
		It is a type error if the content sequence in a node constructor or in an XQUF insert or replace update expression contains an object or an array.
	</fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
		<fo:inline font-weight="bold" font-family="Liberation Mono,monospace">jerr:JNSE0012</fo:inline>
	</fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
		It is a dynamic error to serialize something else than a unique JSON item with the JSON output method if the jsoniq-multiple-top-level-items is set to no.
	</fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
		<fo:inline font-weight="bold" font-family="Liberation Mono,monospace">jerr:JNSE0014</fo:inline>
	</fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
		It is a dynamic error to serialize a function, a node or a standalone atomic item with the JSON output method.
	</fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
		<fo:inline font-weight="bold" font-family="Liberation Mono,monospace">jerr:JNSE0015</fo:inline>
	</fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
		It is a dynamic error to serialize a top-level item which is not a JSON item if the jsoniq-multiple-top-level-items serialization parameter is not set to "array".
	</fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
		<fo:inline font-weight="bold" font-family="Liberation Mono,monospace">jerr:JNUP0016</fo:inline>
	</fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
		It is a dynamic error if it is attempted to create a replace, delete or rename update primitive with a selector that cannot be resolved against the target array or object.
	</fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
		<fo:inline font-weight="bold" font-family="Liberation Mono,monospace">jerr:JNTY0018</fo:inline>
	</fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
		It is a type error if there is not exactly one supplied parameter for an object or array selector.
	</fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
		<fo:inline font-weight="bold" font-family="Liberation Mono,monospace">jerr:JNUP0019</fo:inline>
	</fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
		It is a dynamic error if the content expression, in an object insert expression, does not evaluate to a sequence of objects.
	</fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
		<fo:inline font-weight="bold" font-family="Liberation Mono,monospace">jerr:JNTY0020</fo:inline>
	</fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
		It is a dynamic error if, when calling jn:parse-json, the option "jsoniq-multiple-top-level-items" is not a boolean.
	</fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
		<fo:inline font-weight="bold" font-family="Liberation Mono,monospace">jerr:JNDY0021</fo:inline>
	</fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
		It is a dynamic error if parsing a string to one or several objects or arrays is not successful, or if it results in more than one item and "jsoniq-multiple-top-level-items" is false.
	</fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
		<fo:inline font-weight="bold" font-family="Liberation Mono,monospace">jerr:JNSE0022</fo:inline>
	</fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
		It is a dynamic error if an object or array is encountered upon serializing as XML, XHTML, HTML or Text.
	</fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
		<fo:inline font-weight="bold" font-family="Liberation Mono,monospace">jerr:JNTY0023</fo:inline>
	</fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
		It is a dynamic error if, when calling jn:decode-from-roundtrip, the type specified in an Encoded Object is not recognized, or if the value cannot be cast to it (if it is an atomic type) or if the parsed XML node does match it (if it is an XML node type).
	</fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
		<fo:inline font-weight="bold" font-family="Liberation Mono,monospace">jerr:JNTY0024</fo:inline>
	</fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
		Arrays and objects do not have a string value. It is a type error to call fn:string on an array or an object.
	</fo:block></fo:flow></fo:page-sequence><fo:page-sequence xmlns:axf="http://www.antennahouse.com/names/XSL/Extensions" hyphenate="true" master-reference="body" language="en" format="1" initial-page-number="auto-odd" force-page-count="end-on-even" hyphenation-character="-" hyphenation-push-character-count="2" hyphenation-remain-character-count="2"><fo:static-content flow-name="xsl-region-before-first"><fo:block wrap-option="no-wrap" font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" margin-left="0pc"><fo:table table-layout="fixed" width="100%" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(0)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="before" relative-align="baseline"><fo:block/></fo:table-cell><fo:table-cell text-align="center" display-align="before" relative-align="baseline"><fo:block><fo:inline keep-together.within-line="always" font-weight="bold">Chapter 12.</fo:inline></fo:block></fo:table-cell><fo:table-cell text-align="right" display-align="before" relative-align="baseline"><fo:block/></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-before-odd"><fo:block wrap-option="no-wrap" font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" margin-left="0pc"><fo:table table-layout="fixed" width="100%" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(0)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="before" relative-align="baseline"><fo:block/></fo:table-cell><fo:table-cell text-align="center" display-align="before" relative-align="baseline"><fo:block/></fo:table-cell><fo:table-cell text-align="right" display-align="before" relative-align="baseline"><fo:block><fo:inline keep-together.within-line="always"><fo:retrieve-marker retrieve-class-name="section.head.marker" retrieve-position="first-including-carryover" retrieve-boundary="page-sequence"/></fo:inline></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-before-even"><fo:block wrap-option="no-wrap" font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" margin-left="0pc"><fo:table table-layout="fixed" width="100%" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(0)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="before" relative-align="baseline"><fo:block><fo:inline keep-together.within-line="always" font-weight="bold">Chapter 12. Grammar Summary</fo:inline></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="before" relative-align="baseline"><fo:block/></fo:table-cell><fo:table-cell text-align="right" display-align="before" relative-align="baseline"><fo:block/></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-before-blank"><fo:block wrap-option="no-wrap" font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" margin-left="0pc"><fo:table table-layout="fixed" width="100%" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(0)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="before" relative-align="baseline"><fo:block/></fo:table-cell><fo:table-cell text-align="center" display-align="before" relative-align="baseline"><fo:block/></fo:table-cell><fo:table-cell text-align="right" display-align="before" relative-align="baseline"><fo:block/></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" flow-name="xsl-footnote-separator"><fo:block margin-top="2em"><fo:leader color="black" leader-pattern="rule" leader-length="1in"/></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-inner-first"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-inner-odd"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-inner-even"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-inner-blank"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-outer-first"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-outer-odd"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-outer-even"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-outer-blank"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-after-first"><fo:block font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" margin-left="0pc"><fo:table table-layout="fixed" width="100%" border-top-width="0.5pt" border-top-style="solid" border-top-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="end" display-align="after" relative-align="baseline"><fo:block><fo:block><fo:page-number/></fo:block></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-after-odd"><fo:block font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" margin-left="0pc"><fo:table table-layout="fixed" width="100%" border-top-width="0.5pt" border-top-style="solid" border-top-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="end" display-align="after" relative-align="baseline"><fo:block><fo:block><fo:page-number/></fo:block></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-after-even"><fo:block font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" margin-left="0pc"><fo:table table-layout="fixed" width="100%" border-top-width="0.5pt" border-top-style="solid" border-top-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="after" relative-align="baseline"><fo:block><fo:block><fo:page-number/></fo:block></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="end" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-after-blank"><fo:block font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" margin-left="0pc"><fo:table table-layout="fixed" width="100%" border-top-width="0.5pt" border-top-style="solid" border-top-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="after" relative-align="baseline"><fo:block><fo:block><fo:page-number/></fo:block></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="end" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:flow flow-name="xsl-region-body" start-indent="0pt" end-indent="0pt"><fo:block id="section-grammar-summary"><fo:block font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats"><fo:block margin-left="0pc"><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" color="#336699" background-color="white" font-size="24pt" font-weight="bold" text-align="left" padding-left="1em" padding-right="1em">Grammar Summary</fo:block></fo:block></fo:block></fo:block><fo:block id="idm139680685995728" text-align="start" wrap-option="wrap" hyphenation-character="\" space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="true" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" font-family="Liberation Mono,monospace" background-color="#f5f5f5" color="black" padding-left="6pt" padding-top="6pt" padding-bottom="6pt" margin-left="0pc" font-size="8pt" border-width="1pt" border-style="solid" border-color="#aaaaaa">
      PrimaryExpr ::=  -- everything so far --
        | ObjectConstructor
        | ArrayConstructor
      
      ObjectConstructor ::=  "{" ( PairConstructor ("," PairConstructor)* )? "}"
      
      PairConstructor ::=  ExprSingle ":" ExprSingle
      
      ArrayConstructor ::=  "[" Expr? "]"
      
      ExprSingle ::=  -- everything so far --
        | JSONDeleteExpr
        | JSONInsertExpr
        | JSONRenameExpr
        | JSONReplaceExpr
        | JSONAppendExpr
      
      JSONDeleteExpr ::= "delete" "json" PrimaryExpr ( "(" ExprSingle ")" )+
      
      JSONInsertExpr ::= "insert" "json" ExprSingle "into" ExprSingle
                         ("at" "position" ExprSingle)?
                       | "insert" "json" PairConstructor ("," Pair Constructor)*
                         "into" ExprSingle
      
      JSONRenameExpr ::= "rename" "json" PrimaryExpr  ( "(" ExprSingle ")" )+
                         "as" ExprSingle
      
      JSONReplaceExpr ::= "replace" "json" "value" "of"
                          PrimaryExpr ( "(" ExprSingle ")" )+
                          "with" ExprSingle
      
      JSONAppendExpr ::= "append" "json" ExprSingle "into" ExprSingle
      
      ItemType ::= -- everything so far --
        | JSONTest
        | StructuredItemTest

      JSONTest ::= 
          JSONItemTest
        | JSONObjectTest
        | JSONArrayTest

      StructuredItemTest ::= "structured-item" "(" ")"
      JSONItemTest ::= "json-item" "(" ")"
      JSONObjectTest ::= "object" "(" ")"
      JSONArrayTest ::= "array" "(" ")"
</fo:block></fo:flow></fo:page-sequence><fo:page-sequence xmlns:axf="http://www.antennahouse.com/names/XSL/Extensions" hyphenate="true" master-reference="body" language="en" format="1" initial-page-number="auto-odd" force-page-count="end-on-even" hyphenation-character="-" hyphenation-push-character-count="2" hyphenation-remain-character-count="2"><fo:static-content flow-name="xsl-region-before-first"><fo:block wrap-option="no-wrap" font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" margin-left="0pc"><fo:table table-layout="fixed" width="100%" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(0)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="before" relative-align="baseline"><fo:block/></fo:table-cell><fo:table-cell text-align="center" display-align="before" relative-align="baseline"><fo:block><fo:inline keep-together.within-line="always" font-weight="bold">Chapter 13.</fo:inline></fo:block></fo:table-cell><fo:table-cell text-align="right" display-align="before" relative-align="baseline"><fo:block/></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-before-odd"><fo:block wrap-option="no-wrap" font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" margin-left="0pc"><fo:table table-layout="fixed" width="100%" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(0)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="before" relative-align="baseline"><fo:block/></fo:table-cell><fo:table-cell text-align="center" display-align="before" relative-align="baseline"><fo:block/></fo:table-cell><fo:table-cell text-align="right" display-align="before" relative-align="baseline"><fo:block><fo:inline keep-together.within-line="always"><fo:retrieve-marker retrieve-class-name="section.head.marker" retrieve-position="first-including-carryover" retrieve-boundary="page-sequence"/></fo:inline></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-before-even"><fo:block wrap-option="no-wrap" font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" margin-left="0pc"><fo:table table-layout="fixed" width="100%" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(0)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="before" relative-align="baseline"><fo:block><fo:inline keep-together.within-line="always" font-weight="bold">Chapter 13. Implementation in Zorba</fo:inline></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="before" relative-align="baseline"><fo:block/></fo:table-cell><fo:table-cell text-align="right" display-align="before" relative-align="baseline"><fo:block/></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-before-blank"><fo:block wrap-option="no-wrap" font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" margin-left="0pc"><fo:table table-layout="fixed" width="100%" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(0)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="before" relative-align="baseline"><fo:block/></fo:table-cell><fo:table-cell text-align="center" display-align="before" relative-align="baseline"><fo:block/></fo:table-cell><fo:table-cell text-align="right" display-align="before" relative-align="baseline"><fo:block/></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" flow-name="xsl-footnote-separator"><fo:block margin-top="2em"><fo:leader color="black" leader-pattern="rule" leader-length="1in"/></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-inner-first"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-inner-odd"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-inner-even"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-inner-blank"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-outer-first"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-outer-odd"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-outer-even"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-outer-blank"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-after-first"><fo:block font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" margin-left="0pc"><fo:table table-layout="fixed" width="100%" border-top-width="0.5pt" border-top-style="solid" border-top-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="end" display-align="after" relative-align="baseline"><fo:block><fo:block><fo:page-number/></fo:block></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-after-odd"><fo:block font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" margin-left="0pc"><fo:table table-layout="fixed" width="100%" border-top-width="0.5pt" border-top-style="solid" border-top-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="end" display-align="after" relative-align="baseline"><fo:block><fo:block><fo:page-number/></fo:block></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-after-even"><fo:block font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" margin-left="0pc"><fo:table table-layout="fixed" width="100%" border-top-width="0.5pt" border-top-style="solid" border-top-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="after" relative-align="baseline"><fo:block><fo:block><fo:page-number/></fo:block></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="end" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-after-blank"><fo:block font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" margin-left="0pc"><fo:table table-layout="fixed" width="100%" border-top-width="0.5pt" border-top-style="solid" border-top-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="after" relative-align="baseline"><fo:block><fo:block><fo:page-number/></fo:block></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="end" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:flow flow-name="xsl-region-body" start-indent="0pt" end-indent="0pt"><fo:block id="section-implementation"><fo:block font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats"><fo:block margin-left="0pc"><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" color="#336699" background-color="white" font-size="24pt" font-weight="bold" text-align="left" padding-left="1em" padding-right="1em">Implementation in Zorba</fo:block></fo:block></fo:block></fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
		The present specification was implemented in the Zorba XQuery engine, with the following differences:
	</fo:block><fo:list-block id="idm139680688458096" space-before.optimum="0.1pt" space-before.minimum="0.1pt" space-before.maximum="0.1pt" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em" provisional-label-separation="0.2em" provisional-distance-between-starts="1.0em"><fo:list-item id="idm139680687806032" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em">
				Zorba supports a specific simple object union syntax (for building objects with a dynamic number of pairs): {| Expr? |} corresponds to jn:object(Expr?) in this specification.
			</fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item id="idm139680677065136" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em">
				Zorba supports a specific accumulation syntax (for building objects with a dynamic number of pairs without throwing errors upon pair collision): {[ Expr? ]} corresponds to jn:accumulate(Expr?) in this specification.
			</fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item id="idm139680688060400" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em">
				The empty objects syntax {} is not supported, because it collides with empty blocks in Zorba Scripting. However, {| |} can be used instead (see above).
			</fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item id="idm139680678694160" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em">
				Zorba supports collections and indices containing JSON items as part of its data definition framework.
			</fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item id="idm139680685068896" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em">
				Zorba ships some of the library functions in the jn: module (jn:members, jn:flatten). The others will follow in the next release.
			</fo:block></fo:block></fo:list-item-body></fo:list-item></fo:list-block></fo:flow></fo:page-sequence><fo:page-sequence xmlns:axf="http://www.antennahouse.com/names/XSL/Extensions" hyphenate="true" master-reference="back" language="en" format="1" initial-page-number="auto-odd" force-page-count="end-on-even" hyphenation-character="-" hyphenation-push-character-count="2" hyphenation-remain-character-count="2"><fo:static-content flow-name="xsl-region-before-first"><fo:block wrap-option="no-wrap" font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" margin-left="0pc"><fo:table table-layout="fixed" width="100%" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(0)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="before" relative-align="baseline"><fo:block/></fo:table-cell><fo:table-cell text-align="center" display-align="before" relative-align="baseline"><fo:block/></fo:table-cell><fo:table-cell text-align="right" display-align="before" relative-align="baseline"><fo:block/></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-before-odd"><fo:block wrap-option="no-wrap" font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" margin-left="0pc"><fo:table table-layout="fixed" width="100%" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(0)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="before" relative-align="baseline"><fo:block/></fo:table-cell><fo:table-cell text-align="center" display-align="before" relative-align="baseline"><fo:block/></fo:table-cell><fo:table-cell text-align="right" display-align="before" relative-align="baseline"><fo:block><fo:inline keep-together.within-line="always"><fo:retrieve-marker retrieve-class-name="section.head.marker" retrieve-position="first-including-carryover" retrieve-boundary="page-sequence"/></fo:inline></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-before-even"><fo:block wrap-option="no-wrap" font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" margin-left="0pc"><fo:table table-layout="fixed" width="100%" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(0)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="before" relative-align="baseline"><fo:block><fo:inline keep-together.within-line="always" font-weight="bold">Appendix A. Revision History</fo:inline></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="before" relative-align="baseline"><fo:block/></fo:table-cell><fo:table-cell text-align="right" display-align="before" relative-align="baseline"><fo:block/></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-before-blank"><fo:block wrap-option="no-wrap" font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" margin-left="0pc"><fo:table table-layout="fixed" width="100%" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(0)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="before" relative-align="baseline"><fo:block/></fo:table-cell><fo:table-cell text-align="center" display-align="before" relative-align="baseline"><fo:block/></fo:table-cell><fo:table-cell text-align="right" display-align="before" relative-align="baseline"><fo:block/></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" flow-name="xsl-footnote-separator"><fo:block margin-top="2em"><fo:leader color="black" leader-pattern="rule" leader-length="1in"/></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-inner-first"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-inner-odd"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-inner-even"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-inner-blank"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-outer-first"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-outer-odd"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-outer-even"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-outer-blank"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-after-first"><fo:block font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" margin-left="0pc"><fo:table table-layout="fixed" width="100%" border-top-width="0.5pt" border-top-style="solid" border-top-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="end" display-align="after" relative-align="baseline"><fo:block><fo:block><fo:page-number/></fo:block></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-after-odd"><fo:block font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" margin-left="0pc"><fo:table table-layout="fixed" width="100%" border-top-width="0.5pt" border-top-style="solid" border-top-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="end" display-align="after" relative-align="baseline"><fo:block><fo:block><fo:page-number/></fo:block></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-after-even"><fo:block font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" margin-left="0pc"><fo:table table-layout="fixed" width="100%" border-top-width="0.5pt" border-top-style="solid" border-top-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="after" relative-align="baseline"><fo:block><fo:block><fo:page-number/></fo:block></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="end" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-after-blank"><fo:block font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" margin-left="0pc"><fo:table table-layout="fixed" width="100%" border-top-width="0.5pt" border-top-style="solid" border-top-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="after" relative-align="baseline"><fo:block><fo:block><fo:page-number/></fo:block></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="end" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:flow flow-name="xsl-region-body" start-indent="0pt" end-indent="0pt"><fo:block id="appe-JSONiq-Revision_History"><fo:block><fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" color="#336699" background-color="white" font-size="24pt" font-weight="bold" text-align="left" padding-left="1em" padding-right="1em">Appendix A. Revision History</fo:block></fo:block></fo:block></fo:block><fo:block space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
		<fo:table xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" table-layout="fixed"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(2)"/><fo:table-column column-number="3" column-width="proportional-column-width(3)"/><fo:table-body start-indent="0pt" end-indent="0pt"><fo:table-row><fo:table-cell font-weight="bold" padding-left="4pt" padding-right="4pt" padding-top="2pt" padding-bottom="2pt" padding-start="2pt" padding-end="2pt"><fo:block>Revision 1-4</fo:block></fo:table-cell><fo:table-cell font-weight="bold" padding-left="4pt" padding-right="4pt" padding-top="2pt" padding-bottom="2pt" padding-start="2pt" padding-end="2pt"><fo:block>Fri Aug 7 2015</fo:block></fo:table-cell><fo:table-cell font-weight="bold" padding-left="4pt" padding-right="4pt" padding-top="2pt" padding-bottom="2pt" padding-start="2pt" padding-end="2pt"><fo:block>Ghislain Fourny <fo:inline font-family="Liberation Mono,monospace"><fo:inline keep-together.within-line="always" hyphenate="false"><fo:basic-link external-destination="mailto:g@28.io" font-style="italic" color="#0066cc">g@28.io</fo:basic-link></fo:inline></fo:inline></fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell number-columns-spanned="3" padding-bottom="25pt" font-weight="normal" padding-left="16pt"><fo:block>
					<fo:table id="idm139680686291872" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em" table-layout="fixed" width="100%"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-body start-indent="0pt" end-indent="0pt"><fo:table-row><fo:table-cell><fo:block> Add ?: syntax. </fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table>

				</fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell font-weight="bold" padding-left="4pt" padding-right="4pt" padding-top="2pt" padding-bottom="2pt" padding-start="2pt" padding-end="2pt"><fo:block>Revision 1-3</fo:block></fo:table-cell><fo:table-cell font-weight="bold" padding-left="4pt" padding-right="4pt" padding-top="2pt" padding-bottom="2pt" padding-start="2pt" padding-end="2pt"><fo:block>Tue Aug 13 2013</fo:block></fo:table-cell><fo:table-cell font-weight="bold" padding-left="4pt" padding-right="4pt" padding-top="2pt" padding-bottom="2pt" padding-start="2pt" padding-end="2pt"><fo:block>Ghislain Fourny <fo:inline font-family="Liberation Mono,monospace"><fo:inline keep-together.within-line="always" hyphenate="false"><fo:basic-link external-destination="mailto:g@28.io" font-style="italic" color="#0066cc">g@28.io</fo:basic-link></fo:inline></fo:inline></fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell number-columns-spanned="3" padding-bottom="25pt" font-weight="normal" padding-left="16pt"><fo:block>
					<fo:table id="idm139680685125152" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em" table-layout="fixed" width="100%"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-body start-indent="0pt" end-indent="0pt"><fo:table-row><fo:table-cell><fo:block> Added more examples for library functions. </fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell><fo:block> Completed signature of keys() and size() with return types. </fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell><fo:block> Simplified code in libjn:remove-keys() and libjn:project(). </fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell><fo:block> Moved all fixes for JSON vs. JDM lexical representation mismatch to the serialization layer. </fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table>

				</fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell font-weight="bold" padding-left="4pt" padding-right="4pt" padding-top="2pt" padding-bottom="2pt" padding-start="2pt" padding-end="2pt"><fo:block>Revision 1-2</fo:block></fo:table-cell><fo:table-cell font-weight="bold" padding-left="4pt" padding-right="4pt" padding-top="2pt" padding-bottom="2pt" padding-start="2pt" padding-end="2pt"><fo:block>Thu Aug 8 2013</fo:block></fo:table-cell><fo:table-cell font-weight="bold" padding-left="4pt" padding-right="4pt" padding-top="2pt" padding-bottom="2pt" padding-start="2pt" padding-end="2pt"><fo:block>Ghislain Fourny <fo:inline font-family="Liberation Mono,monospace"><fo:inline keep-together.within-line="always" hyphenate="false"><fo:basic-link external-destination="mailto:g@28.io" font-style="italic" color="#0066cc">g@28.io</fo:basic-link></fo:inline></fo:inline></fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell number-columns-spanned="3" padding-bottom="25pt" font-weight="normal" padding-left="16pt"><fo:block>
					<fo:table id="idm139680688042832" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em" table-layout="fixed" width="100%"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-body start-indent="0pt" end-indent="0pt"><fo:table-row><fo:table-cell><fo:block> Fixed the signatures of jn:keys() and jn:members() to accept parameters of type item()*. They were forgotten in the last update. Updated the description accordingly and updating examples with more general sequences. </fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell><fo:block> Fixed some typos. </fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell><fo:block> Fixed semantics of libjn:project() to make it consistent with the other functions. </fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell><fo:block> Added libjn:remove-keys() which does the contrary of libjn:project(), i.e., removes the given keys from all input objects. </fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table>

				</fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell font-weight="bold" padding-left="4pt" padding-right="4pt" padding-top="2pt" padding-bottom="2pt" padding-start="2pt" padding-end="2pt"><fo:block>Revision 1-1</fo:block></fo:table-cell><fo:table-cell font-weight="bold" padding-left="4pt" padding-right="4pt" padding-top="2pt" padding-bottom="2pt" padding-start="2pt" padding-end="2pt"><fo:block>Mon Jul 22 2013</fo:block></fo:table-cell><fo:table-cell font-weight="bold" padding-left="4pt" padding-right="4pt" padding-top="2pt" padding-bottom="2pt" padding-start="2pt" padding-end="2pt"><fo:block>Ghislain Fourny <fo:inline font-family="Liberation Mono,monospace"><fo:inline keep-together.within-line="always" hyphenate="false"><fo:basic-link external-destination="mailto:g@28.io" font-style="italic" color="#0066cc">g@28.io</fo:basic-link></fo:inline></fo:inline></fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell number-columns-spanned="3" padding-bottom="25pt" font-weight="normal" padding-left="16pt"><fo:block>
					<fo:table id="idm139680678785488" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em" table-layout="fixed" width="100%"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-body start-indent="0pt" end-indent="0pt"><fo:table-row><fo:table-cell><fo:block> Reintroduced the parameter cast in object lookup (to a string) or array lookup (to an integer) following feedback. The general semantics of object/array lookup with unary dynamic function calls (implicit iteration on mixed sequences, empty sequence in case of mismatch) is mostly untouched, but was significantly reformulated. </fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell><fo:block> Introduced object key listing and array unboxing with 0-ary dynamic function call syntax: $o() (=jn:keys($o)) $a() (=jn:members($a)). It works on mixed sequences in the same way as object and array lookup. </fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell><fo:block> Removed the function jn:is-null() because it is redundant with the "eq" and "instance of" operators which support null. </fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell><fo:block> Removed the function jn:object() and introduced the equivalent {| |} syntax (like in the JSONiq core). </fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell><fo:block> Relaxed the functions libjn:descendant-objects, libjn:descendant-pairs, libjn:values, libjn:flatten, libjn:project to accept any sequence of items. The behavior on mixed sequences is consistent with object and array lookup. Also introduced new function libjn:descendant-arrays and relaxed jn:size to accept the empty sequence.. </fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell><fo:block> Fixed roundtrippability of decimals and doubles in jn:encode-for-roundtrip (decimals without dot were roundtripped to integers, etc). </fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell><fo:block> Fixed corner cases in JSON number serialization (trailing zeros, absence of digits, leading +, which are allowed in the JDM but not in the JSON syntax). </fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table>

				</fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell font-weight="bold" padding-left="4pt" padding-right="4pt" padding-top="2pt" padding-bottom="2pt" padding-start="2pt" padding-end="2pt"><fo:block>Revision 0.4.45</fo:block></fo:table-cell><fo:table-cell font-weight="bold" padding-left="4pt" padding-right="4pt" padding-top="2pt" padding-bottom="2pt" padding-start="2pt" padding-end="2pt"><fo:block>Mon May 27 2013</fo:block></fo:table-cell><fo:table-cell font-weight="bold" padding-left="4pt" padding-right="4pt" padding-top="2pt" padding-bottom="2pt" padding-start="2pt" padding-end="2pt"><fo:block>Ghislain Fourny <fo:inline font-family="Liberation Mono,monospace"><fo:inline keep-together.within-line="always" hyphenate="false"><fo:basic-link external-destination="mailto:g@28.io" font-style="italic" color="#0066cc">g@28.io</fo:basic-link></fo:inline></fo:inline></fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell number-columns-spanned="3" padding-bottom="25pt" font-weight="normal" padding-left="16pt"><fo:block>
					<fo:table id="idm139680679383152" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em" table-layout="fixed" width="100%"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-body start-indent="0pt" end-indent="0pt"><fo:table-row><fo:table-cell><fo:block> Relaxed object and array selection to work on any mixed sequences. In case of mismatch (i.e., (i) integer on object or atomic, or (ii) string on array or atomic), an empty sequence is now returned. No more cast is done. </fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table>

				</fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell font-weight="bold" padding-left="4pt" padding-right="4pt" padding-top="2pt" padding-bottom="2pt" padding-start="2pt" padding-end="2pt"><fo:block>Revision 0.4.44</fo:block></fo:table-cell><fo:table-cell font-weight="bold" padding-left="4pt" padding-right="4pt" padding-top="2pt" padding-bottom="2pt" padding-start="2pt" padding-end="2pt"><fo:block>Thu May 8 2013</fo:block></fo:table-cell><fo:table-cell font-weight="bold" padding-left="4pt" padding-right="4pt" padding-top="2pt" padding-bottom="2pt" padding-start="2pt" padding-end="2pt"><fo:block>Ghislain Fourny <fo:inline font-family="Liberation Mono,monospace"><fo:inline keep-together.within-line="always" hyphenate="false"><fo:basic-link external-destination="mailto:g@28.io" font-style="italic" color="#0066cc">g@28.io</fo:basic-link></fo:inline></fo:inline></fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell number-columns-spanned="3" padding-bottom="25pt" font-weight="normal" padding-left="16pt"><fo:block>
					<fo:table id="idm139680679378144" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em" table-layout="fixed" width="100%"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-body start-indent="0pt" end-indent="0pt"><fo:table-row><fo:table-cell><fo:block> Correcting various typos, errors and formatting errors, mostly in the examples (no change in semantics). </fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table>

				</fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell font-weight="bold" padding-left="4pt" padding-right="4pt" padding-top="2pt" padding-bottom="2pt" padding-start="2pt" padding-end="2pt"><fo:block>Revision 0.4.43</fo:block></fo:table-cell><fo:table-cell font-weight="bold" padding-left="4pt" padding-right="4pt" padding-top="2pt" padding-bottom="2pt" padding-start="2pt" padding-end="2pt"><fo:block>Thu Apr 4 2013</fo:block></fo:table-cell><fo:table-cell font-weight="bold" padding-left="4pt" padding-right="4pt" padding-top="2pt" padding-bottom="2pt" padding-start="2pt" padding-end="2pt"><fo:block>Ghislain Fourny <fo:inline font-family="Liberation Mono,monospace"><fo:inline keep-together.within-line="always" hyphenate="false"><fo:basic-link external-destination="mailto:ghislain.fourny@28msec.com" font-style="italic" color="#0066cc">ghislain.fourny@28msec.com</fo:basic-link></fo:inline></fo:inline></fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell number-columns-spanned="3" padding-bottom="25pt" font-weight="normal" padding-left="16pt"><fo:block>
					<fo:table id="idm139680676183136" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em" table-layout="fixed" width="100%"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-body start-indent="0pt" end-indent="0pt"><fo:table-row><fo:table-cell><fo:block> The product was renamed to "JSONiq Extension to XQuery". </fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell><fo:block> The semantics of arithmetics was modified to raise an error in case of a null operand. </fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell><fo:block> The semantics of value comparison was modified to be compatible with null operands (null eq null, and null lt any other atomic item). </fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table>

				</fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell font-weight="bold" padding-left="4pt" padding-right="4pt" padding-top="2pt" padding-bottom="2pt" padding-start="2pt" padding-end="2pt"><fo:block>Revision 0.4.42</fo:block></fo:table-cell><fo:table-cell font-weight="bold" padding-left="4pt" padding-right="4pt" padding-top="2pt" padding-bottom="2pt" padding-start="2pt" padding-end="2pt"><fo:block>Thu Sep 27 2012</fo:block></fo:table-cell><fo:table-cell font-weight="bold" padding-left="4pt" padding-right="4pt" padding-top="2pt" padding-bottom="2pt" padding-start="2pt" padding-end="2pt"><fo:block>Ghislain Fourny <fo:inline font-family="Liberation Mono,monospace"><fo:inline keep-together.within-line="always" hyphenate="false"><fo:basic-link external-destination="mailto:ghislain.fourny@28msec.com" font-style="italic" color="#0066cc">ghislain.fourny@28msec.com</fo:basic-link></fo:inline></fo:inline></fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell number-columns-spanned="3" padding-bottom="25pt" font-weight="normal" padding-left="16pt"><fo:block>
					<fo:table id="idm139680678383696" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em" table-layout="fixed" width="100%"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-body start-indent="0pt" end-indent="0pt"><fo:table-row><fo:table-cell><fo:block> The hybrid output method now serializes XML nodes that are found inside objects or arrays to JSON strings. </fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table>

				</fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell font-weight="bold" padding-left="4pt" padding-right="4pt" padding-top="2pt" padding-bottom="2pt" padding-start="2pt" padding-end="2pt"><fo:block>Revision 0.4.41</fo:block></fo:table-cell><fo:table-cell font-weight="bold" padding-left="4pt" padding-right="4pt" padding-top="2pt" padding-bottom="2pt" padding-start="2pt" padding-end="2pt"><fo:block>Tue Sep 25 2012</fo:block></fo:table-cell><fo:table-cell font-weight="bold" padding-left="4pt" padding-right="4pt" padding-top="2pt" padding-bottom="2pt" padding-start="2pt" padding-end="2pt"><fo:block>Ghislain Fourny <fo:inline font-family="Liberation Mono,monospace"><fo:inline keep-together.within-line="always" hyphenate="false"><fo:basic-link external-destination="mailto:ghislain.fourny@28msec.com" font-style="italic" color="#0066cc">ghislain.fourny@28msec.com</fo:basic-link></fo:inline></fo:inline></fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell number-columns-spanned="3" padding-bottom="25pt" font-weight="normal" padding-left="16pt"><fo:block>
					<fo:table id="idm139680678378832" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em" table-layout="fixed" width="100%"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-body start-indent="0pt" end-indent="0pt"><fo:table-row><fo:table-cell><fo:block> Extended fn:string to raise an error for JSON items. Added JNTY0024. </fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell><fo:block> Made definition of roundtripping functions more precise (for the case where there is a top-level item which is a JSON native value). </fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table>

				</fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell font-weight="bold" padding-left="4pt" padding-right="4pt" padding-top="2pt" padding-bottom="2pt" padding-start="2pt" padding-end="2pt"><fo:block>Revision 0.4.40</fo:block></fo:table-cell><fo:table-cell font-weight="bold" padding-left="4pt" padding-right="4pt" padding-top="2pt" padding-bottom="2pt" padding-start="2pt" padding-end="2pt"><fo:block>Mon Sep 24 2012</fo:block></fo:table-cell><fo:table-cell font-weight="bold" padding-left="4pt" padding-right="4pt" padding-top="2pt" padding-bottom="2pt" padding-start="2pt" padding-end="2pt"><fo:block>Ghislain Fourny <fo:inline font-family="Liberation Mono,monospace"><fo:inline keep-together.within-line="always" hyphenate="false"><fo:basic-link external-destination="mailto:ghislain.fourny@28msec.com" font-style="italic" color="#0066cc">ghislain.fourny@28msec.com</fo:basic-link></fo:inline></fo:inline></fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell number-columns-spanned="3" padding-bottom="25pt" font-weight="normal" padding-left="16pt"><fo:block>
					<fo:table id="idm139680678373504" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em" table-layout="fixed" width="100%"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-body start-indent="0pt" end-indent="0pt"><fo:table-row><fo:table-cell><fo:block> Renamed JNTY0020 and added JNTY0023. </fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell><fo:block> Changed default of encode-for-roundtrip to omit XML declaration. </fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell><fo:block> Corrected signature of roundtripping functions to allow for full recursion. </fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table>

				</fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell font-weight="bold" padding-left="4pt" padding-right="4pt" padding-top="2pt" padding-bottom="2pt" padding-start="2pt" padding-end="2pt"><fo:block>Revision 0.4.39</fo:block></fo:table-cell><fo:table-cell font-weight="bold" padding-left="4pt" padding-right="4pt" padding-top="2pt" padding-bottom="2pt" padding-start="2pt" padding-end="2pt"><fo:block>Fri Sep 14 2012</fo:block></fo:table-cell><fo:table-cell font-weight="bold" padding-left="4pt" padding-right="4pt" padding-top="2pt" padding-bottom="2pt" padding-start="2pt" padding-end="2pt"><fo:block>Ghislain Fourny <fo:inline font-family="Liberation Mono,monospace"><fo:inline keep-together.within-line="always" hyphenate="false"><fo:basic-link external-destination="mailto:ghislain.fourny@28msec.com" font-style="italic" color="#0066cc">ghislain.fourny@28msec.com</fo:basic-link></fo:inline></fo:inline></fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell number-columns-spanned="3" padding-bottom="25pt" font-weight="normal" padding-left="16pt"><fo:block>
					<fo:table id="idm139680677849840" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em" table-layout="fixed" width="100%"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-body start-indent="0pt" end-indent="0pt"><fo:table-row><fo:table-cell><fo:block> Qualified names are now treated specially in jn:encode-for-roundtrip and jn:decode-from-roundtrip. </fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table>

				</fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell font-weight="bold" padding-left="4pt" padding-right="4pt" padding-top="2pt" padding-bottom="2pt" padding-start="2pt" padding-end="2pt"><fo:block>Revision 0.4.38</fo:block></fo:table-cell><fo:table-cell font-weight="bold" padding-left="4pt" padding-right="4pt" padding-top="2pt" padding-bottom="2pt" padding-start="2pt" padding-end="2pt"><fo:block>Thu Sep 13 2012</fo:block></fo:table-cell><fo:table-cell font-weight="bold" padding-left="4pt" padding-right="4pt" padding-top="2pt" padding-bottom="2pt" padding-start="2pt" padding-end="2pt"><fo:block>Ghislain Fourny <fo:inline font-family="Liberation Mono,monospace"><fo:inline keep-together.within-line="always" hyphenate="false"><fo:basic-link external-destination="mailto:ghislain.fourny@28msec.com" font-style="italic" color="#0066cc">ghislain.fourny@28msec.com</fo:basic-link></fo:inline></fo:inline></fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell number-columns-spanned="3" padding-bottom="25pt" font-weight="normal" padding-left="16pt"><fo:block>
					<fo:table id="idm139680677845104" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em" table-layout="fixed" width="100%"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-body start-indent="0pt" end-indent="0pt"><fo:table-row><fo:table-cell><fo:block> Further specified error handling for key (atomization error, cast error) in pair constructor. </fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell><fo:block> Fixed appending expression syntax to be in sync with insert syntax. </fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell><fo:block> Object and array selectors are now atomized and cast to xs:string and xs:integer respectively. </fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell><fo:block> The alternate object insertion syntax supports several pairs. </fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table>

				</fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell font-weight="bold" padding-left="4pt" padding-right="4pt" padding-top="2pt" padding-bottom="2pt" padding-start="2pt" padding-end="2pt"><fo:block>Revision 0.4.37</fo:block></fo:table-cell><fo:table-cell font-weight="bold" padding-left="4pt" padding-right="4pt" padding-top="2pt" padding-bottom="2pt" padding-start="2pt" padding-end="2pt"><fo:block>Tue Sep 11 2012</fo:block></fo:table-cell><fo:table-cell font-weight="bold" padding-left="4pt" padding-right="4pt" padding-top="2pt" padding-bottom="2pt" padding-start="2pt" padding-end="2pt"><fo:block>Ghislain Fourny <fo:inline font-family="Liberation Mono,monospace"><fo:inline keep-together.within-line="always" hyphenate="false"><fo:basic-link external-destination="mailto:ghislain.fourny@28msec.com" font-style="italic" color="#0066cc">ghislain.fourny@28msec.com</fo:basic-link></fo:inline></fo:inline></fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell number-columns-spanned="3" padding-bottom="25pt" font-weight="normal" padding-left="16pt"><fo:block>
					<fo:table id="idm139680677838864" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em" table-layout="fixed" width="100%"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-body start-indent="0pt" end-indent="0pt"><fo:table-row><fo:table-cell><fo:block> Fixed error code of jerr:JNSE0022. </fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell><fo:block> Moved libjn:members to jn:members (builtin). </fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell><fo:block> Corrected example query for jn:encode-for-roundtrip and excluded NaN/infinite from native JSON mapping. </fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table>

				</fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell font-weight="bold" padding-left="4pt" padding-right="4pt" padding-top="2pt" padding-bottom="2pt" padding-start="2pt" padding-end="2pt"><fo:block>Revision 0.4.36</fo:block></fo:table-cell><fo:table-cell font-weight="bold" padding-left="4pt" padding-right="4pt" padding-top="2pt" padding-bottom="2pt" padding-start="2pt" padding-end="2pt"><fo:block>Mon Sep 10 2012</fo:block></fo:table-cell><fo:table-cell font-weight="bold" padding-left="4pt" padding-right="4pt" padding-top="2pt" padding-bottom="2pt" padding-start="2pt" padding-end="2pt"><fo:block>Ghislain Fourny <fo:inline font-family="Liberation Mono,monospace"><fo:inline keep-together.within-line="always" hyphenate="false"><fo:basic-link external-destination="mailto:ghislain.fourny@28msec.com" font-style="italic" color="#0066cc">ghislain.fourny@28msec.com</fo:basic-link></fo:inline></fo:inline></fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell number-columns-spanned="3" padding-bottom="25pt" font-weight="normal" padding-left="16pt"><fo:block>
					<fo:table id="idm139680685416304" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em" table-layout="fixed" width="100%"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-body start-indent="0pt" end-indent="0pt"><fo:table-row><fo:table-cell><fo:block> Changed error code to err:XPTY0004 if a key in a pair constructor cannot be atomized and cast to a string. </fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell><fo:block> Further specified error-handling for jn:parse-json. Changed default to accepting multiple items. </fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell><fo:block> Simplified semantics for null in comparison/arithmetics. Introduced jn:is-null(). </fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell><fo:block> Introduced a lightweight syntax for inserting a single pair into an object (optional curly braces). </fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell><fo:block> Default output method is now JSON-XML-hybrid (also for fn:trace). </fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell><fo:block> Made changes to sequence normalization orthogonal to the output method used. Introduced error codes. </fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table>

				</fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell font-weight="bold" padding-left="4pt" padding-right="4pt" padding-top="2pt" padding-bottom="2pt" padding-start="2pt" padding-end="2pt"><fo:block>Revision 0.4.35</fo:block></fo:table-cell><fo:table-cell font-weight="bold" padding-left="4pt" padding-right="4pt" padding-top="2pt" padding-bottom="2pt" padding-start="2pt" padding-end="2pt"><fo:block>Fri Sep 07 2012</fo:block></fo:table-cell><fo:table-cell font-weight="bold" padding-left="4pt" padding-right="4pt" padding-top="2pt" padding-bottom="2pt" padding-start="2pt" padding-end="2pt"><fo:block>Ghislain Fourny <fo:inline font-family="Liberation Mono,monospace"><fo:inline keep-together.within-line="always" hyphenate="false"><fo:basic-link external-destination="mailto:ghislain.fourny@28msec.com" font-style="italic" color="#0066cc">ghislain.fourny@28msec.com</fo:basic-link></fo:inline></fo:inline></fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell number-columns-spanned="3" padding-bottom="25pt" font-weight="normal" padding-left="16pt"><fo:block>
					<fo:table id="idm139680685409120" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em" table-layout="fixed" width="100%"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-body start-indent="0pt" end-indent="0pt"><fo:table-row><fo:table-cell><fo:block> The json insert syntax was simplified and relaxed. </fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table>

				</fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell font-weight="bold" padding-left="4pt" padding-right="4pt" padding-top="2pt" padding-bottom="2pt" padding-start="2pt" padding-end="2pt"><fo:block>Revision 0.4.34</fo:block></fo:table-cell><fo:table-cell font-weight="bold" padding-left="4pt" padding-right="4pt" padding-top="2pt" padding-bottom="2pt" padding-start="2pt" padding-end="2pt"><fo:block>Thu Sep 06 2012</fo:block></fo:table-cell><fo:table-cell font-weight="bold" padding-left="4pt" padding-right="4pt" padding-top="2pt" padding-bottom="2pt" padding-start="2pt" padding-end="2pt"><fo:block>Ghislain Fourny <fo:inline font-family="Liberation Mono,monospace"><fo:inline keep-together.within-line="always" hyphenate="false"><fo:basic-link external-destination="mailto:ghislain.fourny@28msec.com" font-style="italic" color="#0066cc">ghislain.fourny@28msec.com</fo:basic-link></fo:inline></fo:inline></fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell number-columns-spanned="3" padding-bottom="25pt" font-weight="normal" padding-left="16pt"><fo:block>
					<fo:table id="idm139680685404384" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em" table-layout="fixed" width="100%"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-body start-indent="0pt" end-indent="0pt"><fo:table-row><fo:table-cell><fo:block> Relaxed condition that an expression computing a value (in a pair constructor, an insert expression or a replace expression) must return a single item. If no item, null is used instead, if more than one item, an array is built to wrap the items. Errors jerr:JNTY0002 and jerr:JNUP0017 disappear. </fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell><fo:block> jn:parse-json-sequence was merged with jn:parse-json (using an object to transmit parameters). </fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell><fo:block> jn:encode-for-roundtrip and jn:decode-from-roundtrip also now use an object to transmit parameters. </fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell><fo:block> A semantics is now specified for arithmetic operations involving null (null is returned). The semantics of value and general comparison involving nulls was updated. </fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table>

				</fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell font-weight="bold" padding-left="4pt" padding-right="4pt" padding-top="2pt" padding-bottom="2pt" padding-start="2pt" padding-end="2pt"><fo:block>Revision 0.4.33</fo:block></fo:table-cell><fo:table-cell font-weight="bold" padding-left="4pt" padding-right="4pt" padding-top="2pt" padding-bottom="2pt" padding-start="2pt" padding-end="2pt"><fo:block>Tue Sep 04 2012</fo:block></fo:table-cell><fo:table-cell font-weight="bold" padding-left="4pt" padding-right="4pt" padding-top="2pt" padding-bottom="2pt" padding-start="2pt" padding-end="2pt"><fo:block>Ghislain Fourny <fo:inline font-family="Liberation Mono,monospace"><fo:inline keep-together.within-line="always" hyphenate="false"><fo:basic-link external-destination="mailto:ghislain.fourny@28msec.com" font-style="italic" color="#0066cc">ghislain.fourny@28msec.com</fo:basic-link></fo:inline></fo:inline></fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell number-columns-spanned="3" padding-bottom="25pt" font-weight="normal" padding-left="16pt"><fo:block>
					<fo:table id="idm139680685397808" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em" table-layout="fixed" width="100%"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-body start-indent="0pt" end-indent="0pt"><fo:table-row><fo:table-cell><fo:block> Corrected typos. Capitalized JSON and XML in hybrid output method. </fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell><fo:block> Introduced jn:parse-json-sequence to support roundtripping sequences. </fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table>

				</fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell font-weight="bold" padding-left="4pt" padding-right="4pt" padding-top="2pt" padding-bottom="2pt" padding-start="2pt" padding-end="2pt"><fo:block>Revision 0.4.32</fo:block></fo:table-cell><fo:table-cell font-weight="bold" padding-left="4pt" padding-right="4pt" padding-top="2pt" padding-bottom="2pt" padding-start="2pt" padding-end="2pt"><fo:block>Mon Sep 03 2012</fo:block></fo:table-cell><fo:table-cell font-weight="bold" padding-left="4pt" padding-right="4pt" padding-top="2pt" padding-bottom="2pt" padding-start="2pt" padding-end="2pt"><fo:block>Ghislain Fourny <fo:inline font-family="Liberation Mono,monospace"><fo:inline keep-together.within-line="always" hyphenate="false"><fo:basic-link external-destination="mailto:ghislain.fourny@28msec.com" font-style="italic" color="#0066cc">ghislain.fourny@28msec.com</fo:basic-link></fo:inline></fo:inline></fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell number-columns-spanned="3" padding-bottom="25pt" font-weight="normal" padding-left="16pt"><fo:block>
					<fo:table id="idm139680685392464" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em" table-layout="fixed" width="100%"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-body start-indent="0pt" end-indent="0pt"><fo:table-row><fo:table-cell><fo:block> Split the serialization roundtripping facility into a much simpler specification of the JSON output method and two functions in the builtin module. Only one serialization parameter (specifying whether multiple items are allowed is left). </fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell><fo:block> jerr:JNSE0013 disappears. </fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table>

				</fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell font-weight="bold" padding-left="4pt" padding-right="4pt" padding-top="2pt" padding-bottom="2pt" padding-start="2pt" padding-end="2pt"><fo:block>Revision 0.4.31</fo:block></fo:table-cell><fo:table-cell font-weight="bold" padding-left="4pt" padding-right="4pt" padding-top="2pt" padding-bottom="2pt" padding-start="2pt" padding-end="2pt"><fo:block>Fri Aug 31 2012</fo:block></fo:table-cell><fo:table-cell font-weight="bold" padding-left="4pt" padding-right="4pt" padding-top="2pt" padding-bottom="2pt" padding-start="2pt" padding-end="2pt"><fo:block>Ghislain Fourny <fo:inline font-family="Liberation Mono,monospace"><fo:inline keep-together.within-line="always" hyphenate="false"><fo:basic-link external-destination="mailto:ghislain.fourny@28msec.com" font-style="italic" color="#0066cc">ghislain.fourny@28msec.com</fo:basic-link></fo:inline></fo:inline></fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell number-columns-spanned="3" padding-bottom="25pt" font-weight="normal" padding-left="16pt"><fo:block>
					<fo:table id="idm139680685387024" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em" table-layout="fixed" width="100%"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-body start-indent="0pt" end-indent="0pt"><fo:table-row><fo:table-cell><fo:block> Sequences beginning with an object or array now have an effective boolean value, which is true. </fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell><fo:block> jsoniq-boolean-and-null-literals is set to "yes" by default. </fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table>

				</fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell font-weight="bold" padding-left="4pt" padding-right="4pt" padding-top="2pt" padding-bottom="2pt" padding-start="2pt" padding-end="2pt"><fo:block>Revision 0.4.30</fo:block></fo:table-cell><fo:table-cell font-weight="bold" padding-left="4pt" padding-right="4pt" padding-top="2pt" padding-bottom="2pt" padding-start="2pt" padding-end="2pt"><fo:block>Thu Aug 30 2012</fo:block></fo:table-cell><fo:table-cell font-weight="bold" padding-left="4pt" padding-right="4pt" padding-top="2pt" padding-bottom="2pt" padding-start="2pt" padding-end="2pt"><fo:block>Ghislain Fourny <fo:inline font-family="Liberation Mono,monospace"><fo:inline keep-together.within-line="always" hyphenate="false"><fo:basic-link external-destination="mailto:ghislain.fourny@28msec.com" font-style="italic" color="#0066cc">ghislain.fourny@28msec.com</fo:basic-link></fo:inline></fo:inline></fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell number-columns-spanned="3" padding-bottom="25pt" font-weight="normal" padding-left="16pt"><fo:block>
					<fo:table id="idm139680685381760" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em" table-layout="fixed" width="100%"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-body start-indent="0pt" end-indent="0pt"><fo:table-row><fo:table-cell><fo:block> Significantly rewrote the serialization section to take feedback received into account: (i) some serialization parameters were renamed (ii) If jsoniq-roundtrip-extensions is set to no, then non-JSON atomic values are automatically serialized to the JSON literal that makes the most sense (iii) the json-xml-hybrid output method was introduced, mostly meant as a default output method for an engine for convenience. </fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table>

				</fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell font-weight="bold" padding-left="4pt" padding-right="4pt" padding-top="2pt" padding-bottom="2pt" padding-start="2pt" padding-end="2pt"><fo:block>Revision 0.4.29</fo:block></fo:table-cell><fo:table-cell font-weight="bold" padding-left="4pt" padding-right="4pt" padding-top="2pt" padding-bottom="2pt" padding-start="2pt" padding-end="2pt"><fo:block>Tue Aug 28 2012</fo:block></fo:table-cell><fo:table-cell font-weight="bold" padding-left="4pt" padding-right="4pt" padding-top="2pt" padding-bottom="2pt" padding-start="2pt" padding-end="2pt"><fo:block>Ghislain Fourny <fo:inline font-family="Liberation Mono,monospace"><fo:inline keep-together.within-line="always" hyphenate="false"><fo:basic-link external-destination="mailto:ghislain.fourny@28msec.com" font-style="italic" color="#0066cc">ghislain.fourny@28msec.com</fo:basic-link></fo:inline></fo:inline></fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell number-columns-spanned="3" padding-bottom="25pt" font-weight="normal" padding-left="16pt"><fo:block>
					<fo:table id="idm139680685376592" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em" table-layout="fixed" width="100%"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-body start-indent="0pt" end-indent="0pt"><fo:table-row><fo:table-cell><fo:block> Added function jn:null. </fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell><fo:block> Specified semantics for casting to/from jn:null. </fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell><fo:block> Specified semantics for value and general comparisons involving JSON nulls. </fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table>

				</fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell font-weight="bold" padding-left="4pt" padding-right="4pt" padding-top="2pt" padding-bottom="2pt" padding-start="2pt" padding-end="2pt"><fo:block>Revision 0.4.28</fo:block></fo:table-cell><fo:table-cell font-weight="bold" padding-left="4pt" padding-right="4pt" padding-top="2pt" padding-bottom="2pt" padding-start="2pt" padding-end="2pt"><fo:block>Wed Aug 15 2012</fo:block></fo:table-cell><fo:table-cell font-weight="bold" padding-left="4pt" padding-right="4pt" padding-top="2pt" padding-bottom="2pt" padding-start="2pt" padding-end="2pt"><fo:block>Ghislain Fourny <fo:inline font-family="Liberation Mono,monospace"><fo:inline keep-together.within-line="always" hyphenate="false"><fo:basic-link external-destination="mailto:ghislain.fourny@28msec.com" font-style="italic" color="#0066cc">ghislain.fourny@28msec.com</fo:basic-link></fo:inline></fo:inline></fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell number-columns-spanned="3" padding-bottom="25pt" font-weight="normal" padding-left="16pt"><fo:block>
					<fo:table id="idm139680685370960" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em" table-layout="fixed" width="100%"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-body start-indent="0pt" end-indent="0pt"><fo:table-row><fo:table-cell><fo:block> Added namespace for library functions. </fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table>

				</fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell font-weight="bold" padding-left="4pt" padding-right="4pt" padding-top="2pt" padding-bottom="2pt" padding-start="2pt" padding-end="2pt"><fo:block>Revision 0.4.27</fo:block></fo:table-cell><fo:table-cell font-weight="bold" padding-left="4pt" padding-right="4pt" padding-top="2pt" padding-bottom="2pt" padding-start="2pt" padding-end="2pt"><fo:block>Mon Aug 13 2012</fo:block></fo:table-cell><fo:table-cell font-weight="bold" padding-left="4pt" padding-right="4pt" padding-top="2pt" padding-bottom="2pt" padding-start="2pt" padding-end="2pt"><fo:block>Ghislain Fourny <fo:inline font-family="Liberation Mono,monospace"><fo:inline keep-together.within-line="always" hyphenate="false"><fo:basic-link external-destination="mailto:ghislain.fourny@28msec.com" font-style="italic" color="#0066cc">ghislain.fourny@28msec.com</fo:basic-link></fo:inline></fo:inline></fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell number-columns-spanned="3" padding-bottom="25pt" font-weight="normal" padding-left="16pt"><fo:block>
					<fo:table id="idm139680685366224" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em" table-layout="fixed" width="100%"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-body start-indent="0pt" end-indent="0pt"><fo:table-row><fo:table-cell><fo:block> Renamed libjn:accumulator-object-union as libjn:accumulate. Corrected some typos in library function code. Completed paragraph on implementation. </fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table>

				</fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell font-weight="bold" padding-left="4pt" padding-right="4pt" padding-top="2pt" padding-bottom="2pt" padding-start="2pt" padding-end="2pt"><fo:block>Revision 0.4.26</fo:block></fo:table-cell><fo:table-cell font-weight="bold" padding-left="4pt" padding-right="4pt" padding-top="2pt" padding-bottom="2pt" padding-start="2pt" padding-end="2pt"><fo:block>Fri Aug 10 2012</fo:block></fo:table-cell><fo:table-cell font-weight="bold" padding-left="4pt" padding-right="4pt" padding-top="2pt" padding-bottom="2pt" padding-start="2pt" padding-end="2pt"><fo:block>Ghislain Fourny <fo:inline font-family="Liberation Mono,monospace"><fo:inline keep-together.within-line="always" hyphenate="false"><fo:basic-link external-destination="mailto:ghislain.fourny@28msec.com" font-style="italic" color="#0066cc">ghislain.fourny@28msec.com</fo:basic-link></fo:inline></fo:inline></fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell number-columns-spanned="3" padding-bottom="25pt" font-weight="normal" padding-left="16pt"><fo:block>
					<fo:table id="idm139680685361328" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em" table-layout="fixed" width="100%"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-body start-indent="0pt" end-indent="0pt"><fo:table-row><fo:table-cell><fo:block> Corrected and moved a dynamic object construction example to lib:object(). </fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table>

				</fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell font-weight="bold" padding-left="4pt" padding-right="4pt" padding-top="2pt" padding-bottom="2pt" padding-start="2pt" padding-end="2pt"><fo:block>Revision 0.4.25</fo:block></fo:table-cell><fo:table-cell font-weight="bold" padding-left="4pt" padding-right="4pt" padding-top="2pt" padding-bottom="2pt" padding-start="2pt" padding-end="2pt"><fo:block>Wed Aug 8 2012</fo:block></fo:table-cell><fo:table-cell font-weight="bold" padding-left="4pt" padding-right="4pt" padding-top="2pt" padding-bottom="2pt" padding-start="2pt" padding-end="2pt"><fo:block>Ghislain Fourny <fo:inline font-family="Liberation Mono,monospace"><fo:inline keep-together.within-line="always" hyphenate="false"><fo:basic-link external-destination="mailto:ghislain.fourny@28msec.com" font-style="italic" color="#0066cc">ghislain.fourny@28msec.com</fo:basic-link></fo:inline></fo:inline></fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell number-columns-spanned="3" padding-bottom="25pt" font-weight="normal" padding-left="16pt"><fo:block>
					<fo:table id="idm139680685356592" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em" table-layout="fixed" width="100%"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-body start-indent="0pt" end-indent="0pt"><fo:table-row><fo:table-cell><fo:block> Added a chapter about the implementation in Zorba. </fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table>

				</fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell font-weight="bold" padding-left="4pt" padding-right="4pt" padding-top="2pt" padding-bottom="2pt" padding-start="2pt" padding-end="2pt"><fo:block>Revision 0.4.24</fo:block></fo:table-cell><fo:table-cell font-weight="bold" padding-left="4pt" padding-right="4pt" padding-top="2pt" padding-bottom="2pt" padding-start="2pt" padding-end="2pt"><fo:block>Tue Aug 7 2012</fo:block></fo:table-cell><fo:table-cell font-weight="bold" padding-left="4pt" padding-right="4pt" padding-top="2pt" padding-bottom="2pt" padding-start="2pt" padding-end="2pt"><fo:block>Ghislain Fourny <fo:inline font-family="Liberation Mono,monospace"><fo:inline keep-together.within-line="always" hyphenate="false"><fo:basic-link external-destination="mailto:ghislain.fourny@28msec.com" font-style="italic" color="#0066cc">ghislain.fourny@28msec.com</fo:basic-link></fo:inline></fo:inline></fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell number-columns-spanned="3" padding-bottom="25pt" font-weight="normal" padding-left="16pt"><fo:block>
					<fo:table id="idm139680676632816" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em" table-layout="fixed" width="100%"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-body start-indent="0pt" end-indent="0pt"><fo:table-row><fo:table-cell><fo:block> Fixed array update grammar rules. </fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table>

				</fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell font-weight="bold" padding-left="4pt" padding-right="4pt" padding-top="2pt" padding-bottom="2pt" padding-start="2pt" padding-end="2pt"><fo:block>Revision 0.4.23</fo:block></fo:table-cell><fo:table-cell font-weight="bold" padding-left="4pt" padding-right="4pt" padding-top="2pt" padding-bottom="2pt" padding-start="2pt" padding-end="2pt"><fo:block>Thu Jul 31 2012</fo:block></fo:table-cell><fo:table-cell font-weight="bold" padding-left="4pt" padding-right="4pt" padding-top="2pt" padding-bottom="2pt" padding-start="2pt" padding-end="2pt"><fo:block>Ghislain Fourny <fo:inline font-family="Liberation Mono,monospace"><fo:inline keep-together.within-line="always" hyphenate="false"><fo:basic-link external-destination="mailto:ghislain.fourny@28msec.com" font-style="italic" color="#0066cc">ghislain.fourny@28msec.com</fo:basic-link></fo:inline></fo:inline></fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell number-columns-spanned="3" padding-bottom="25pt" font-weight="normal" padding-left="16pt"><fo:block>
					<fo:table id="idm139680676628080" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em" table-layout="fixed" width="100%"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-body start-indent="0pt" end-indent="0pt"><fo:table-row><fo:table-cell><fo:block> Changed JNDY0018 to JNTY0018. </fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell><fo:block> Added more details on JSONiq string support. </fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table>

				</fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell font-weight="bold" padding-left="4pt" padding-right="4pt" padding-top="2pt" padding-bottom="2pt" padding-start="2pt" padding-end="2pt"><fo:block>Revision 0.4.22</fo:block></fo:table-cell><fo:table-cell font-weight="bold" padding-left="4pt" padding-right="4pt" padding-top="2pt" padding-bottom="2pt" padding-start="2pt" padding-end="2pt"><fo:block>Thu Jul 24 2012</fo:block></fo:table-cell><fo:table-cell font-weight="bold" padding-left="4pt" padding-right="4pt" padding-top="2pt" padding-bottom="2pt" padding-start="2pt" padding-end="2pt"><fo:block>Ghislain Fourny <fo:inline font-family="Liberation Mono,monospace"><fo:inline keep-together.within-line="always" hyphenate="false"><fo:basic-link external-destination="mailto:ghislain.fourny@28msec.com" font-style="italic" color="#0066cc">ghislain.fourny@28msec.com</fo:basic-link></fo:inline></fo:inline></fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell number-columns-spanned="3" padding-bottom="25pt" font-weight="normal" padding-left="16pt"><fo:block>
					<fo:table id="idm139680676622896" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em" table-layout="fixed" width="100%"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-body start-indent="0pt" end-indent="0pt"><fo:table-row><fo:table-cell><fo:block> Objects and arrays are no longer matching any function types. </fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell><fo:block> Updated type hierarchy picture. </fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table>

				</fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell font-weight="bold" padding-left="4pt" padding-right="4pt" padding-top="2pt" padding-bottom="2pt" padding-start="2pt" padding-end="2pt"><fo:block>Revision 0-21</fo:block></fo:table-cell><fo:table-cell font-weight="bold" padding-left="4pt" padding-right="4pt" padding-top="2pt" padding-bottom="2pt" padding-start="2pt" padding-end="2pt"><fo:block>Thu Jul 24 2012</fo:block></fo:table-cell><fo:table-cell font-weight="bold" padding-left="4pt" padding-right="4pt" padding-top="2pt" padding-bottom="2pt" padding-start="2pt" padding-end="2pt"><fo:block>Ghislain Fourny <fo:inline font-family="Liberation Mono,monospace"><fo:inline keep-together.within-line="always" hyphenate="false"><fo:basic-link external-destination="mailto:ghislain.fourny@28msec.com" font-style="italic" color="#0066cc">ghislain.fourny@28msec.com</fo:basic-link></fo:inline></fo:inline></fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell number-columns-spanned="3" padding-bottom="25pt" font-weight="normal" padding-left="16pt"><fo:block>
					<fo:table id="idm139680676617632" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em" table-layout="fixed" width="100%"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-body start-indent="0pt" end-indent="0pt"><fo:table-row><fo:table-cell><fo:block> Corrected typos (jn:null, object constructor grammar in grammar section, residual {| |}s). </fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell><fo:block> Added update features in the introductive list. </fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table>

				</fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell font-weight="bold" padding-left="4pt" padding-right="4pt" padding-top="2pt" padding-bottom="2pt" padding-start="2pt" padding-end="2pt"><fo:block>Revision 0-20</fo:block></fo:table-cell><fo:table-cell font-weight="bold" padding-left="4pt" padding-right="4pt" padding-top="2pt" padding-bottom="2pt" padding-start="2pt" padding-end="2pt"><fo:block>Thu Jun 21 2012</fo:block></fo:table-cell><fo:table-cell font-weight="bold" padding-left="4pt" padding-right="4pt" padding-top="2pt" padding-bottom="2pt" padding-start="2pt" padding-end="2pt"><fo:block>Ghislain Fourny <fo:inline font-family="Liberation Mono,monospace"><fo:inline keep-together.within-line="always" hyphenate="false"><fo:basic-link external-destination="mailto:ghislain.fourny@28msec.com" font-style="italic" color="#0066cc">ghislain.fourny@28msec.com</fo:basic-link></fo:inline></fo:inline></fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell number-columns-spanned="3" padding-bottom="25pt" font-weight="normal" padding-left="16pt"><fo:block>
					<fo:table id="idm139680676612448" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em" table-layout="fixed" width="100%"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-body start-indent="0pt" end-indent="0pt"><fo:table-row><fo:table-cell><fo:block> Added an error code checking for single item for insert/replace expressions. </fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell><fo:block> Corrected typos. </fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell><fo:block> Changed JNTY0007 to JNUP0007 and JNTY0008 to JNUP0008. </fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table>

				</fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell font-weight="bold" padding-left="4pt" padding-right="4pt" padding-top="2pt" padding-bottom="2pt" padding-start="2pt" padding-end="2pt"><fo:block>Revision 0-19</fo:block></fo:table-cell><fo:table-cell font-weight="bold" padding-left="4pt" padding-right="4pt" padding-top="2pt" padding-bottom="2pt" padding-start="2pt" padding-end="2pt"><fo:block>Thu Jun 11 2012</fo:block></fo:table-cell><fo:table-cell font-weight="bold" padding-left="4pt" padding-right="4pt" padding-top="2pt" padding-bottom="2pt" padding-start="2pt" padding-end="2pt"><fo:block>Ghislain Fourny <fo:inline font-family="Liberation Mono,monospace"><fo:inline keep-together.within-line="always" hyphenate="false"><fo:basic-link external-destination="mailto:ghislain.fourny@28msec.com" font-style="italic" color="#0066cc">ghislain.fourny@28msec.com</fo:basic-link></fo:inline></fo:inline></fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell number-columns-spanned="3" padding-bottom="25pt" font-weight="normal" padding-left="16pt"><fo:block>
					<fo:table id="idm139680676606704" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em" table-layout="fixed" width="100%"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-body start-indent="0pt" end-indent="0pt"><fo:table-row><fo:table-cell><fo:block> Added error code if the selector cannot be resolved when creating an update primitive. </fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell><fo:block> Updated JSONiq value serialization examples to the right double lexical value of infinity. </fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table>

				</fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell font-weight="bold" padding-left="4pt" padding-right="4pt" padding-top="2pt" padding-bottom="2pt" padding-start="2pt" padding-end="2pt"><fo:block>Revision 0-18</fo:block></fo:table-cell><fo:table-cell font-weight="bold" padding-left="4pt" padding-right="4pt" padding-top="2pt" padding-bottom="2pt" padding-start="2pt" padding-end="2pt"><fo:block>Thu May 24 2012</fo:block></fo:table-cell><fo:table-cell font-weight="bold" padding-left="4pt" padding-right="4pt" padding-top="2pt" padding-bottom="2pt" padding-start="2pt" padding-end="2pt"><fo:block>Ghislain Fourny <fo:inline font-family="Liberation Mono,monospace"><fo:inline keep-together.within-line="always" hyphenate="false"><fo:basic-link external-destination="mailto:ghislain.fourny@28msec.com" font-style="italic" color="#0066cc">ghislain.fourny@28msec.com</fo:basic-link></fo:inline></fo:inline></fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell number-columns-spanned="3" padding-bottom="25pt" font-weight="normal" padding-left="16pt"><fo:block>
					<fo:table id="idm139680676601520" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em" table-layout="fixed" width="100%"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-body start-indent="0pt" end-indent="0pt"><fo:table-row><fo:table-cell><fo:block> Pairs are no longer exposed as items. There are now just singleton objects (but the word pair is still used in this spec for a string/value pair); </fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell><fo:block> Update primitives are decoupled from a new update syntax; </fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell><fo:block> Object and array selectors return values; </fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell><fo:block> Dynamic invocation on sequence of functions/arrays/objects; </fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell><fo:block> Minimalistic builtin functions. Still, some functions defined for convenience (relational algebra projection, intersection, ...); </fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell><fo:block> Atomization and EBV raise errors or objects and arrays; </fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell><fo:block> There are only one serialization method: json with three new serialization parameters; </fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell><fo:block> Boolean and null literals can be activated with an option; </fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell><fo:block> Multiple items can be serialized according to serialization parameter settings. </fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table>

				</fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell font-weight="bold" padding-left="4pt" padding-right="4pt" padding-top="2pt" padding-bottom="2pt" padding-start="2pt" padding-end="2pt"><fo:block>Revision 0-17</fo:block></fo:table-cell><fo:table-cell font-weight="bold" padding-left="4pt" padding-right="4pt" padding-top="2pt" padding-bottom="2pt" padding-start="2pt" padding-end="2pt"><fo:block>Thu Dec 22 2011</fo:block></fo:table-cell><fo:table-cell font-weight="bold" padding-left="4pt" padding-right="4pt" padding-top="2pt" padding-bottom="2pt" padding-start="2pt" padding-end="2pt"><fo:block>Jonathan Robie <fo:inline font-family="Liberation Mono,monospace"><fo:inline keep-together.within-line="always" hyphenate="false"><fo:basic-link external-destination="mailto:jonathan.robie@gmail.com" font-style="italic" color="#0066cc">jonathan.robie@gmail.com</fo:basic-link></fo:inline></fo:inline></fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell number-columns-spanned="3" padding-bottom="25pt" font-weight="normal" padding-left="16pt"><fo:block>
					<fo:table id="idm139680676592576" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em" table-layout="fixed" width="100%"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-body start-indent="0pt" end-indent="0pt"><fo:table-row><fo:table-cell><fo:block>Eliminated Array Pairs.</fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell><fo:block>Renamed "member accessors" =&gt; "member selectors"</fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell><fo:block>Changed semantics of the empty member selector, which now returns all Objects at the top level or below.</fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell><fo:block>Changed signature of json:delete() to always require the Array or Object as a parameter. Pairs no longer point to the Array or Object that contain them.</fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell><fo:block>Changed namespaces used in the document. Functions and errors have separate namespaces. Functions used to implement operators and JDM accessors are abstract, and have a prefix that is not bound to a namespace.</fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell><fo:block>Removed isnull() function - compare to null insteadl</fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell><fo:block>Removed whitespace requirement for ":" in PairConstructor, require the operands of a PairConstructor to be AdditiveExprs.</fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell><fo:block>Specified that object lookup uses the codepoint collation.</fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table>

				</fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell font-weight="bold" padding-left="4pt" padding-right="4pt" padding-top="2pt" padding-bottom="2pt" padding-start="2pt" padding-end="2pt"><fo:block>Revision 0-16</fo:block></fo:table-cell><fo:table-cell font-weight="bold" padding-left="4pt" padding-right="4pt" padding-top="2pt" padding-bottom="2pt" padding-start="2pt" padding-end="2pt"><fo:block>Tue Oct 11 2011</fo:block></fo:table-cell><fo:table-cell font-weight="bold" padding-left="4pt" padding-right="4pt" padding-top="2pt" padding-bottom="2pt" padding-start="2pt" padding-end="2pt"><fo:block>Jonathan Robie <fo:inline font-family="Liberation Mono,monospace"><fo:inline keep-together.within-line="always" hyphenate="false"><fo:basic-link external-destination="mailto:jonathan.robie@gmail.com" font-style="italic" color="#0066cc">jonathan.robie@gmail.com</fo:basic-link></fo:inline></fo:inline></fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell number-columns-spanned="3" padding-bottom="25pt" font-weight="normal" padding-left="16pt"><fo:block>
					<fo:table id="idm139680676583920" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em" table-layout="fixed" width="100%"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-body start-indent="0pt" end-indent="0pt"><fo:table-row><fo:table-cell><fo:block>Eliminated typed-value() and string-value() accessors for Pair.</fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell><fo:block>Redefined atomization to use unboxing; defined type value and string value in terms of unboxing.</fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell><fo:block>Changed signatures of many functions to make them more precise.</fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell><fo:block>Fixed "tuesday" query - result is now "day": "Monday".</fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell><fo:block>Introduced "structured items" base class for nodes and JSON Items.</fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell><fo:block>Added StructuredItemTest.</fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell><fo:block>Removed string arguments from JSONPairTest, JSONObjectPairTest, JSONArrayPairTest.</fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell><fo:block>Specified update primitives.</fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell><fo:block>Made signatures of update primitives more precise.</fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell><fo:block>Stated that NaN and Infinity are instances of <fo:inline font-weight="bold" font-family="Liberation Mono,monospace">xs:double</fo:inline>.</fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell><fo:block>Clarified order of results for () on Arrays.</fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell><fo:block>Changed "unordered" to implementation-defined order.</fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell><fo:block>Minor editorial changes.</fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table>

				</fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell font-weight="bold" padding-left="4pt" padding-right="4pt" padding-top="2pt" padding-bottom="2pt" padding-start="2pt" padding-end="2pt"><fo:block>Revision 0-15</fo:block></fo:table-cell><fo:table-cell font-weight="bold" padding-left="4pt" padding-right="4pt" padding-top="2pt" padding-bottom="2pt" padding-start="2pt" padding-end="2pt"><fo:block>Thu Sep 22 2011</fo:block></fo:table-cell><fo:table-cell font-weight="bold" padding-left="4pt" padding-right="4pt" padding-top="2pt" padding-bottom="2pt" padding-start="2pt" padding-end="2pt"><fo:block>Jonathan Robie <fo:inline font-family="Liberation Mono,monospace"><fo:inline keep-together.within-line="always" hyphenate="false"><fo:basic-link external-destination="mailto:jonathan.robie@gmail.com" font-style="italic" color="#0066cc">jonathan.robie@gmail.com</fo:basic-link></fo:inline></fo:inline></fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell number-columns-spanned="3" padding-bottom="25pt" font-weight="normal" padding-left="16pt"><fo:block>
					<fo:table id="idm139680676573088" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em" table-layout="fixed" width="100%"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-body start-indent="0pt" end-indent="0pt"><fo:table-row><fo:table-cell><fo:block>Pairs now have typed-values again. No other JSONiq Item does.</fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell><fo:block>Unboxing pairs is now part of atomization.</fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell><fo:block>In the XQ-- subset of JSONiq, atomizing a Pair is defined as unboxing it. The remaining steps of atomization are irrelevant, because XML values do not occur.</fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell><fo:block>Unboxing pairs is also done for the value expression of Array Constructors and Object Constructors. These do not atomize.</fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell><fo:block>The content expressions of element constructors unbox Pairs and flatten arrays. (In other content expressions, atomization is done, so explicit unboxing is not needed.)</fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell><fo:block>Removed dangling references to context items in two function descriptions.</fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell><fo:block>Changed erroneous KindTest to ItemType in several sentences.</fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell><fo:block>Added a footnote clarifying that the identity of JSON Item is used only in PULs.</fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell><fo:block>Changed name of json() to json-doc()</fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell><fo:block>Changed signature of json-doc(), parse-json() to return json-item()?</fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell><fo:block>Put public functions in the <fo:inline font-weight="bold" font-family="Liberation Mono,monospace">json</fo:inline> namespace. </fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell><fo:block>Stated that string serialization uses JSON escape conventions.</fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell><fo:block>Stated that serialization of XML as string content uses serialization parameters and standard serialization.</fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table>
					
				</fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell font-weight="bold" padding-left="4pt" padding-right="4pt" padding-top="2pt" padding-bottom="2pt" padding-start="2pt" padding-end="2pt"><fo:block>Revision 0-14</fo:block></fo:table-cell><fo:table-cell font-weight="bold" padding-left="4pt" padding-right="4pt" padding-top="2pt" padding-bottom="2pt" padding-start="2pt" padding-end="2pt"><fo:block>Mon Sep 19 2011</fo:block></fo:table-cell><fo:table-cell font-weight="bold" padding-left="4pt" padding-right="4pt" padding-top="2pt" padding-bottom="2pt" padding-start="2pt" padding-end="2pt"><fo:block>Jonathan Robie <fo:inline font-family="Liberation Mono,monospace"><fo:inline keep-together.within-line="always" hyphenate="false"><fo:basic-link external-destination="mailto:jonathan.robie@gmail.com" font-style="italic" color="#0066cc">jonathan.robie@gmail.com</fo:basic-link></fo:inline></fo:inline></fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell number-columns-spanned="3" padding-bottom="25pt" font-weight="normal" padding-left="16pt"><fo:block>
					<fo:table id="idm139680676560816" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em" table-layout="fixed" width="100%"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-body start-indent="0pt" end-indent="0pt"><fo:table-row><fo:table-cell><fo:block>JSONiq Items no longer have typed values.</fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell><fo:block>Atomization is now defined only for Pairs, which are now unboxed before atomization, then treated as any other value.</fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell><fo:block>In content sequences, Pairs are unboxed, Arrays are flattened, and Objects still raise errors.</fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell><fo:block>Extra-grammatical constraint added: whitespace must occur before and after a ":".</fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell><fo:block>Explicitly stated that a standalone Pair raises an error when serializing.</fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell><fo:block>If a Pair occurs in the value expression of a Pair Constructor, it is unboxed.</fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell><fo:block>Defined the flatten() function to flatten arrays recursively.</fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell><fo:block>Defined serialization for <fo:inline font-weight="bold" font-family="Liberation Mono,monospace">json:null</fo:inline>.</fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table>

				</fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell font-weight="bold" padding-left="4pt" padding-right="4pt" padding-top="2pt" padding-bottom="2pt" padding-start="2pt" padding-end="2pt"><fo:block>Revision 0-13</fo:block></fo:table-cell><fo:table-cell font-weight="bold" padding-left="4pt" padding-right="4pt" padding-top="2pt" padding-bottom="2pt" padding-start="2pt" padding-end="2pt"><fo:block>Fri Sep 2 2011</fo:block></fo:table-cell><fo:table-cell font-weight="bold" padding-left="4pt" padding-right="4pt" padding-top="2pt" padding-bottom="2pt" padding-start="2pt" padding-end="2pt"><fo:block>Jonathan Robie <fo:inline font-family="Liberation Mono,monospace"><fo:inline keep-together.within-line="always" hyphenate="false"><fo:basic-link external-destination="mailto:jonathan.robie@gmail.com" font-style="italic" color="#0066cc">jonathan.robie@gmail.com</fo:basic-link></fo:inline></fo:inline></fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell number-columns-spanned="3" padding-bottom="25pt" font-weight="normal" padding-left="16pt"><fo:block>
					<fo:table id="idm139680676552256" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em" table-layout="fixed" width="100%"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-body start-indent="0pt" end-indent="0pt"><fo:table-row><fo:table-cell><fo:block>Refers to XQ++ and XQ-- grammars on the JSONiq site.</fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell><fo:block>Tutorial is now a separate document.</fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell><fo:block>Data Model appendix is now part of the main text.</fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell><fo:block>Member accessors are defined independently of dynamic function invocation.</fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell><fo:block>Arrays have a typed value again.</fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell><fo:block>Added type hierarchy diagram.</fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell><fo:block>JSON Item tests are ItemTests, no longer KindTests.</fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell><fo:block>Renamed node types and item tests for consistency, changing terminology in the text to match.</fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell><fo:block>Added item tests for all JSON Item types.</fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell><fo:block>Added isnull() function.</fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell><fo:block>Moved updates out of an appendix and into the main text.</fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table>

				</fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell font-weight="bold" padding-left="4pt" padding-right="4pt" padding-top="2pt" padding-bottom="2pt" padding-start="2pt" padding-end="2pt"><fo:block>Revision 0-12</fo:block></fo:table-cell><fo:table-cell font-weight="bold" padding-left="4pt" padding-right="4pt" padding-top="2pt" padding-bottom="2pt" padding-start="2pt" padding-end="2pt"><fo:block>Mon Aug 22 2011</fo:block></fo:table-cell><fo:table-cell font-weight="bold" padding-left="4pt" padding-right="4pt" padding-top="2pt" padding-bottom="2pt" padding-start="2pt" padding-end="2pt"><fo:block>Jonathan Robie <fo:inline font-family="Liberation Mono,monospace"><fo:inline keep-together.within-line="always" hyphenate="false"><fo:basic-link external-destination="mailto:jonathan.robie@gmail.com" font-style="italic" color="#0066cc">jonathan.robie@gmail.com</fo:basic-link></fo:inline></fo:inline></fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell number-columns-spanned="3" padding-bottom="25pt" font-weight="normal" padding-left="16pt"><fo:block>
					<fo:table id="idm139680676542960" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em" table-layout="fixed" width="100%"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-body start-indent="0pt" end-indent="0pt"><fo:table-row><fo:table-cell><fo:block>Neither Object nor Array have typed values now.</fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell><fo:block>Coined the term "member accessors".</fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell><fo:block>New section calls out semantics of Pair.</fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell><fo:block>Filled in type signatures of functions, added size().</fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell><fo:block>Added Group By queries to Sample Queries.</fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell><fo:block>Moved Satellites query to Sample Queries.</fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell><fo:block>General reorganization, editorial changes.</fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table>

				</fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell font-weight="bold" padding-left="4pt" padding-right="4pt" padding-top="2pt" padding-bottom="2pt" padding-start="2pt" padding-end="2pt"><fo:block>Revision 0-11</fo:block></fo:table-cell><fo:table-cell font-weight="bold" padding-left="4pt" padding-right="4pt" padding-top="2pt" padding-bottom="2pt" padding-start="2pt" padding-end="2pt"><fo:block>Fri Aug 12 2011</fo:block></fo:table-cell><fo:table-cell font-weight="bold" padding-left="4pt" padding-right="4pt" padding-top="2pt" padding-bottom="2pt" padding-start="2pt" padding-end="2pt"><fo:block>Jonathan Robie <fo:inline font-family="Liberation Mono,monospace"><fo:inline keep-together.within-line="always" hyphenate="false"><fo:basic-link external-destination="mailto:jonathan.robie@gmail.com" font-style="italic" color="#0066cc">jonathan.robie@gmail.com</fo:basic-link></fo:inline></fo:inline></fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell number-columns-spanned="3" padding-bottom="25pt" font-weight="normal" padding-left="16pt"><fo:block>
					<fo:table id="idm139680676535536" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em" table-layout="fixed" width="100%"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-body start-indent="0pt" end-indent="0pt"><fo:table-row><fo:table-cell><fo:block>Added updating functions, revised update example to use them.</fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table>

				</fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell font-weight="bold" padding-left="4pt" padding-right="4pt" padding-top="2pt" padding-bottom="2pt" padding-start="2pt" padding-end="2pt"><fo:block>Revision 0-10</fo:block></fo:table-cell><fo:table-cell font-weight="bold" padding-left="4pt" padding-right="4pt" padding-top="2pt" padding-bottom="2pt" padding-start="2pt" padding-end="2pt"><fo:block>Wed Aug 10 2011</fo:block></fo:table-cell><fo:table-cell font-weight="bold" padding-left="4pt" padding-right="4pt" padding-top="2pt" padding-bottom="2pt" padding-start="2pt" padding-end="2pt"><fo:block>Jonathan Robie <fo:inline font-family="Liberation Mono,monospace"><fo:inline keep-together.within-line="always" hyphenate="false"><fo:basic-link external-destination="mailto:jonathan.robie@gmail.com" font-style="italic" color="#0066cc">jonathan.robie@gmail.com</fo:basic-link></fo:inline></fo:inline></fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell number-columns-spanned="3" padding-bottom="25pt" font-weight="normal" padding-left="16pt"><fo:block>
					<fo:table id="idm139680676530720" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em" table-layout="fixed" width="100%"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-body start-indent="0pt" end-indent="0pt"><fo:table-row><fo:table-cell><fo:block>New representation of objects, arrays, pairs in the data model. No longer nodes or function items.</fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell><fo:block>Changed representation of nulls.</fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell><fo:block>Navigation primitives now return pairs, not values.</fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table>

				</fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell font-weight="bold" padding-left="4pt" padding-right="4pt" padding-top="2pt" padding-bottom="2pt" padding-start="2pt" padding-end="2pt"><fo:block>Revision 0-09</fo:block></fo:table-cell><fo:table-cell font-weight="bold" padding-left="4pt" padding-right="4pt" padding-top="2pt" padding-bottom="2pt" padding-start="2pt" padding-end="2pt"><fo:block>Tue Aug 9 2011</fo:block></fo:table-cell><fo:table-cell font-weight="bold" padding-left="4pt" padding-right="4pt" padding-top="2pt" padding-bottom="2pt" padding-start="2pt" padding-end="2pt"><fo:block>Jonathan Robie <fo:inline font-family="Liberation Mono,monospace"><fo:inline keep-together.within-line="always" hyphenate="false"><fo:basic-link external-destination="mailto:jonathan.robie@gmail.com" font-style="italic" color="#0066cc">jonathan.robie@gmail.com</fo:basic-link></fo:inline></fo:inline></fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell number-columns-spanned="3" padding-bottom="25pt" font-weight="normal" padding-left="16pt"><fo:block>
					<fo:table id="idm139680676525088" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em" table-layout="fixed" width="100%"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-body start-indent="0pt" end-indent="0pt"><fo:table-row><fo:table-cell><fo:block>Significantly changed data model. Pairs now serve as the container for values, in both Arrays and Objects. PULs will now need to be defined for pairs, objects, or arrays, not at the level of a single value.</fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell><fo:block>Changed to new path syntax.</fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table>

				</fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell font-weight="bold" padding-left="4pt" padding-right="4pt" padding-top="2pt" padding-bottom="2pt" padding-start="2pt" padding-end="2pt"><fo:block>Revision 0-07</fo:block></fo:table-cell><fo:table-cell font-weight="bold" padding-left="4pt" padding-right="4pt" padding-top="2pt" padding-bottom="2pt" padding-start="2pt" padding-end="2pt"><fo:block>Fri Jul 15 2011</fo:block></fo:table-cell><fo:table-cell font-weight="bold" padding-left="4pt" padding-right="4pt" padding-top="2pt" padding-bottom="2pt" padding-start="2pt" padding-end="2pt"><fo:block>Jonathan Robie <fo:inline font-family="Liberation Mono,monospace"><fo:inline keep-together.within-line="always" hyphenate="false"><fo:basic-link external-destination="mailto:jonathan.robie@gmail.com" font-style="italic" color="#0066cc">jonathan.robie@gmail.com</fo:basic-link></fo:inline></fo:inline></fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell number-columns-spanned="3" padding-bottom="25pt" font-weight="normal" padding-left="16pt"><fo:block>
					<fo:table id="idm139680676519680" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em" table-layout="fixed" width="100%"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-body start-indent="0pt" end-indent="0pt"><fo:table-row><fo:table-cell><fo:block>Removed special case positional filters for arrays.</fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell><fo:block>Removed special case conversion of sequences to arrays in object values.</fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell><fo:block>Removed extraneous constraint for objects in insert before / after.</fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table>

				</fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell font-weight="bold" padding-left="4pt" padding-right="4pt" padding-top="2pt" padding-bottom="2pt" padding-start="2pt" padding-end="2pt"><fo:block>Revision 0-06</fo:block></fo:table-cell><fo:table-cell font-weight="bold" padding-left="4pt" padding-right="4pt" padding-top="2pt" padding-bottom="2pt" padding-start="2pt" padding-end="2pt"><fo:block>Thu Jul 14 2011</fo:block></fo:table-cell><fo:table-cell font-weight="bold" padding-left="4pt" padding-right="4pt" padding-top="2pt" padding-bottom="2pt" padding-start="2pt" padding-end="2pt"><fo:block>Jonathan Robie <fo:inline font-family="Liberation Mono,monospace"><fo:inline keep-together.within-line="always" hyphenate="false"><fo:basic-link external-destination="mailto:jonathan.robie@gmail.com" font-style="italic" color="#0066cc">jonathan.robie@gmail.com</fo:basic-link></fo:inline></fo:inline></fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell number-columns-spanned="3" padding-bottom="25pt" font-weight="normal" padding-left="16pt"><fo:block>
					<fo:table id="idm139680676513968" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em" table-layout="fixed" width="100%"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-body start-indent="0pt" end-indent="0pt"><fo:table-row><fo:table-cell><fo:block>Added status section to emphasize that we are in very early stages.</fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell><fo:block>Changed positioning in the introduction.</fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell><fo:block>Added an update example.</fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell><fo:block>Added an appendix listing changes needed for the XQuery Update Facility.</fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell><fo:block>Added navigation primitives; defined navigation functions in terms of these primitives.</fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table>

				</fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell font-weight="bold" padding-left="4pt" padding-right="4pt" padding-top="2pt" padding-bottom="2pt" padding-start="2pt" padding-end="2pt"><fo:block>Revision 0-05</fo:block></fo:table-cell><fo:table-cell font-weight="bold" padding-left="4pt" padding-right="4pt" padding-top="2pt" padding-bottom="2pt" padding-start="2pt" padding-end="2pt"><fo:block>Wed Jul 06 2011</fo:block></fo:table-cell><fo:table-cell font-weight="bold" padding-left="4pt" padding-right="4pt" padding-top="2pt" padding-bottom="2pt" padding-start="2pt" padding-end="2pt"><fo:block>Jonathan Robie <fo:inline font-family="Liberation Mono,monospace"><fo:inline keep-together.within-line="always" hyphenate="false"><fo:basic-link external-destination="mailto:jonathan.robie@gmail.com" font-style="italic" color="#0066cc">jonathan.robie@gmail.com</fo:basic-link></fo:inline></fo:inline></fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell number-columns-spanned="3" padding-bottom="25pt" font-weight="normal" padding-left="16pt"><fo:block>
					<fo:table id="idm139680676507360" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em" table-layout="fixed" width="100%"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-body start-indent="0pt" end-indent="0pt"><fo:table-row><fo:table-cell><fo:block>Serialization now uses JSONiq values, with a type and a serialized string, for things that JSON can not represent directly.</fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell><fo:block>Changed the verb used in an example.</fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table>

				</fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell font-weight="bold" padding-left="4pt" padding-right="4pt" padding-top="2pt" padding-bottom="2pt" padding-start="2pt" padding-end="2pt"><fo:block>Revision 0-04</fo:block></fo:table-cell><fo:table-cell font-weight="bold" padding-left="4pt" padding-right="4pt" padding-top="2pt" padding-bottom="2pt" padding-start="2pt" padding-end="2pt"><fo:block>Tue Jul 05 2011</fo:block></fo:table-cell><fo:table-cell font-weight="bold" padding-left="4pt" padding-right="4pt" padding-top="2pt" padding-bottom="2pt" padding-start="2pt" padding-end="2pt"><fo:block>Jonathan Robie <fo:inline font-family="Liberation Mono,monospace"><fo:inline keep-together.within-line="always" hyphenate="false"><fo:basic-link external-destination="mailto:jonathan.robie@gmail.com" font-style="italic" color="#0066cc">jonathan.robie@gmail.com</fo:basic-link></fo:inline></fo:inline></fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell number-columns-spanned="3" padding-bottom="25pt" font-weight="normal" padding-left="16pt"><fo:block>
					<fo:table id="idm139680676502032" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em" table-layout="fixed" width="100%"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-body start-indent="0pt" end-indent="0pt"><fo:table-row><fo:table-cell><fo:block>Revised author list.</fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell><fo:block>Added explicit JDM representation of nulls.</fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell><fo:block>Changed definition of 'value()' - it now returns the empty sequence rather than a type error for nodes that have no value, and the set of nodes for which it is defined has changed.</fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell><fo:block>Added return type to times-ten() function, showed function call.</fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell><fo:block>Removed superfluous space from svg example.</fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell><fo:block>Changed definition of serialization.</fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell><fo:block>Fixed stock holdings example.</fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell><fo:block>Items are now copied into arrays or objects, rather than using references to nodes in existing hierarchies.</fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table>

				</fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell font-weight="bold" padding-left="4pt" padding-right="4pt" padding-top="2pt" padding-bottom="2pt" padding-start="2pt" padding-end="2pt"><fo:block>Revision 0-03</fo:block></fo:table-cell><fo:table-cell font-weight="bold" padding-left="4pt" padding-right="4pt" padding-top="2pt" padding-bottom="2pt" padding-start="2pt" padding-end="2pt"><fo:block>Mon Jun 27 2011</fo:block></fo:table-cell><fo:table-cell font-weight="bold" padding-left="4pt" padding-right="4pt" padding-top="2pt" padding-bottom="2pt" padding-start="2pt" padding-end="2pt"><fo:block>Jonathan Robie <fo:inline font-family="Liberation Mono,monospace"><fo:inline keep-together.within-line="always" hyphenate="false"><fo:basic-link external-destination="mailto:jonathan.robie@gmail.com" font-style="italic" color="#0066cc">jonathan.robie@gmail.com</fo:basic-link></fo:inline></fo:inline></fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell number-columns-spanned="3" padding-bottom="25pt" font-weight="normal" padding-left="16pt"><fo:block>
					<fo:table id="idm139680676493728" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em" table-layout="fixed" width="100%"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-body start-indent="0pt" end-indent="0pt"><fo:table-row><fo:table-cell><fo:block>Removed references to XQ--, XQ++, which are not yet well specified.</fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell><fo:block>Finished simple value nodes for XQuery atomic values.</fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell><fo:block>Reworked typed value of nodes, added examples and further explanation to "Combining XML and JSON".</fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell><fo:block>General reorganization and rewriting of introduction.</fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell><fo:block>Added "JSON views in middleware" example.</fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell><fo:block>Added "JSON Arrays to HTML Tables" example.</fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell><fo:block>Added "Transforming to SVG" example.</fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell><fo:block>Added KindTests, with an example.</fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell><fo:block>Added section on combining XML, JSON.</fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell><fo:block>Added extended example to show ramifications of atomization.</fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell><fo:block>Added superficial, hand-wavy section on serialization. Needs discussion / fleshing out.</fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell><fo:block>Reorganized section on navigating JSON objects and arrays.</fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table>

				</fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell font-weight="bold" padding-left="4pt" padding-right="4pt" padding-top="2pt" padding-bottom="2pt" padding-start="2pt" padding-end="2pt"><fo:block>Revision 0-02</fo:block></fo:table-cell><fo:table-cell font-weight="bold" padding-left="4pt" padding-right="4pt" padding-top="2pt" padding-bottom="2pt" padding-start="2pt" padding-end="2pt"><fo:block>Fri Jun 24 2011</fo:block></fo:table-cell><fo:table-cell font-weight="bold" padding-left="4pt" padding-right="4pt" padding-top="2pt" padding-bottom="2pt" padding-start="2pt" padding-end="2pt"><fo:block>Jonathan Robie <fo:inline font-family="Liberation Mono,monospace"><fo:inline keep-together.within-line="always" hyphenate="false"><fo:basic-link external-destination="mailto:jonathan.robie@gmail.com" font-style="italic" color="#0066cc">jonathan.robie@gmail.com</fo:basic-link></fo:inline></fo:inline></fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell number-columns-spanned="3" padding-bottom="25pt" font-weight="normal" padding-left="16pt"><fo:block>
					<fo:table id="idm139680686924528" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em" table-layout="fixed" width="100%"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-body start-indent="0pt" end-indent="0pt"><fo:table-row><fo:table-cell><fo:block>Clarified datatypes used for numeric types.</fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell><fo:block>Fixed typo in JSONPair grammar.</fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell><fo:block>Added text and an example to clarify use of child axis for JSON Pair Nodes.</fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell><fo:block>Added value() for pair nodes.</fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell><fo:block>Added json() function, similar to XQuery's doc() function.</fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell><fo:block>Added parse-json() function, similar to XQuery's parse-xml() function.</fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell><fo:block>Started a section on combining XML and JSON. Not done yet.</fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell><fo:block>Defined atomization for simple value nodes.</fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table>

				</fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell font-weight="bold" padding-left="4pt" padding-right="4pt" padding-top="2pt" padding-bottom="2pt" padding-start="2pt" padding-end="2pt"><fo:block>Revision 0-01</fo:block></fo:table-cell><fo:table-cell font-weight="bold" padding-left="4pt" padding-right="4pt" padding-top="2pt" padding-bottom="2pt" padding-start="2pt" padding-end="2pt"><fo:block>Thu Jun 23 2011</fo:block></fo:table-cell><fo:table-cell font-weight="bold" padding-left="4pt" padding-right="4pt" padding-top="2pt" padding-bottom="2pt" padding-start="2pt" padding-end="2pt"><fo:block>Jonathan Robie <fo:inline font-family="Liberation Mono,monospace"><fo:inline keep-together.within-line="always" hyphenate="false"><fo:basic-link external-destination="mailto:jonathan.robie@gmail.com" font-style="italic" color="#0066cc">jonathan.robie@gmail.com</fo:basic-link></fo:inline></fo:inline></fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell number-columns-spanned="3" padding-bottom="25pt" font-weight="normal" padding-left="16pt"><fo:block>
					<fo:table id="idm139680686916416" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em" table-layout="fixed" width="100%"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-body start-indent="0pt" end-indent="0pt"><fo:table-row><fo:table-cell><fo:block>Specified filter expressions for Array nodes.</fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell><fo:block>Added XDM mapping, in an appendix.</fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell><fo:block>Clarified typed-value, string-value for arrays and objects.</fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell><fo:block>NameTest no longer matches Pair Nodes. The differences between JSON names and XML names caused problems because (1) the characters allowed in a NameTest and a JSON string differ, and (2) an unprefixed name in a Nametest is in the default namespace, all JSON strings are in no namespace.</fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell><fo:block>Array constructors now allow empty arrays; Object constructors now allow empty objects.</fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell><fo:block>Made JSONPair available as a primary expression.</fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell><fo:block>Added Stellarium example to introduction.</fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell><fo:block>Incorporated navigation functions based on this week's feedback.</fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table>

				</fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell font-weight="bold" padding-left="4pt" padding-right="4pt" padding-top="2pt" padding-bottom="2pt" padding-start="2pt" padding-end="2pt"><fo:block>Revision 0-00</fo:block></fo:table-cell><fo:table-cell font-weight="bold" padding-left="4pt" padding-right="4pt" padding-top="2pt" padding-bottom="2pt" padding-start="2pt" padding-end="2pt"><fo:block>Fri Jun 17 2011</fo:block></fo:table-cell><fo:table-cell font-weight="bold" padding-left="4pt" padding-right="4pt" padding-top="2pt" padding-bottom="2pt" padding-start="2pt" padding-end="2pt"><fo:block>Jonathan Robie <fo:inline font-family="Liberation Mono,monospace"><fo:inline keep-together.within-line="always" hyphenate="false"><fo:basic-link external-destination="mailto:jonathan.robie@gmail.com" font-style="italic" color="#0066cc">jonathan.robie@gmail.com</fo:basic-link></fo:inline></fo:inline></fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell number-columns-spanned="3" padding-bottom="25pt" font-weight="normal" padding-left="16pt"><fo:block>
					<fo:table id="idm139680686908080" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em" table-layout="fixed" width="100%"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-body start-indent="0pt" end-indent="0pt"><fo:table-row><fo:table-cell><fo:block>Imported spec into publican.</fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table>

				</fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table>

	</fo:block></fo:flow></fo:page-sequence><fo:page-sequence hyphenate="true" master-reference="index" language="en" format="1" initial-page-number="auto-odd" force-page-count="end-on-even" hyphenation-character="-" hyphenation-push-character-count="2" hyphenation-remain-character-count="2"><fo:static-content flow-name="xsl-region-before-first"><fo:block wrap-option="no-wrap" font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" margin-left="0pt"><fo:table table-layout="fixed" width="100%" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(0)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="before" relative-align="baseline"><fo:block/></fo:table-cell><fo:table-cell text-align="center" display-align="before" relative-align="baseline"><fo:block/></fo:table-cell><fo:table-cell text-align="right" display-align="before" relative-align="baseline"><fo:block/></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-before-odd"><fo:block wrap-option="no-wrap" font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" margin-left="0pt"><fo:table table-layout="fixed" width="100%" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(0)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="before" relative-align="baseline"><fo:block/></fo:table-cell><fo:table-cell text-align="center" display-align="before" relative-align="baseline"><fo:block/></fo:table-cell><fo:table-cell text-align="right" display-align="before" relative-align="baseline"><fo:block><fo:inline keep-together.within-line="always"><fo:retrieve-marker retrieve-class-name="section.head.marker" retrieve-position="first-including-carryover" retrieve-boundary="page-sequence"/></fo:inline></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-before-even"><fo:block wrap-option="no-wrap" font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" margin-left="0pt"><fo:table table-layout="fixed" width="100%" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(0)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="before" relative-align="baseline"><fo:block><fo:inline keep-together.within-line="always" font-weight="bold">Index</fo:inline></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="before" relative-align="baseline"><fo:block/></fo:table-cell><fo:table-cell text-align="right" display-align="before" relative-align="baseline"><fo:block/></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-before-blank"><fo:block wrap-option="no-wrap" font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" margin-left="0pt"><fo:table table-layout="fixed" width="100%" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(0)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="before" relative-align="baseline"><fo:block/></fo:table-cell><fo:table-cell text-align="center" display-align="before" relative-align="baseline"><fo:block/></fo:table-cell><fo:table-cell text-align="right" display-align="before" relative-align="baseline"><fo:block/></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" flow-name="xsl-footnote-separator"><fo:block margin-top="2em"><fo:leader color="black" leader-pattern="rule" leader-length="1in"/></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-inner-first"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-inner-odd"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-inner-even"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-inner-blank"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-outer-first"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-outer-odd"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-outer-even"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-outer-blank"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-after-first"><fo:block font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" margin-left="0pt"><fo:table table-layout="fixed" width="100%" border-top-width="0.5pt" border-top-style="solid" border-top-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="end" display-align="after" relative-align="baseline"><fo:block><fo:block><fo:page-number/></fo:block></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-after-odd"><fo:block font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" margin-left="0pt"><fo:table table-layout="fixed" width="100%" border-top-width="0.5pt" border-top-style="solid" border-top-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="end" display-align="after" relative-align="baseline"><fo:block><fo:block><fo:page-number/></fo:block></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-after-even"><fo:block font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" margin-left="0pt"><fo:table table-layout="fixed" width="100%" border-top-width="0.5pt" border-top-style="solid" border-top-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="after" relative-align="baseline"><fo:block><fo:block><fo:page-number/></fo:block></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="end" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-after-blank"><fo:block font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" margin-left="0pt"><fo:table table-layout="fixed" width="100%" border-top-width="0.5pt" border-top-style="solid" border-top-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="after" relative-align="baseline"><fo:block><fo:block><fo:page-number/></fo:block></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="end" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:flow flow-name="xsl-region-body"><fo:block id="idm139680683489824"><fo:block><fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" margin-left="0pt" font-size="18" font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" font-weight="bold"><fo:block xmlns:axf="http://www.antennahouse.com/names/XSL/Extensions" keep-with-next.within-column="always" space-before.optimum="10pt" space-before.minimum="10pt" space-before.maximum="10pt" hyphenate="false" color="#336699" text-align="left" start-indent="0pc" span="inherit" hyphenation-character="-" hyphenation-push-character-count="2" hyphenation-remain-character-count="2">Index</fo:block></fo:block></fo:block></fo:block></fo:block><fo:block xmlns:rx="http://www.renderx.com/XSL/Extensions" xmlns:axf="http://www.antennahouse.com/names/XSL/Extensions"/></fo:flow></fo:page-sequence></fo:root>