<?xml version='1.0' encoding='utf-8' ?>
<!DOCTYPE appendix PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN" "http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd" [
<!ENTITY PRODUCT "JSONiq">
<!ENTITY BOOKID "JSONiq">
<!ENTITY YEAR "2013">
<!ENTITY HOLDER "28.io">
]>
<appendix id="appe-JSONiq-Revision_History">
	<title>Revision History</title>
	 <simpara>
		<revhistory>
			<revision>
				<revnumber>1-12</revnumber>
				 <date>Triday Aug 7th, 2015</date>
				 <author>
					<firstname>Ghislain</firstname>
					 <surname>Fourny</surname>
					 <email>g@28.io</email>

				</author>
				 <revdescription>
					<simplelist>
						<member> Added ?: syntax. </member>

					</simplelist>

				</revdescription>

			</revision>
			 <revision>
				<revnumber>1-11</revnumber>
				 <date>Tuesday Aug 13th, 2013</date>
				 <author>
					<firstname>Ghislain</firstname>
					 <surname>Fourny</surname>
					 <email>g@28.io</email>

				</author>
				 <revdescription>
					<simplelist>
						<member> Refactored definition of parse-json to make options clear. </member>
						 <member> Fixed signature of size() to return "integer?". </member>
						 <member> Fixed signature of descendant-arrays() to return "array*". </member>

					</simplelist>

				</revdescription>

			</revision>
			 <revision>
				<revnumber>1-10</revnumber>
				 <date>Thursday Aug 8th, 2013</date>
				 <author>
					<firstname>Ghislain</firstname>
					 <surname>Fourny</surname>
					 <email>g@28.io</email>

				</author>
				 <revdescription>
					<simplelist>
						<member> Fixed semantics of libjn:project() to make it consistent with the other functions. </member>
						 <member> Added libjn:remove-keys() which does the contrary of libjn:project(), i.e., removes the given keys from all input objects. </member>

					</simplelist>

				</revdescription>

			</revision>
			 <revision>
				<revnumber>1-9</revnumber>
				 <date>Monday July 22th, 2013</date>
				 <author>
					<firstname>Ghislain</firstname>
					 <surname>Fourny</surname>
					 <email>g@28.io</email>

				</author>
				 <revdescription>
					<simplelist>
						<member> Relaxed the functions descendant-objects, descendant-pairs, values, flatten, project to accept any sequence of items. The behavior on mixed sequences is consistent with object and array lookup. Also introduced new function descendant-arrays and relaxed size to accept the empty sequence. </member>
						 <member> Relaxed boolean value of sequences beginning with an object or array to be true. </member>

					</simplelist>

				</revdescription>

			</revision>
			 <revision>
				<revnumber>1-8</revnumber>
				 <date>Tuesday June 18th, 2013</date>
				 <author>
					<firstname>Ghislain</firstname>
					 <surname>Fourny</surname>
					 <email>g@28.io</email>

				</author>
				 <revdescription>
					<simplelist>
						<member>New array navigation syntax to avoid overloading dynamic function call syntax as well as predicate syntax: $array[[$position]] (was: $array($position)).</member>
						 <member>The functions keys() and members() were relaxed to take any sequence of items as parameters, performing implicit iteration, ignoring non-objects (keys) or non-arrays (members) (was: keys(object), members(array). Now: keys(item*), members(item*)).</member>
						 <member>New array unboxing syntax $array[], a shortcut for members($array). It also performs an implicit iteration.</member>
						 <member>Array lookup casts the position expression to an integer. Object lookup casts the key expression to a string (this reverts the change from 1.0.7)</member>

					</simplelist>

				</revdescription>

			</revision>
			 <revision>
				<revnumber>1-7</revnumber>
				 <date>Monday May 27th, 2013</date>
				 <author>
					<firstname>Ghislain</firstname>
					 <surname>Fourny</surname>
					 <email>g@28.io</email>

				</author>
				 <revdescription>
					<simplelist>
						<member>Relaxed array and object navigation to make it more XPath-like. No more cast is done. Lookup on mixed sequences of items (with an implicit iteration) are allowed. The empty sequence is returned in case of mismatch, i.e. in case of (i) integer lookup on object/atomic or (ii) string lookup on array/atomic.</member>

					</simplelist>

				</revdescription>

			</revision>
			 <revision>
				<revnumber>1-6</revnumber>
				 <date>Friday May 24th, 2013</date>
				 <author>
					<firstname>Ghislain</firstname>
					 <surname>Fourny</surname>
					 <email>g@28.io</email>

				</author>
				 <revdescription>
					<simplelist>
						<member>Reran all queries through a newer Zorba version (trunk 11475).</member>

					</simplelist>

				</revdescription>

			</revision>
			 <revision>
				<revnumber>1-5</revnumber>
				 <date>Thursday May 2nd, 2013</date>
				 <author>
					<firstname>Ghislain</firstname>
					 <surname>Fourny</surname>
					 <email>g@28.io</email>

				</author>
				 <revdescription>
					<simplelist>
						<member>Reran all queries through a newer Zorba version (trunk revision 11426).</member>
						 <member>Corrected some typos, like superfluous prefixes in function library sample queries.</member>

					</simplelist>

				</revdescription>

			</revision>
			 <revision>
				<revnumber>1-4</revnumber>
				 <date>Monday April 8th, 2013</date>
				 <author>
					<firstname>Ghislain</firstname>
					 <surname>Fourny</surname>
					 <email>g@28.io</email>

				</author>
				 <revdescription>
					<simplelist>
						<member>Allowed the context item to appear unparenthesized in an object lookup expression.</member>
						 <member>Added the function parse-json()</member>

					</simplelist>

				</revdescription>

			</revision>
			 <revision>
				<revnumber>1-3</revnumber>
				 <date>Thursday April 4th, 2013</date>
				 <author>
					<firstname>Ghislain</firstname>
					 <surname>Fourny</surname>
					 <email>g@28.io</email>

				</author>
				 <revdescription>
					<simplelist>
						<member>Fixed some typos.</member>

					</simplelist>

				</revdescription>

			</revision>
			 <revision>
				<revnumber>1-2</revnumber>
				 <date>Thursday April 4th, 2013</date>
				 <author>
					<firstname>Ghislain</firstname>
					 <surname>Fourny</surname>
					 <email>g@28.io</email>

				</author>
				 <revdescription>
					<simplelist>
						<member>Null are comparable with other atomic items and are considered the smallest.</member>
						 <member>Added link to semantics for all builtin functions inherited from XQuery.</member>
						 <member>Aggregated some examples.</member>

					</simplelist>

				</revdescription>

			</revision>
			 <revision>
				<revnumber>1-1</revnumber>
				 <date>Tuesday April 2nd, 2013</date>
				 <author>
					<firstname>Ghislain</firstname>
					 <surname>Fourny</surname>
					 <email>g@28.io</email>

				</author>
				 <revdescription>
					<simplelist>
						<member>Initial commit.</member>

					</simplelist>

				</revdescription>

			</revision>

		</revhistory>

	</simpara>
</appendix>

