allowing
and
append
array
as
ascending
at
by
case
cast
castable
catch
collation
copy
count
decimal-format
decimal-separator
declare
default
delete
descending
digit
div
else
empty
empty-sequence
encoding
end
eq
every
external
false
for
from
function
ge
greatest
group
grouping-separator
gt
idiv
if
import
in
infinity
insert
instance
into
item
json
jsoniq
json-item
least
le
let
lt
minus-sign
mod
modify
module
namespace
NaN
ne
next
not
null
object
of
only
or
order
ordered
ordering
pattern-separator
percent
per-mille
previous
rename
replace
return
satisfies
select
sliding
some
stable
start
switch
then
to
tumbling
treat
true
try
typeswitch
unordered
value
version
when
where
window
with
zero-digit
